[
  {
    "objectID": "approaching-analysis.html#sec-aa-diagnose",
    "href": "approaching-analysis.html#sec-aa-diagnose",
    "title": "3  Approaching analysis",
    "section": "\n3.1 Diagnose",
    "text": "3.1 Diagnose\n\nThe purpose of diagnostic measures is to inspect your data to ensure its quality and understand its characteristics. There are two primary types of diagnostic measures: verfication and description. Verification methods are applied to catch missing or erroneous data while descriptive methods are used to gain a better understanding of the data. Although treated in two separate sections, in practice these methods are complementary and are often addressed in tandem.\n\nTo ground this discussion I will introduce a new dataset. This dataset is drawn from the Barcelona English Language Corpus (BELC) (Muñoz 2006), which is found in the TalkBank repository. I’ve selected the “Written composition” task from this corpus which contains 80 writing samples from 36 second language learners of English at different ages. Participants were given the task of writing for 15 minutes on the topic of “Me: my past, present and future”. Data was collected for participants from one to three times over the course of seven years (at 10, 12, 16, and 17 years of age).\nIn Table 3.1 we see the data dictionary for the BELC dataset which reflects structural and transformational steps I’ve done so we start with a tidy dataset with word as the unit of observation.\n\n\n\n\nTable 3.1: Data dictionary for the BELC dataset.\n\nvariable\nname\ndescription\nvariable_type\n\n\n\npart_id\nParticipant ID\nUnique identifier for each participant\ncategorical\n\n\nsex\nParticipant's sex\nSex of the participant\ncategorical\n\n\ngroup\nTime group\nLongitudinal group to which the participant belongs\nordinal\n\n\nmonth_age\nParticipant's age in months\nAge of the participant in months\nnumeric\n\n\nutt_id\nUtterance ID\nUnique identifier for each utterance\nnumeric\n\n\nword_id\nWord ID\nUnique identifier for each word within an utterance\nnumeric\n\n\nword\nWord\nThe word spoken by the participant\ncategorical\n\n\nlemma\nWord lemma\nBase form of the word\ncategorical\n\n\npos\nPart of speech\nGrammatical category of the word\ncategorical\n\n\n\n\n\n\n\n\nThe data dictionary provides a easily accessible overview of the dataset. This includes a human-readable mapping from variable names to variable descriptions. Further, it provides information about the type of variable (e.g., categorical, ordinal, numeric). As we will see the informational type of variables is key to diagnostic measures, as well as all other components of analysis.\n\n3.1.1 Verify\n\nAlthough a dataset has undergone curation and transformation, it is still important to verify the data. This is a process of checking the data to ensure that it is accurate and complete. In the case that it is not, consideration should be given to how to address the issues.\n\nThe most basic and usually the first step is to check for missing data to ensure that all necessary data points are present. In Table 3.2, there are missing values for the lemma and pos variables in the BELC dataset.\n\n\n\n\nTable 3.2: Summary output for missing values in the BELC dataset.\n\nvariable\ntype\nn_missing\ncomplete_rate\n\n\n\npart_id\ncharacter\n0\n1.000\n\n\nsex\ncharacter\n0\n1.000\n\n\ngroup\ncharacter\n0\n1.000\n\n\nword\ncharacter\n0\n1.000\n\n\nlemma\ncharacter\n79\n0.985\n\n\npos\ncharacter\n23\n0.996\n\n\nmonth_age\nnumeric\n0\n1.000\n\n\nutt_id\nnumeric\n0\n1.000\n\n\nword_id\nnumeric\n0\n1.000\n\n\n\n\n\n\n\n\nThere are two primary approaches to dealing with missing data: deletion and recoding. Since these missing values account for only 1.5% and 0.4% of the data respectively, we might be safe to remove these observations. Another approach is to recode the missing values by either applying a unique value for missing values (e.g., NULL) or by imputing values. Imputing values is usually done by replacing missing values with some middle-of-the-road value (e.g., mean, median, mode), but other, more nuanced approaches are possible.\n\n\n\n\n\n\n Dive deeper\nFor more information on missing data, see the  in this book.\n\n\n\nIn either case, it is important to consider the implications of missing data for the analysis. For example, if the missing data is not at random or include a sizeable portion of the values of interest, then the analysis may be biased.\n\nValue coding schemes, annotation errors, or other issues may result in anomalies in the data. These are values that are unusual, unexpected, or inconsistent with the rest of the data or effect the treatment of the data for the particular analysis to be performed.\nFor categorical variables, this may include values that are not expected or are not in the set of values that are expected. A summary of the values for a given variable can be used as a first step to identify anomalies. In Table 3.3, we see the minimum and maximum number of characters and the number of unique values for each categorical variable in the BELC dataset.\n\n\n\n\nTable 3.3: Summary output for categorical variables in the BELC dataset.\n\nvariable\nmin_chars\nmax_chars\nnum_unique\n\n\n\npart_id\n3\n3\n36\n\n\nsex\n4\n6\n2\n\n\ngroup\n2\n2\n4\n\n\nword\n1\n20\n913\n\n\nlemma\n1\n20\n774\n\n\npos\n1\n9\n38\n\n\n\n\n\n\n\n\nFrom our knowledge of the data, we can gauge whether these values are expected. For example, sex has two values; likely corresponding to some coding of ‘male’ and ‘female’. The variable part_id has 36 distinct values, which is expected since there are 36 participants and group has four, corresponding to the longitudinal time groups. It is also possible to gauge the expected values for lemma as we know that these are the base words and should be less than the number of words in the dataset.\nFurther verfication of the categorical variables is need, of course. This may include aggregating the data to see the distribution of values and/ or checking the values against the documentation.\nLet’s now consider numeric variables. Numeric variables, by their very nature, do not lend themselves to the same type of summary used for categorical variables (i.e. character lengths, number of unique values, or aggregation) to detect anomalies. For numeric variables there are two types of anomalies that we will consider: outliers and errors in coding. Outliers are anomalies that are extreme values that are not representative of the great majority of the data points. To determine what is extreme, we need to consider the distribution of the data, that is, the range of values and the frequency of values. It is rarely the case that we can eyeball the distribution of the data based on raw values. Instead, a combination of summary statistics and visualizations are used to determine the distribution of the data. For this reason, the detection of outliers is often carried out as part of the descriptive assessment of the data, as we will see in Section 3.1.2.\nOn the other hand, coding anomalies are values that are not expected or are not in the set of values that are expected. These can sometimes be detected by visual inspection of the data. For example, in Table 3.4, we see the first 10 observations for each variable in the BELC dataset.\n\n\n\n\nTable 3.4: First 10 observations for variables in the BELC dataset.\n\npart_id\nsex\ngroup\nmonth_age\nutt_id\nword_id\nword\nlemma\npos\n\n\n\nL01\nfemale\nT2\n153\n0\n0\nI\nI\npro:sub\n\n\nL01\nfemale\nT2\n153\n0\n1\nwas\nbe\ncop\n\n\nL01\nfemale\nT2\n153\n0\n2\nborn\nborn\nadj\n\n\nL01\nfemale\nT2\n153\n0\n3\nin\nin\nprep\n\n\nL01\nfemale\nT2\n153\n0\n4\nBarcelona\nBarcelona\nn:prop\n\n\nL01\nfemale\nT2\n153\n0\n5\nand\nand\ncoord\n\n\nL01\nfemale\nT2\n153\n0\n6\nI\nI\npro:sub\n\n\nL01\nfemale\nT2\n153\n0\n7\nlive\nlive\nv\n\n\nL01\nfemale\nT2\n153\n0\n8\nin\nin\nprep\n\n\nL01\nfemale\nT2\n153\n0\n9\nBarcelona\nBarcelona\nn:prop\n\n\n\n\n\n\n\n\nLeaving month_age aside, we see that the other two numeric variables utt_id and word_id index utterances and words respectively. However, in contrast to part_id which is a categorical variable as it serves as a unique identifier for each participant, these variables are numeric as they serve to not only index utterances and words but also to provide a measure of how many utterances or words have been produced. Seen in this light, 0 for the first value of utt_id and word_id is unexpected. To adjust for this, we can add 1 to each value of these variables.\n\n3.1.2 Describe\n\nThe goal of descriptive statistics is to summarize the data in order to understand and prepare the data for the analysis approach to be performed. This is accomplished through a combination of statistic measures and/ or tabular or graphic summaries. The choice of descriptive statistics is guided by the type of data, as well as the question(s) being asked of the data.\nTo that end, let’s consider a reconfiguration of the BELC dataset, in Table 3.5, which will provide a more illustrative dataset.\n\n\n\n\nTable 3.5: First 10 observations of the reconfigured BELC dataset.\n\nessay_id\npart_id\nsex\ngroup\ntokens\ntypes\nttr\nprop_l2\n\n\n\nE1\nL01\nfemale\nT2\n79\n46\n0.582\n0.987\n\n\nE2\nL02\nfemale\nT1\n18\n18\n1.000\n0.667\n\n\nE3\nL02\nfemale\nT3\n101\n53\n0.525\n1.000\n\n\nE4\nL05\nfemale\nT1\n20\n17\n0.850\n0.900\n\n\nE5\nL05\nfemale\nT3\n158\n80\n0.506\n0.987\n\n\nE6\nL05\nfemale\nT4\n184\n94\n0.511\n0.995\n\n\nE7\nL07\nmale\nT3\n98\n60\n0.612\n1.000\n\n\nE8\nL07\nmale\nT4\n134\n84\n0.627\n0.978\n\n\nE9\nL10\nfemale\nT1\n38\n28\n0.737\n0.974\n\n\nE10\nL10\nfemale\nT3\n118\n74\n0.627\n1.000\n\n\n\n\n\n\n\n\nIn this new configuration, the unit of observation is now essay_id. Each of the following variable are attributes or measures of this variable. The new variables in this dataset are aggregates of the previous BELC dataset: tokens is the number of total words, types is the number of unique words, ttr is the ratio of unique words to total words. This is known as the Type-Token Ratio and it is a standard metric for measuring lexical diversity. Finally, the proportion of L2 words (English) to the total words (tokens) is provided in prop_l2.\nIn descriptive statistics, there are four basic questions that are asked of each of the variables in the dataset. Each correspond to a different type of descriptive measure.\n\nCentral Tendency: Where do the data points tend to be located?\nDispersion: How spread out are the data points?\nDistribution: What is the overall shape of of the data points?\nInterdependence: How are these data points related to other data?\n\nCentral tendency\n\n\nThe central tendency is measure which aims to summarize the data points in a variable as the most representative, middle or most typical value. There are three common measures of central tendency: the mode, mean and median. Each differ in how they summarize the data points.\nThe mode is the value, or values, that appears most frequently in a set of values. If there are multiple values with the highest frequency, then the variable is said to be multimodal. The most versatile of the central tendency measures as it can be applied to all levels of measurement, although the mode is not often used for numeric variables as it is not as informative as other measures.\nThe more common measures for numeric variables are the mean and the median. The mean is a summary statistic calculated by summing all the values and dividing by the number of values. The median is calculated by sorting all the values in the variable and then selecting the middle value. Given that the mean and median are calculated differently, they will not always yield the same result. Differences that appear between the mean and median will be of interest to us later in this chapter.\nDispersion\n\nThe mean, median, and mode provide summary information where data points tend to be located. However, they do not provide us with any understanding as to how representative this value is. To provide this context, the spread of the values around the central tendency, or dispersion, is calculated.\nFor categorical variables, the spread is framed in terms of how balanced the values are across the levels. One way to do this is to calculate the (normalized) entropy. Entropy is a measure of uncertainty. The more balanced the values are across the levels, the higher the entropy. The less balanced the values are across the levels, the lower the entropy. Normalized entropy scores range from 0 to 1, with 0 indicating that all the values are the same and 1 indicating that all the values are different.\nThe most common measure of dispersion for numeric variables is the standard deviation. The standard deviation is calculated by taking the square root of the variance. The variance is the average of the squared differences from the mean. So, more succinctly, the standard deviation is a measure of the spread of the values around the mean. Where the standard deviation is anchored to the mean, the interquartile range (IQR) is tied to the median. The median represents the sorted middle of the values, in other words the 50th percentile. The IQR is the difference between the 75th percentile and the 25th percentile. Again, just as the mean and the median, the standard deviation and the IQR are calculated in different ways, they are not always the same.\nLet’s now consider the relevant central tendency and dispersion of the variables in the BELC dataset in Table 3.6.\n\n\nTable 3.6: Central tendency and dispersion of the variables in the BELC dataset\n\n\n\n\n(a) Categorical variables\n\nvariable\ntop_counts\nnorm_entropy\n\n\n\nessay_id\nE1: 1, E10: 1, E11: 1, E12: 1\n1.000\n\n\npart_id\nL05: 3, L10: 3, L11: 3, L12: 3\n0.983\n\n\nsex\nfem: 48, mal: 32\n0.971\n\n\ngroup\nT1: 25, T3: 24, T2: 16, T4: 15\n0.981\n\n\n\n\n\n\n(b) Numeric variables\n\nvariable\nmean\nmedian\nsd\niqr\n\n\n\ntokens\n67.62\n56.50\n44.20\n61.25\n\n\ntypes\n41.85\n38.50\n23.03\n31.50\n\n\nttr\n0.68\n0.66\n0.13\n0.15\n\n\nprop_l2\n0.96\n0.99\n0.10\n0.03\n\n\n\n\n\n\nIn Table 3.6 (a) we see the measures for categorical variables. The top_counts variable gives us a short list of the most frequent levels of the variable. From top_count we can gather whether the variable has one mode or is multimodel. Both essay_id and part_id have the same most frequent value for the levels listed. On the other hand, sex and group have a single mode. We can also appreciate the dispersion of these variables based on the norm_entropy of each variable. essay_id is completely balanced across the levels, so it has a normalized entropy of 1. the other variables are not as balanced, but still quite balanced as the normalized entropy is close to 1.\nIn Table 3.6 (b) the numeric variables have a column for the mean, median, standard deviation, and IQR for each. The variable tokens has a larger difference between the mean and median than the other variables and the standard deviation is relatively large suggesting that the values are more spread out around the mean. In the case of ttr the mean and median are quite close and the standard deviation is relatively small suggesting that the values are more tightly clustered around the mean.\nWhen interpreting these summary values, it is important to only directly compare column-wise. That is, focusing only on a single variable, not across variables. Each variable, as is, is measured on a different scale and only relative to itself can we make sense of the values.\nHowever, we can transform the central tendency and dispersion scores for numeric variables to make them more comparable by standardizing the scale of the values. Standardization is a scale-based transformation that changes the scale of the values to a common scale, or z-scores. It involves two separate transformations: centering and scaling. Centering is a transformation that subtracts the mean or median from each value. The result is a mean and median of zero. Scaling is a transformation that divides each value by the standard deviation or IQR.\nIn Table 3.7, we see the same summary statistics as in Table 3.6 (b), but the values have been standardized for the mean and standard deviation. The mean is now zero and the standard deviation is one. This allows us to compare the median and IQR of the variables more directly.\n\n\n\n\nTable 3.7: Standardized central tendency and dispersion of numeric variables\n\nvariable\nmean\nmedian\nsd\niqr\n\n\n\ntokens\n0\n-0.25\n1\n1.39\n\n\ntypes\n0\n-0.15\n1\n1.37\n\n\nttr\n0\n-0.19\n1\n1.14\n\n\nprop_l2\n0\n0.25\n1\n0.27\n\n\n\n\n\n\n\n\nOne more caveat to keep in mind is that we need to be mindful of the nature of the data being standardized and what the standardized values mean. For example, the variables tokens and types were originally counts. But the standardized values are not interpretable as counts, they are now on a different scale –specifically a z-score scale. In the same way since the ttr and prop_l2 variables were originally proportions, the standardized values are also not interpretable as proportions. One additional twist, however, is that the original scales for these pairs of variables were not the same: tokens and types were counts, but ttr and prop_l2 were proportions. So, even though the standardized values are on the same scale, they are not directly comparable.\nBeyond comparing central tendency and dispersion across variables, standarization is useful for analytic statistics to mitigate the influence of variables with large values. In some cases, the statistical method will require standardization of variables before analysis.\nDistributions\n\nSummary statistics of the central tendency and dispersion of a variable provide a sense of the most representative value and how spread out the data is around this value. However, to gain a more comprehensive understanding of the variable, it is key to consider the frequencies of all the data points. The distribution of a variable is the pattern or shape of the data that emerges when the frequencies of all data points are considered. This can reveal patterns that might not be immediately apparent from summary statistics alone. Understanding the frequency and distribution of data points is vital as it informs subsequent choices of statistical analysis and evaluative methods, ensuring they are appropriate for the specific characteristics of the data.\nWhen assessing the distribution of categorical variables, we can use a frequency table or bar plot. A frequency table is a useful method to display the frequency and proportion of each level in a categorical variable in a clear and concise manner. In Table 3.8 we see the frequency table for the variable sex.\n\n\n\n\n\n\nTable 3.8: Frequency table for the variable sex.\n\nsex\nfrequency\nproportion\n\n\n\nfemale\n48\n0.6\n\n\nmale\n32\n0.4\n\n\n\n\n\n\n\n\nA bar plot is a type of plot where the x-axis is a categorical variable and the y-axis is the frequency of the values. The frequency is represented by the height of the bar. The variables can be ordered by frequency, alphabetically, or some other order. Figure 3.1 is a bar chart for the variables sex, group, and part_id, ordered alphabetically.\n\n\n\n\n\n\n(a) Sex\n\n\n\n\n\n(b) Time group\n\n\n\n\n\n(c) Participant ID\n\n\n\nFigure 3.1: Bar plots for categorical variables sex, group, part_id in the BELC dataset.\n\n\nSo for a frequency table or barplot, we can see the frequency of each level of a categorical variable. This gives us some knowledge about the BELC dataset: there are more girls in the dataset, more essays appear in first and third time groups, and the number of essays written by each participant is scattered from one to three. If we were to see any clearly loopsided categories, this would be a sign of imbalance in the data and we would need to consider how this might impact our analysis.\n\n\n\n\n\n\n Consider this\nThe goal of descriptive statistics is to summarize the data in a way that is meaningful and interpretable. With this in mind, compare the frequency table in 3.8 and bar plot in 3.1 (a). Does one provide a more interpretable summary of the data? Why or why not? Are there any other ways you might communicate this distribution more effectively?\n\n\n\nFor numeric variables, understanding the distribution is more complex, and also more important. In essence, however, we are assessing two things: the appearance of outliers in relation to and the overall shape of the distribution.\n\nNow, a frequency table, as in Table 3.8, does not summarize the distribution of a numeric variable in a concise, readily human-consumable format. Instead, the distribution of a numeric variable is best understood visually.\nThe most common visualizations of the distribution of a numeric variable are histograms and density plots. Histograms are a type of bar plot where the x-axis is a numeric variable and the y-axis is the frequency of the values falling within a determined range of values, or bins. The frequency of values within each bin is represented by the height of the bars. Density plots are a smoothed version of histograms. The y-axis of a density plot is the probability of the values. When frequent values appear closely together, the plot line is higher. When the frequency of values is lower or more spread out, the plot line is lower. An example of these plots is show in Figure 3.2 for the variable tokens.\n\n\n\n\n\n(a) Histogram\n\n\n\n\n\n(b) Density plot\n\n\n\nFigure 3.2: Distribution plots for the variable tokens.\n\n\nBoth the histogram in Figure 3.2 (a) and the density plot in Figure 3.2 (b) show the distribution of the variable tokens in slightly different ways which translate into trade-offs in terms of interpretability.\nThe histogram shows the frequency of the values in bins. The number of bins and/ or binwidth can be changed for more or less granularity. A rough grain histogram shows the general shape of the distribution, but it is difficult to see the details of the distribution. A fine grain histogram shows the details of the distribution, but it is difficult to see the general shape of the distribution. The density plot shows the general shape of the distribution, but it hides the details of the distribution. Given this trade-off, it is often useful explore outliers with histograms and the overall shape of the distribution with density plots.\nIn Figure 3.3 we see histograms for the variables tokens, types, and ttr.\n\n\n\n\n\n(a) Number of tokens\n\n\n\n\n\n(b) Number of types\n\n\n\n\n\n(c) Type-token ratio score\n\n\n\nFigure 3.3: Histograms for numeric variables tokens, types, and ttr.\n\n\nFocusing on the details captured in the histogram we are better able to detect potential outliers. Outliers can reflect valid values that are simply extreme or they can reflect something erroneous in the data. To distinguish between these two possibilities, it is important to know the context of the data. Take, for example, Figure 3.3 (c). We see that there is a bin near the value 1.0. Given that the type-token ratio is a ratio of the number of types to the number of tokens, it is unlikely that the type-token ratio would be exactly 1.0 as this would mean that every word in an essay is unique. Another, less dramatic, example is the bin to the far right of Figure 3.3 (a). In this case, the bin represents the number of tokens in an essay. An uptick in the number of essays with a large number of tokens is not surprising and would not typically be considered an outlier. On the other hand, consider the bin near the value 0 in the same plot. It is unlikely that a true essay would have 0, or near 0, words and therefore a closer look at the data is warranted.\nIt is important to recognize that outliers contribute undue influence to overall measures of central tendency and dispersion. To appreciate this, let’s consider another helpful visualization called a boxplot. A boxplot is a visual representation which aims to represent the central tendency, dispersion, and distribution of a numeric variable in one plot.\n\n\n\n\n\nFigure 3.4: Boxplot for the variable ttr.\n\n\n\nIn Figure 3.4 we see a boxplot for ttr variable. The box in the middle of the plot represents the interquartile range (IQR) which is the range of values between the first quartile and the third quartile. The solid line in the middle of the box represents the median. The lines extending from the box are called ‘whiskers’ and provide the range of values which are within 1.5 times the IQR. Values outside of this range are plotted as individual points.\nNow let’s consider boxplots from another angle. In Figure 3.5 (b) I’ve plotted the boxplot horizontally, right below the histogram in Figure 3.5 (a). In this view, we can see that a boxplot is a simplifed histogram augmented with central tendency and dispersion statistics. While histograms focus on the frequency distribution of data points, boxplots focus on the data’s quartiles and potential outliers.\n\n\n\n\n\n(a) Histogram\n\n\n\n\n\n\n\n(b) Boxplot (horizontal)\n\n\n\nFigure 3.5: Histogram and boxplot for the variable ttr.\n\n\nI’ve added a dashed line in Figure 3.5 (a) and Figure 3.5 (b) to signal the mean in this set of plots, but it is not typically included. I include the dashed line to make a point: the mean is more sensitive to outliers than the median. As I pointed out in Section 3.1.2.1, the mean is the sum of all values divided by the number of values. If there are extreme values, the mean will be pulled in the direction of the extreme values. The median, however, is the middle value and a few extreme values have less effect. So, when central tendency is reported, if there is a sizeable difference between the mean and the median, measures of dispersion will be larger and the direction of the difference can be used to infer the presence of outliers.\nReturning to outliers, it is important to address them to safeguard the accuracy of the analysis. There are two main ways to address outliers: 1) transform the data and 2) eliminate observations with outliers (trimming). Trimming is more extreme as it removes data but can be the best approach for true outliers. Transforming the data is an approach to mitigating the influence of extreme but valid values. Transformation involves applying a mathematical function to the data which changes the scale and/ or shape of the distribution, but does not remove data nor does it change the relative order of the values.\nIn Figure 3.8, we see two boxplots. Figure 3.6 (a) is the original ttr data and Figure 3.6 (b) reflects the data trimmed to remove outliers. In this case, we have removed essays with a type-token ratio of 1.\n\n\n\n\n\n(a) Type-token ratio score\n\n\n\n\n\n(b) Type-token ratio score (trimmed)\n\n\n\nFigure 3.6: Boxplots for ttr before and after trimming.\n\n\nWe can now appreciate the relatively larger effect that the outliers had on the mean value of the ttr variable. As outliers are removed as the difference between the mean and median will become smaller.\n\nThe exploration the data points with histograms and boxplots has helped us to identify outliers. Now we turn to the question of the overall shape of the distribution. The key question is whether the observed distribution of each variable approximates the Normal Distribution, or not.\nThe Normal Distribution is a theoretical distribution where the values are symmetrically dispersed around the central tendency (mean/ median). In terms we can now understand, this means that the mean and median are the same. The Normal Distribution is important because many statistical tests assume that the data distribution is normal or near normal.\nStepping away from our BELC dataset, I’ve created simulated data that fit normal and non-normal, or skewed, distributions. I present each of these distributions as density plots with mean and median line overlays in Figure 3.7.\n\n\n\n\n\n(a) Left skewed distribution\n\n\n\n\n\n(b) Normal distribution\n\n\n\n\n\n(c) Right skewed distribution\n\n\n\nFigure 3.7: Mean and median for normal and skewed distributions.\n\n\nA Normal Distribution, illustrated in Figure 3.7 (b), is a distribution where the values are symmetrically dispersed around the central tendency (mean/ median). This means that in a theoretical distribution that the mean and median are the same. The Normal Distribution is also known as the Gaussian Distribution or the Bell Curve, for the hallmark bell shape of the distribution. In this distribution, extreme values are less likely than values near the center.\nA skewed distribution is not a specific type of distribution but rather a characteristic than many distributions can exhibit where the values are not symmetrically dispersed around the central tendency. A distribution in which values tend to disperse to the left of the central tendency is left skewed as in Figure 3.7 (a) and dispersion to the right is right skewed as in Figure 3.7 (c).\nData that are normally, or near-normally distributed are often analyzed using parametric tests while data that exhibit a skewed distributed are often analyzed using non-parametric tests. Divergence from normality is not a binary distinction. Rather, it is a matter of degree. A visual inspection is usually sufficient for experienced researchers to determine whether a distribution is normal or skewed. However, for those who are less experienced or if you want to be more precise, there are two primary measures which can help ascertain the degree to which a distribution is normal: skewness and kurtosis. Skewness is a measure of the degree to which a distribution is asymmetrical. Kurtosis is a measure of the degree to which a distribution is peaked.\nIn Table 3.10 I provide the skewness and kurtosis scores for our simulated distributions along with central tendency measures for context.\n\n\n\n\nTable 3.9: Skewness and kurtosis for normal and skewed distributions.\n\ndistribution\nmean\nmedian\nhistogram\nskewness\nkurtosis\n\n\n\nLeft skew\n0.746\n0.767\n▁▂▅▇▆\n-0.711\n3.27\n\n\nNormal\n0.016\n0.009\n▁▅▇▃▁\n0.065\n2.93\n\n\nRight skew\n0.254\n0.233\n▆▇▅▂▁\n0.711\n3.27\n\n\n\n\n\n\n\n\nAll things distribution are matters of degree, so there are no hard and fast rules for determining whether a distribution is normal or skewed. However, there are some general guidelines that can be used to determine the degree to which a distribution is normal or skewed, as shown in Table 3.10.\n\n\nTable 3.10: Rules of thumb for skewness and kurtosis scores.\n\n\n\n\n(a) Skewness scores\n\n\n\n\n\nScore Range\nEvaluation\n\n\n\n-0.5 to 0.5\nApproximately symmetric\n\n\n-1 to -0.5 or 0.5 to 1\nModerately skewed\n\n\n&lt; -1 or &gt; 1\nHighly skewed\n\n\n\n\n\n\n(b) Kurtosis scores\n\n\n\n\n\nScore Range\nEvaluation\n\n\n\n&lt; 3\nLess peaked than normal\n\n\nEqual to 3\nNormal peak\n\n\n&gt; 3\nMore peaked than normal\n\n\n\n\n\n\n\n\n\n\n\n\n Dive deeper\nAnother approach for visually summarizing a single numeric variable is the Empirical Cumulative Distribution Function, or ECDF. An ECDF plot is a summary of the cummulative proportion of each of the values of a numeric variable. In addition to providing insight into the distribution of a variable, ECDF plots can be useful in determing what proportion of the values fall above or below a certain percentage of the data.\n\n\n\nThe question is which type of distribution does each numeric variable in the BELC dataset fit? Comparing the variables ttr, types and prop_l2 in Figure 3.8 to the three distributions in Figure 3.7, we see that all three numeric variables in the BELC dataset are skewed to some degree.\n\n\n\n\n\n(a) Type-token ratio score\n\n\n\n\n\n(b) Number of types\n\n\n\n\n\n(c) Proportion of L2 words\n\n\n\nFigure 3.8: Histogram/ Density plots for numeric variables in the BELC dataset.\n\n\nFigure 3.8 (a) for ttr has some right skewing but not as much as types in Figure 3.8 (b). prop_l2 in Figure 3.8 (c) is the most skewed of the three variables. As mentioned earlier, skewed distributions can take many forms, some are more skewed than others.\nTo view statistics on our three variables in Figure 3.8, we can calculate the skewness and kurtosis.\n\n\n\n\nTable 3.11: Skewness and kurtosis for numeric variables in the BELC dataset.\n\ndistribution\nmean\nmedian\nhistogram\nskewness\nkurtosis\n\n\n\nttr\n0.655\n0.648\n▂▇▇▆▁\n0.319\n2.90\n\n\ntypes\n46.044\n46.000\n▅▇▇▃▂\n0.407\n2.45\n\n\ntokens\n75.338\n77.000\n▇▇▇▃▂\n0.669\n2.98\n\n\nprop_l2\n0.986\n0.990\n▁▁▂▃▇\n-1.273\n4.13\n\n\n\n\n\n\n\n\nGiven the characteristics of the numeric variables in the BELC dataset, although none of them are perfectly normal, but only prop_l2 is highly skewed. Therefore, if we intend to use these variables ‘as-is’ in statistical measures or tests, we now know whether to choose parametric or non-parametric alternatives.\nIn the case that a variable is highly skewed, it is often useful to attempt transform the variable to reduce the skewness. In contrast to scale-based transformations (e.g. centering and scaling), shape-based transformations change the scale and the shape of the distribution. The most common shape-based transformation is the logarithmic transformation. The logarithmic transformation (log-transformation) takes the log (typically base 10) of each value in a variable. The log-transformation is useful for reducing the skewness of a variable as it compresses large values and expands small values. If the skewness is due to these factors, the log-transformation can help.\nIt is important to note, however, that if scale-based transformations are to be applied to a variable, they should be applied after the log-transformation as the log of negative values is undefined.\nInterdependence\n\nWe have covered the first three of the four questions we are interested in asking in a descriptive analysis. The fourth, and last, question is whether there is mutual dependence between variables. If so, what is the directionality and how strong is the dependence? Knowing the answers to these questions will help frame our approach to analysis.\nTo assess interdependence, the number and information types of the variables under consideration are important. Let’s start by considering two variables. If we are working with two variables, we are dealing with a bivariate relationship. Given there are three informational types (categorical, ordinal, and numeric), there are six logical bivariate combinations: categorical-categorical, categorical-ordinal, categorical-numeric, ordinal-ordinal, ordinal-numeric, and numeric-numeric.\nThe directionality of a relationship will take the form of a tabular or graphic summary depending on the informational value of the variables involved. In Table 3.12, we see the appropriate summary types for each of the six bivariate combinations.\n\n\nTable 3.12: Appropriate summary types for different combinations of variable types.\n\n\n\n\n\n\n\n\nCategorical\nOrdinal\nNumeric\n\n\n\nCategorical\nContingency table\nContingency table/ Bar plot\nPivot table/ Boxplot\n\n\nOrdinal\n-\nContingency table/ Bar plot\nPivot table/ Boxplot\n\n\nNumeric\n-\n-\nScatterplot\n\n\n\n\n\nLet’s first start with the combinations that include a categorical or ordinal variable. Categorical and ordinal variables reflect measures of class-type information, with add meaningful ranks to ordinal variables. To assess a relationship with these variable types, a table is always a good place to start. When combined together, a contingency table is the appropriate table. A contingency table is a cross-tabulation of two class-type variables, basically a two-way frequency table. This means that three of the six bivariate combinations are assessed with a contingency table: categorical-categorical, categorical-ordinal, and ordinal-ordinal.\nIn Table 3.13 we see contingency tables for the categorical variable sex and ordinal variable group in the BELC dataset.\n\n\n\n\nTable 3.13: Contingency tables for categorical variable sex and ordinal variable group in the BELC dataset.\n\n\n\n\n(a) Counts\n\ngroup\nfemale\nmale\nTotal\n\n\n\nT1\n7\n9\n16\n\n\nT2\n11\n4\n15\n\n\nT3\n13\n10\n23\n\n\nT4\n9\n5\n14\n\n\nTotal\n40\n28\n68\n\n\n\n\n\n\n(b) Percentages\n\ngroup\nfemale\nmale\nTotal\n\n\n\nT1\n43.75%\n56.25%\n100.00%\n\n\nT2\n73.33%\n26.67%\n100.00%\n\n\nT3\n56.52%\n43.48%\n100.00%\n\n\nT4\n64.29%\n35.71%\n100.00%\n\n\nTotal\n58.82%\n41.18%\n100.00%\n\n\n\n\n\n\nA contingency table may include only counts, as in Table 3.13 (a), or may include proportions or percentages in an effort to normalize the counts and make them more comparable, as in Table 3.13 (b).\nIt is sometimes helpful to visualize a contingency table as a bar plot when there are a larger number of levels in either or both of the variables. Again, looking at the relationship between sex and group, we see that we can plot the counts or the proportions. In Figure 3.9, we see both.\n\n\n\n\n\n\n(a) Counts\n\n\n\n\n\n(b) Proportions\n\n\n\nFigure 3.9: Bar plots for the relationship between sex and group in the BELC dataset.\n\n\nTo summarize and assess the relationship between a categorical or an ordinal variable and a numeric variable, we cannot use a contingency table. Instead, this type of relationship is best summarized in a table using a summary statistic in a pivot table. A pivot table is a table in which a class-type variable is used to group a numeric variable by some summary statistic appropriate for numeric variables, e.g. mean, median, standard deviation, etc.\nIn Table 3.14, we see a pivot table for the relationship between group and tokens in the BELC dataset. Specifically, we see the mean number of tokens by group.\n\n\n\n\n\n\nTable 3.14: Pivot table for the relationship between group and tokens in the BELC dataset.\n\ngroup\nmean_tokens\n\n\n\nT1\n35.4\n\n\nT2\n62.5\n\n\nT3\n85.0\n\n\nT4\n118.9\n\n\n\n\n\n\n\n\nWe see that the mean number of tokens increases from Group T1 to T4, which is consistent with the idea that the students in the higher groups are writing longer essays.\nAlthough a pivot table may be appropriate for targeted numeric summaries, a visualization is often more informative for assessing the dispersion and distribution of a numeric variable by a categorical or ordinal variable. There are two main types of visualizations for this type of relationship: a boxplot and a violin plot. A violin plot is a visualization that summarizes the distribution of a numeric variable by a categorical or ordinal variable, adding the overall shape of the distribution, much as a density plot does for histograms.\nIn Figure 3.10, we see both a boxplot and a violin plot for the relationship between group and tokens in the BELC dataset.\n\n\n\n\n\n\n(a) Boxplot\n\n\n\n\n\n(b) Violin plot\n\n\n\nFigure 3.10: Boxplot and violin plot for the relationship between group and tokens in the BELC dataset.\n\n\nFrom the boxplot in Figure 3.10 (a), we see that the general trend towards more tokens used by students in higher groups. But we can also appreciate the dispersion of the data within each group looking at the boxes and whiskers. On the surface it appears that the data for groups T1 and T3 are closer to each other than groups T2 and T4, in which there is more variability within these groups. Furthermore, we can see outliers in groups T1 and T3, but not in groups T2 and T4. From the violin plot in Figure 3.10 (b), we can see the same information, but we can also see the overall shape of the distribution of tokens within each group. In this plot, it is very clear that group T4 includes a wide range of token counts.\n\nThe last bivariate combination is numeric-numeric. To summarize this type of relationship a scatterplot is used. A scatterplot is a visualization that plots each data point as a point in a two-dimensional space, with one numeric variable on the x-axis and the other numeric variable on the y-axis. Depending on the type of relationship you are trying to assess, you may want to add a trend line to the scatterplot. A trend line is a line that summarizes the overall trend in the relationship between the two numeric variables. To assess the extent to which the relationship is linear, a straight line is drawn which minimizes the distance between the line and the points.\nIn Figure 3.11, we see a scatterplot and a scatterplot with a trend line for the relationship between ttr and types in the BELC dataset.\n\n\n\n\n\n\n(a) Points\n\n\n\n\n\n(b) Points with a linear trend line\n\n\n\nFigure 3.11: Scatter plot for the relationship between ttr and types in the BELC dataset.\n\n\nWe see that there is an apparent positive relationship between these two variables, which is consistent with the idea that as the number of types increases, the type-token ratio increases. In other words, as the number of unique words increases, so does the lexical diversity of the text. Since we are evaluating a linear relationship, we are assessing the extent to which there is a correlation between ttr and types. A correlation simply means that as the values of one variable change, the values of the other variable change in a consistent manner.\n\nOnce a sense of the directionality of a relationship can be established, the next step is to gauge the relative strength, or association. Association refers to any relationship in which there is a dependency between two variables. Quantitative measures of association, in combination with tabular and visual summaries, can provide a more complete picture of the relationship between two variables.\nThere are a number of measures of assocation, depending on the types of variables being assessed and, for numeric variables, whether the distribution is normal (parametric) or non-normal (non-parametric), as seen in Table 3.15.\n\n\nTable 3.15: Measures of association or correlation strength for different combinations of variable types.\n\n\n\n\n\n\n\n\n\nCategorical\nOrdinal\nNumericNon-parametric\n\nNumericParametric\n\n\n\n\nCategorical\nChi-square \\(\\chi^2\\), Cramér’s \\(V\\)\n\nGoodman and Kruskal’s \\(\\gamma\\)\n\nRank biserial Correlation\nPoint-biseral Correlation\n\n\nOrdinal\n-\nKendall’s \\(\\tau\\)\n\nKendall’s \\(\\tau\\)\n\nPearson’s \\(r\\)\n\n\n\n\nNumericNon-parametric\n\n-\n-\nKendall’s \\(\\tau\\)\n\nPearson’s \\(r\\)\n\n\n\n\nNumericParametric\n\n-\n-\n-\nPearson’s \\(r\\)\n\n\n\n\n\nAssociation measures often are expressed as a number between -1 and 1, where 0 indicates no association, -1 indicates a perfect negative association, and 1 indicates a perfect positive association. The closer the number is to 0, the weaker the association. The closer the number is to -1 or 1, the stronger the association. Association statistics are often accompanied by a confidence interval (CI), which is a range of values that is likely to contain the true value of the association in the population. The confidence interval is expressed as a percentage, such as 95%, which means that if we were to repeat the study 100 times, 95 of those studies would produce a confidence interval that contains the true value of the association in the population. If the range between the lower and higher bounds of the confidence interval contains 0, then the association is likely no different than chance.\nGiven these measures and interpretations, let’s consider the different types of bivariate relationships we have seen so far in the BELC dataset. The first interdependence we explored involved the categorical variable sex and the ordinal variable group. This relationship may not be of primary interest to a study on L2 writing, but it is a good example of how to assess the strength of an association between a categorical and ordinal variable. Furthermore, it could be the case that we want to assess whether we have widely unbalanced female/ male proportions in our time groups.\nUsing Table 3.15, we see that we can use Goodman and Kruskal’s \\(\\gamma\\) (gamma) to assess the strength of the association between these two variables. The measures of association in Table 3.16 suggest that the proportion of male participants is higher in group T1 and lower in group T2. However, these associations are moderately strong, as the gamma value is near \\(\\pm\\) 0.4.\n\n\n\n\n\nTable 3.16: Gamma for the relationship between sex and group in the BELC dataset.\n\nParameter1\nParameter2\nr\nCI\nCI_low\nCI_high\n\n\n\nsex.female\ngroup.T1\n-0.381\n0.95\n-0.568\n-0.157\n\n\nsex.female\ngroup.T2\n0.389\n0.95\n0.167\n0.575\n\n\nsex.male\ngroup.T1\n0.381\n0.95\n0.157\n0.568\n\n\nsex.male\ngroup.T2\n-0.389\n0.95\n-0.575\n-0.167\n\n\n\n\n\n\n\n\nWhen paired with Figure 3.9 we can appreciate that groups T1 and T2 have contrasting proportions of females to males and that groups T3 and T4 are more closely proportioned. This observation should be considered when approaching statistical analyses in which categorical variables required (near) equal proportions of categories.\n\nNow let’s take a look at a more interesting relationship, the one between the ordinal variable group and the numeric variable tokens. Since we determined that tokens was near normally distributed, we can choose the parametric version of our association measure, Pearson’s \\(r\\). The measures of association in Table 3.17 suggest that there is a negative association between group T1 and a positive one betwen group T4 and tokens, which is consistent with the idea that as the group number increases, the number of tokens increases. These associations are moderate to strong, as the Pearson’s \\(r\\) values are near \\(\\pm\\) 0.5. However, the other groups (T2 and T3) have very weak assocations with tokens and the CI includes 0, which means that the association is likely no different than chance.\n\n\n\n\nTable 3.17: Pearson’s r for the relationship between group and tokens in the BELC dataset.\n\nParameter1\nParameter2\nr\nCI\nCI_low\nCI_high\n\n\n\ngroup.T1\ntokens\n-0.520\n0.95\n-0.675\n-0.322\n\n\ngroup.T2\ntokens\n-0.160\n0.95\n-0.384\n0.082\n\n\ngroup.T3\ntokens\n0.161\n0.95\n-0.080\n0.385\n\n\ngroup.T4\ntokens\n0.521\n0.95\n0.322\n0.675\n\n\n\n\n\n\n\n\nThese association measures suggest that there is a relationship between group and tokens, but that the relationship is not the same for all groups. This may due to a number of factors, such as the number of participants in each group, the effect of outliers within particular levels, etc. or may simply underscore that the relationship between group and tokens is not linear. What we do with this information will depend on our research aims. Whatever the case, we can use these measures to inform our next steps, as we will see in the next section.\n\nFinally, let’s look at the relationship between the numeric variables ttr and types. Since we determined both ttr and types are normally distributed, we can choose the parametric version of our association measure, Pearson’s \\(r\\). The measures of association in Table 3.18 suggest that there is a negative association between ttr and types, which is consistent with the idea that as the number of types increases, the type-token ratio decreases. This association is strong, as Pearson’s \\(r\\) value is near 0.6.\n\n\n\n\nTable 3.18: Pearson’s r for the relationship between ttr and types in the BELC dataset.\n\nParameter1\nParameter2\nr\nCI\nCI_low\nCI_high\n\n\nttr\ntypes\n-0.606\n0.95\n-0.738\n-0.43\n\n\n\n\n\n\n\nBefore moving on to the next section, it is important to remember than through the process of diagnostic measures, we gain a thorough understanding of our data’s characteristics and quality, preparing us for the next step in our analysis. However, remember that these measures do not exist in isolation. The decisions we make at this stage, from handling missing data to understanding the distribution of our variables, can have significant implications on our subsequent analysis. So, this initial step of data analysis deserves our careful attention and scrutiny."
  },
  {
    "objectID": "approaching-analysis.html#sec-aa-analyze",
    "href": "approaching-analysis.html#sec-aa-analyze",
    "title": "3  Approaching analysis",
    "section": "\n3.2 Analyze",
    "text": "3.2 Analyze\nHaving ensured that our dataset is clean, valid, and thoroughly understood, we can proceed to the next key stage of our data analysis process - employing analytic methods. The goal of analysis, generally, is to generate knowledge from information. The type of knowledge generated and the process by which it is generated, however, differ and can be broadly grouped into three analysis types: exploratory, predictive, and inferential.\nIn this section I will provide an overview of how each of these analysis types are tied to research aims and how the general purpose of each type affect: (1) how to identify the variables of interest, (2) how to interrogate these variables, and (3) how to interpret the results. I will structure the discussion of these analysis types moving from the least structured (inductive) to most structured (deductive) approach to deriving knowledge from information with the aim to provide enough information for you to identify these research approaches in the literature and to make appropriate decisions as to which approach your research should adopt.\n\n\n\n3.2.1 Explore\n\nIn Exploratory Data Analysis (EDA), we use a variety of methods to identify patterns, trends, and relations within and between variables. The goal of EDA is uncover insights in an inductive, data-driven manner. That is to say, that we do not enter into EDA with a fixed hypothesis in mind, but rather we explore intuition, probe anecdote, and follow hunches to identify patterns and relationships and to evaluate whether and why they are meaningful. We are admittedly treading new or unfamiliar terrain letting the data guide our analysis. This means that we can use and reuse the same data to explore different angles and approaches adjusting our methods and measures as we go. In this way, EDA is an iterative, meaning generating process.\n\nIn line with the investigative nature of EDA, the identification of variables of interest is a discovery process. We most likely have a intution about the variables we would like to explore, but we are able to adjust our variables as need be to suit our research aims. When the identification and selection of variables is open, the process is known as feature engineering. A process that is much an art as a science, feature engineering leverages a mixture of relevant domain knowledge, intuition, and trial and error to identify features that serve to best represent the data and to best serve the research aims. Furthermore, the roles of features in EDA are fluid –no variable has a special status, as seen in Figure 3.12. We will see that in other types of analysis, some or all the roles of the variables are fixed.\n\n\n\n\nFigure 3.12: Roles of variables in EDA.\n\n\n\nFor illustrative purposes let’s consider the State of the Union Corpus (SOTU) (Benoit 2020). The presidential addresses and a set of metadata variables are included in the corpus. I’ve subsetted this corpus to only include U.S. presidents since 1946. A tabular preview of the first 10 addresses (truncated for display) can be found in Table 3.19.\n\n\n\n\n\nTable 3.19: First ten addresses from the SOTU Corpus.\n\n\n\n\n\n\n\n\npresident\ndate\ndelivery\nparty\naddresses\n\n\n\nTruman\n1946-01-21\nwritten\nDemocratic\nTo the Congress of the United States: A quarter…\n\n\nTruman\n1947-01-06\nspoken\nDemocratic\nMr. President, Mr. Speaker, Members of the Cong…\n\n\nTruman\n1948-01-07\nspoken\nDemocratic\nMr. President, Mr. Speaker, and Members of the …\n\n\nTruman\n1949-01-05\nspoken\nDemocratic\nMr. President, Mr. Speaker, Members of the Cong…\n\n\nTruman\n1950-01-04\nspoken\nDemocratic\nMr. President, Mr. Speaker, Members of the Cong…\n\n\nTruman\n1951-01-08\nspoken\nDemocratic\nMr. President, Mr. Speaker, Members of the Cong…\n\n\nTruman\n1952-01-09\nspoken\nDemocratic\nMr. President, Mr. Speaker, Members of the Cong…\n\n\nTruman\n1953-01-07\nwritten\nDemocratic\nTo the Congress of the United States: I have th…\n\n\nEisenhower\n1953-02-02\nspoken\nRepublican\nMr. President, Mr. Speaker, Members of the Eigh…\n\n\nEisenhower\n1954-01-07\nspoken\nRepublican\nMr. President, Mr. Speaker, Members of the Eigh…\n\n\n\n\n\n\nA dataset such as this one could serve as a starting point to explore many different types of research questions. In order to maintain research coherence so our efforts to not careen into a free-for-all, we need to tether our feature engineering to a unit of analysis that is relevant to the research question. A unit of analysis is the entity that we are interested in studying. Not to be confused with the unit of observation, which is the entity that we are able to observe and measure.\nTo demonstrate the distinction, let’s look consider different approaches to analyzing the SOTU dataset. For example, the unit of analysis could be the language of particular presidents, party ideology, or political rhetoric in general and the unit of observation could be individual words, phrases, sentences, etc. In some cases the unit of analysis and the unit of observation are the same. For example, if we were interested in potential changes use of the word “terrorist” over time in SOTU addresses, the unit of analysis and the unit of observation would be the same –individual addresses. So, depending on the perspective we are interested in investigating, the choice of how to approach engineering features to gain insight will vary.\n\nBy the same token, approaches for interrogating the dataset can differ significantly, between research projects and within the same project, but for instructive purposes, let’s draw a distinction between descriptive methods and unsupervised learning methods, as seen in Table 3.20.\n\n\n\n\nTable 3.20: Some common EDA methods\n\nDescriptive methods\nUnsupervised learning methods\n\n\n\nFrequency analysis\nCluster analysis\n\n\nKeyness analysis\nTopic Modeling\n\n\nCo-occurence analysis\nVector Space Models\n\n\n\n\n\n\nThe first group, descriptive methods can be seen as a (more robust) extenstion of the descriptive statistics covered earlier in this chapter including statistic, tabular, and visual techniques. For example, a frequency analysis of the SOTU dataset could be used to identify the most common words used by U.S. political parties in their addresses, in Figure 3.13 (a), or a co-occurence analysis could be used to identify the most common words the appear after the term “free”, in Figure 3.13 (b), in the dataset.\n\n\n\n\n\n\n(a) Frequency analysis of the 20 most frequent terms by party.\n\n\n\n\n\n(b) Co-occurence analysis of the terms that appear after the term ‘free’.\n\n\n\nFigure 3.13: Example of descriptive methods applied to the SOTU dataset.\n\n\nThe second group, unsupervised learning is a subtype of machine learning in which an algorithm is used to find patterns within and between variables in the data without any guidance (supervision). In this way, the algorithm, or machine learner, is left to make connections and associations wherever they may appear in the input data. If we were interested in finding word-use continuities and discontinuities between presidents, we could use a clustering algorithm, seen in Figure 3.14 (a). Or if we wanted to uncover themes …  [ADD: modify plot] we could use a vector space model, as in Figure 3.14 (b).\n\n\n\n\n\n\n(a) Hierarchical clustering of the SOTU corpus.\n\n\n\n\n\n(b) Word embedding space in the SOTU corpus.\n\n\n\nFigure 3.14: Example of unsupervised learning methods applied to the SOTU dataset.\n\n\n\nEither through descriptive, unsupervised learning methods, or a combination of both, EDA employs quantitative methods to summarize, reduce, and sort complex datasets in order to provide the researcher novel perspective to be qualitatively assessed. Exploratory methods produce results that require associative thinking and pattern detection. Speculative as they are, the results from exploratory methods can be highly informative and lead to new insight and inspire further study in directions that may not have been expected.\n\n3.2.2 Predict\n\nPredictive Data Analysis (PDA) employs a variety of techniques to examine and evaluate the association strength between a variable or set of variables, with a specific focus on predicting a target variable. The aim of PDA is to construct models that can accurately forecast future outcomes, using either data-driven or theory-driven approaches. In this process, supervised learning methods, where the machine learning algorithm is guided (supervised) by a target outcome variable, are used. This means we don’t begin PDA with a completely open-ended exploration, but rather with an objective - accurate predictions. However, the path to achieving this objective can be flexible, allowing us freedom to adjust our models and methods. Unlike EDA, where the entire dataset can be reused for different approaches, PDA requires a portion of the data to be reserved for evaluation, enhancing the validity of our predictive models. Thus, PDA is an iterative process that combines the flexibility of exploratory analysis with the rigor of confirmatory analysis.\n\n\nThere are two types of variables in PDA: the outcome variable and the predictor variables, or features. The outcome variable is the variable that the researcher is trying to predict. It is the only variable that is necessarily fixed as part of the research question. The features are the variables that are used to predict the outcome variable. An overview of the roles of these variables in PDA is shown in Figure 3.15.\n\n\n\n\nFigure 3.15: Roles of variables in PDA.\n\n\n\nFeature selection can be either data-driven or theory-driven. Data-driven features are those that are engineered to enhance predictive power, while theory-driven features are those that are selected based on theoretical relevance.\nLet’s consider the Europarl corpus of native, non-native and translated texts (ENNTT) (Nisioi et al. 23-28, 2016-05). This is a monolingual English corpus of translated and non-translated texts from the European Parliament.\n\n\n\n\nTable 3.21: Data dictionary of the ENNTT corpus.\n\nvariable\nname\nvariable_type\ndescription\n\n\n\nsession_id\nSession ID\ncategorical\nUnique identifier for each session\n\n\nseq_speaker_id\nSequential Speaker ID\nordinal\nUnique numeric identifier for each speaker\n\n\nstate\nState\ncategorical\nCountry of the session speaker\n\n\nlanguage\nLanguage\ncategorical\nOriginal language in which the sentence was uttered\n\n\ntype\nType\ncategorical\nCategory of the speaker: natives, nonnatives, or translations\n\n\ntext\nText\ncategorical\nText spoken in the session\n\n\n\n\n\n\n\n\nNow depending on our research question, we will have a different outcome variable. If we want to examine the potential linguistic differences between native and non-native speakers, we will select our outcome variable to be the type (natives/ nonnatives). The features selected to use to predict type depend on our research question. If our research is guided by data, we will choose features that are specifically designed to boost the ability to predict. On the other hand, if our research is steered by theory, we will opt for features that are chosen due to their theoretical significance. In either case, the original dataset will likely need to be transformed.\nThe approach to interrogating the dataset includes three main steps: feature engineering, model selection, and model evaluation. We’ve discussed feature engineering, so what is model selection and model evaluation? And how do we go about performing these steps?\nModel selection is the process of choosing a machine learning algorithm and set of features that produces the best prediction accuracy for the outcome variable. To refine our approach such that we arrive at the best combination of algorithm and features, we need to train our machine learner on a variety of combinations and evaluate the accuracy of each. We don’t want to train and evaluate on the same data, as this would be cheating, and likely would not produce a model that generalizes well to new data. Instead, we split our data into two sets: a training set and a test set. The training set is used to train the machine learner, while the test set is used to evaluate the accuracy of the model1. The larger portion of the data, from 60% to 80%, is used for training, while the remaining portion is used for testing.\n\nThe elephant in the room is, what type of machine learning algorithm do I use? Well, there are many different types of machine learning algorithms, each with their own strengths and weaknesses. The first rough cut is to decide what type of outcome variable we are predicting: categorical or numeric. If the outcome variable is categorical, we are performing a classification task, and if the outcome variable is numeric, we are performing a regression task. As we see in Table 3.22, there are various algorithms that can be used for each task.\n\n\nTable 3.22: Some common supervised learning algorithms used in PDA.\n\n\n\n\n\n\nClassification\nRegression\nLearner type\n\n\n\nLogistic Regression\nLinear Regression\nInterpretable\n\n\nDecision Tree\nRegression Tree\nInterpretable\n\n\nSupport Vector Machine\nSupport Vector Regression\nBlack box\n\n\nMultilayer Perceptron\nMultilayer Perceptron\nBlack box\n\n\n\n\nI’ve included a column in Table 3.22 that charaterizes a second consideration which is whether we want an interpretable model or a black box model. When talking about whether a model is interpretable or not, we are not referring to the evaluation of the accuracy of the model. Rather, we are referring to the inner workings of the model itself that allow us to understand how the model is making its predictions. An interpretable model is one that can be understood and explored by humans, while a black box model is one whose inner workings are not trivially unraveled. The advantage of an interpretable model is that it researchers can go beyond evaluating prediction accuracy and probe feature-outcome associations. On the other hand, if the goal is to simply boost prediction accuracy, interpretability may not be a concern.\n\n\nFinally, there are a number of algorithm-specific strengths and weaknesses to be considered in the process of model selection. These hinge on characteristics of the data, such as the size of the dataset, the number of features, the type of features, and the expected type of relationships between features or on computing resources, such as the amount of time available to train the model or the amount of memory available to store the model.\n\nModel evaluation is the process of assessing the accuracy of the model on the test set, which is a proxy for how well the model will generalize to new data. Model evaluation is performed quantitatively by calculating the accuracy of the model on the training, to develop the model, and ultimately, the test set. The accuracy of a model is calculated by comparing the predicted values to the actual values. For the results of classification tasks, this results in a contingency table, known as a confusion matrix. A confusion matrix juxtaposes predicted and actual values allowing various metrics to be calculated, for example in Table 3.23.\n\n\n\n\nTable 3.23: Confusion matrix for the utterance type classification task.\n\n\n\n\n\n\n\nPredicted: natives\nPredicted: nonnatives\n\n\n\nActual: natives\n26294 (90% of 29215)\n2921 (10% of 29215)\n\n\nActual: nonnatives\n730 (10% of 7304)\n6574 (90% of 7304)\n\n\n\n\nSince regression tasks predict numeric values, the accuracy of the model is calculated by comparing the difference between the predicted and actual values.\nIt is important to note that whether the accuracy metrics are good is to some degree qualitative judgment. For example, classification accuracy overall may be relatively high, but the model may be performing poorly on one of the classes. In this case, the model may not be useful for the task at hand, despite the overall accuracy.\nIn the end, PDA offers a versitle path to discover data-driven insights, to probe theory-driven associations, or even simply to perform tasks that are too complex or time-consuming for humans to perform.\n\n3.2.3 Infer\n\nThe most commonly recognized of the three data analysis approaches, Inferential data analysis (IDA) is the bread-and-butter of science. IDA is a deductive, theory-driven approach in which all aspects of analysis stem from a pre-determined premise, or hypothesis, about the nature of a relationship in the world and then aims to test whether this relationship is statistically supported given the evidence. Since the goal is to infer conclusions about a certain relationship in the population based on a statistical evaluation of a (corpus) sample, the representativeness of the sample is of utmost importance. Furthermore, the use of the data is limited to the scope of the hypothesis –that is, the data cannot be used for exploratory purposes.\n\n\nThe selection of variables and the roles they play in the analysis are determined by the hypothesis. In a nutshell, a hypothesis is a formal statement about the state of the world. This statement is theory-driven meaning that it is predicated on previous research. We are not exploring or examining relationships, rather we are testing a specific relationship. In practice, however, we are in fact proposing two mutally exclusive hypotheses. The first is the Alternative Hypothesis, or \\(H_1\\). This is the hypothesis I just described –the statement grounded in the previous literature outlining a predicted relationship. The second is the Null Hypothesis, or \\(H_0\\). This is the flip-side of the hypothesis testing coin and states that there is no difference or relationship. Together \\(H_1\\) and \\(H_0\\) cover all logical outcomes.\nTo connect hypotheses to variable selection and variable roles, let’s consider a study in which a researcher is investigating the claim that men and women differ in terms of the number of questions they use in spontaneous conversations. The unit of analysis is individuals (i.e. men and women) and the unit of observation is (sponteanous) conversations.\nA dataset based on the Switchboard Dialog Act Corpus (SWDA) (University of Colorado Boulder 2008), seen in Table 3.24, aligns well with this investigation. It is a large collection of transcribed telephone conversations between strangers. The dataset includes gender information for each participant and dialog act annotation for each utterance, including a range of question types.\n\n\n\n\n\nTable 3.24: Data dictionary of the SWDA dataset.\n\nvariable\nname\nvariable_type\ndescription\n\n\n\ndoc_id\nDocument ID\nnumeric\nThe unique identifier for each document\n\n\nspeaker_id\nSpeaker ID\nnumeric\nThe unique identifier for each speaker\n\n\nsex\nSex\ncategorical\nThe sex or gender of the speaker, either 'Male' or 'Female'\n\n\ndamsl_tag\nDAMSL Tag\ncategorical\nThe Dialogue Act Markup in Several Layers (DAMSL) tag classification\n\n\nutterance_text\nUtterance Text\ncategorical\nThe transcription of what the speaker said in the document\n\n\n\n\n\n\n\n\nThe Alternative Hypothesis may be formulated in this way:\n\\(H_1\\): Men and women differ in the frequency of the use of questions in spontaneous conversations.\nThe Null Hypothesis, then, would be a statement describing the remaining logical outcomes. Specifically:\n\\(H_0\\): Men and women do not differ in the frequency of the use of questions in spontaneous conversations.\nNow, in standard IDA one variable is the dependent variable and one or more variables are predictor variables. The dependent variable, sometimes referred to as the outcome or response variable, is the variable which contains the information which is hypothesized to depend on the information in the predictor variable(s). It is the variable whose variation a research study seeks to explain. A predictor variable, sometimes referred to as a independent or explanatory variable, is a variable whose variation is hypothesized to explain the variation in the dependent variable.\nReturning to our hypothetical study and the hypotheses presented, we can identify the variables in our study and map them to their roles. The frequency of questions used by each speaker would be our dependent variable and the biological sex of the speakers our predictor variable. This is so because \\(H_1\\) states the proposition that a speaker’s sex will predict the frequency of questions used. The next step would be to operationalize what we mean by ‘frequency of questions’ and then transform the dataset to reflect this definition.\nIn our hypothetical study we’ve identified two variables, one dependent and one predictor. It is important keep in mind that there can be multiple predictor variables in cases where the dependent variable’s variation is predicted to be related to multiple variables. This relationship would need to be explicitly part of the original hypothesis, however. Due to the increasing difficulty for interpretation, in practice, IDA studies rarely include more than two or three predictor variables in the same analysis.\nPredictor variables add to the complexity of a study because they are part of our research focus, specifically our hypothesis. It is, however, common to include other variables which are not of central focus, but are commonly assumed to contribute to the explanation of the variation of the dependent variable. Let’s assume that the background literature suggests that the age of speakers also plays a role in the number of questions that men and women use in spontaneous conversation. Let’s also assume that the data we have collected includes information about the age of speakers. If we would like to factor out the potential influence of age on the use of questions and focus on the particular predictor variables we’ve defined in our hypothesis, we can include the age of speakers as a control variable. A control variable will be added to the statistical analysis and documented in our report but it will not be included in the hypothesis nor interpreted in our results.\nWe can now see in Figure 3.16 the variables roles assigned to variables in a hypothesis-driven study.\n\n\n\n\nFigure 3.16: Roles of variables in IDA.\n\n\n\n\nAt this point let’s look at the main characteristics that need to be taken into account to statistically interrogate the variables we have chosen to test our hypothesis. The type of statistical test that one chooses is based on (1) the informational value of the dependent variable and (2) the number of predictor variables included in the analysis. Together these two characteristics go a long way in determining the appropriate class of statistical test, but other considerations about the distribution of particular variables (i.e. normality), relationships between variables (i.e. independence), and expected directionality of the predicted effect may condition the appropriate method to be applied.\nAs you can imagine, there are a host of combinations and statistical tests that apply in particular scenarios, too many to consider in given the scope of this coursebook (see Gries (2013) and Paquot and Gries (2020) for a more exhaustive description). Below I’ve summarized some common statistical scenarios and their associated tests which focus on the juxtaposition of informational values and the number of variables, leaving aside alternative tests which deal with non-normal distributions, ordinal variables, etc.\nIn Table 3.25 we see monofactorial tests, tests with only one predictor variable.\n\n\n\n\nTable 3.25: Common monofactorial tests used in IDA.\n\n\n\n\n\n\n\n\nVariable roles\n\n\n\n\nDependent\nPredictor\nTest\n\n\n\n\nCategorical\nCategorical\nPearson's Chi-squared test\n\n\nNumeric\nCategorical\nStudent's t-Test\n\n\nNumeric\nNumeric\nPearson's correlation test\n\n\n\n\n\n\n\n\nTable 3.26 includes a listing of multifactorial tests, tests with more than one predictor and/ or control variables.\n\n\n\n\nTable 3.26: Common multifactorial tests used in IDA.\n\n\n\n\n\n\n\n\n\nVariable roles\n\n\n\n\nDependent\nPredictor\nControl\nTest\n\n\n\n\nCategorical\nvaried\nvaried\nLogistic regression\n\n\nNumeric\nvaried\nvaried\nLinear regression\n\n\n\n\n\n\n\n\n\nIDA relies heavily on quantitative evaluation methods to draw conclusions that can be generalized to the target population. It is key to understand that our goal in hypothesis testing is not to find evidence in support of \\(H_1\\), but rather to assess the likelihood that we can reliably reject \\(H_0\\). The metric used to determine if there is sufficient evidence is based on the probability that given the nature of the relationship and the characteristics of the data, the likelihood of there being no difference or relationship is low. The threshold for likelihood has traditionally been summarized in the \\(p\\)-value statistic. In the Social Sciences, a \\(p\\)-value lower than .05 is considered statistically significant which when interpreted correctly means that there is more than a 95% chance that the observed relationship would not be predicted by \\(H_0\\). Note that we are working in the realm of probability, not in absolutes, therefore an analysis that produces a significant result does not prove \\(H_1\\) is correct or that \\(H_0\\) is incorrect, for that matter. A margin of error is always present. For this reason, other metrics such as effect size and confidence intervals are also used to interpret the results of statistical tests."
  },
  {
    "objectID": "approaching-analysis.html#sec-aa-communicate",
    "href": "approaching-analysis.html#sec-aa-communicate",
    "title": "3  Approaching analysis",
    "section": "\n3.3 Communicate",
    "text": "3.3 Communicate\n\nConducting research should be enjoyable and personally rewarding but the effort you have invested and knowledge you have generated should be shared with others. Whether part of a blog, presentation, journal article, or for your own purposes it is important to document your analysis results and process in a way that is informative and interpretable. This enhances the value of your work, allowing others to learn from your experience and build on your findings.\n\n3.3.1 Report\n\nThe most widely recognized form of communicating research is through a report. A report is a narrative of your analysis, including the research question, the data you used, the methods you applied, and the results you obtained. We are both reporting our findings and documenting our process to inform others of what we did and why we did it but also to invite readers to evaluate our findings for themselves. The scientific process is a collaborative one and evaluation by peers is a key component of the process.\n\nThe audience for your report will determine the level of detail and the type of information you will need to include in your report but there are some common elements to reference in any report. First, the research question and/ or hypothesis should be clearly stated and the motivation for the question should be explained. This will help the reader understand the context of the analysis and the importance of the results. Second, diagnostic procedures to verifiy or describe the data should be explained. This may include anomaly correction, missing data, data transformation, etc. and/ or descriptive summaries of the data including assessments of individual variables (central tendency, dispersion, distribution) and/ or relationships between variables (association strength). Third, a blueprint of the methods used will describe the variable selection process, how the variables are operationalized, what analysis methods are employed, and how the variables are used in the statistical analysis. Fourth, the results from the analysis are reported. Reporting details will depend on the type of analysis and the particular method(s) employed. For inferential analyses this will include the test statistic(s) and some measure of confidence. In predictive analyses, accuracy results will be reported. For exploratory analyses, the reporting of results will vary and often include visualizations and metrics that require more human interpretation than the other analysis types. Finally, the results are interpreted in light of the research question and/ or hypothesis. This will include a discussion of the limitations of the analysis and a discussion of the implications of the results for future research.\n\n3.3.2 Document\n\nWhile a good report will include the most vital information to understand the procedures, results, and findings of an analysis, there is much more information generated in the course of an analysis which does not traditionally appear in prose. If a research project is conducted programmatically, however, data, code, and documentation can be made available to others as part of the communication process. Increasingly, researchers are sharing their data and code as part of the publication process. This allows others to reproduce the analysis and verify the results contributing to the collaborative nature of the scientific process.  [CITATION]\n\nTogether, data, code, and documentation form a research compendium. As you can imagine the research process can quickly become complex and unwieldy as the number of files and folders grows. If not organized properly, it can be difficult to find the information you need. Furthermore, if not documented, decisions made in the course of the analysis can be difficult or impossible to trace. For this reason it is recommendable to follow a set of best practices for organizing and documenting your research compendium.\n\nWe will have more to say about this in the next chapter but for now it will suffice to point to some key elements in a research compendium. First, the data used in the analysis should be saved as a separate file(s). As a given research project progresses to analysis, the data may be transformed and manipulated to best fit the needs of the analysis. Preserving the data at each stage adds to the complete picture of the data from collection to analysis. Second, since you are working programmatically, you can share your precise analysis step-by-step in code form. This allows others to reproduce your analysis and verify your results. Including code comments provides additional information to communicate the steps taken and your thought process. Finally, a codebook documents any additional information that helps understand the research better. This will often include guides for installing software and running the code to reproduce the analysis and an overview of the aims of the scripts and the contents of the data and datasets."
  },
  {
    "objectID": "approaching-analysis.html#summary",
    "href": "approaching-analysis.html#summary",
    "title": "3  Approaching analysis",
    "section": "Summary",
    "text": "Summary\nIn this chapter we have focused on description and analysis –the third component of DIKI Hierarchy. This process is visually summarized in Figure 3.17.\n\n\n\n\nFigure 3.17: Approaching analysis: visual summary\n\n\n\nBuilding on the strategies covered in Chapter 2 “Understanding data” to derive a rich relational dataset, in this chapter we outlined key points in approaching analysis. The first key step in any analysis is to perform a diagnostic assessment of the individual variables and relationships between variables. To select the appropriate descriptive measures we covered the various informational values that a variable can take. In addition to providing key information for reporting purposes, descriptive measures are important to explore so the researcher can get a better feel for the dataset before conducting an analysis.\nWe outlined three data analysis types in this chapter: exploratory, predictive, and inferential. Each of these embodies distinct approaches to deriving knowledge from data. Ultimately the choice of analysis type is highly dependent on the goals of the research. Inferential analysis is centered around the goal of testing a hypothesis, and for this reason it is the most highly structured approach to analysis. This structure is aimed at providing the mechanisms to draw conclusions from the results that can be generalized to the target population. Predictive analysis has a less-ambitious but at times more relevant goal of examining the extent to which a given relationship can be established from the data to provide a model of language that can accurately predict an outcome using new data. This methodology is highly effective for applying different algorithmic approaches and examining relationships between an outcome variable and various configurations of variables. The ability to explore the data in multiple ways, is also a key strength of employing an exploratory analysis. The least structured and most variable of the analysis types, exploratory analyses are a powerful approach to generating knowledge from data in an area where clear predictions cannot be made.\nI rounded out this chapter with a short description of the importance of communicating the analysis process and results. Reporting, in its traditional form, is documented in prose in an article. This reporting aims to provide the key information that a reader will need to understand what was done, how it was done, and why it was done. This information also provides the necessary information for reader’s with a critical eye to understand the analysis in more detail. Yet even the most detailed reporting in a write-up still leaves many practical, but key, points of the analysis obscured. A programming approach provides the procedural steps taken that when shared provide the exact methods applied. Together with the write-up, a research compendium which provides the scripts to run the analysis and documentation on how to run the analysis forms an integral part of creating reproducible research."
  },
  {
    "objectID": "approaching-analysis.html#activities",
    "href": "approaching-analysis.html#activities",
    "title": "3  Approaching analysis",
    "section": "Activities",
    "text": "Activities\n\n\n Add description of outcomes …\n\n\n\n\n\n\n\n Recipe\n\nWhat: Descriptive assessment of datasetsHow: Read Recipe 3 and participate in the Hypothes.is online social annotation.Why: To explore appropriate methods for summarizing variables in datasets given the number and informational values of the variable(s).\n\n\n\n\n\n\n\n\n\n Lab\n\nWhat: Descriptive assessment of datasetsHow: Clone, fork, and complete the steps in Lab 3.Why: To identify and apply the appropriate descriptive methods for a vector’s informational value and to assess both single variables and multiple variables with the appropriate statistical, tabular, and/ or graphical summaries."
  },
  {
    "objectID": "approaching-analysis.html#questions",
    "href": "approaching-analysis.html#questions",
    "title": "3  Approaching analysis",
    "section": "Questions",
    "text": "Questions\n\n\n\n\n\n\n\nConceptual questions\n\nWhat are the key differences between assessment and analysis?\nWhat are the potential measures of central tendency and dispersion for a variable? Does it depend on the informational value of the variable?\nConsider the following variables: \\(X\\) = number of children, \\(Y\\) = number of siblings, \\(Z\\) = number of siblings who are older than the participant. Which of these variables are categorical, ordinal, numeric? What are the measures of central tendency and dispersion for each variable?\nWhat type(s) of tables or plots are appropriate for summarizing a variable? What type(s) of tables or plots are appropriate for summarizing the relationship between two variables?\nIn the following variables and informational values, identify if the plots are appropriate for summarizing the relationship. …\nWhat are the key differences between exploratory, predictive, and inferential analysis?\nHow do the goals of the research influence the choice of analysis type?\nGiven the following research questions, identify which type of analysis is most appropriate and why. …\nHow are the results of inferential, predictive, and exploratory analysis evaluated?\nResearch compendia are an important part of reproducible research. What are the key components of a research compendium? What are the benefits of sharing a research compendium?\n\n\n\n\n\n\n\n\n\n\n Technical exercises\n\nCreate a contingency table for the following variables:\nCreate a plot for the following variables:\nReport these tables and plots with a short interpretation of what they show.\n…\n\n\n\n\n\n\n\n\n\nBenoit, Kenneth. 2020. Quanteda.corpora: A Collection of Corpora for Quanteda. http://github.com/quanteda/quanteda.corpora.\n\n\nGries, Stefan Th. 2013. Statistics for Linguistics with r. A Practical Introduction. 2nd revise.\n\n\nMuñoz, Carmen, ed. 2006. Age and the Rate of Foreign Language Learning. 1st ed. Vol. 19. Second Language Acquisition Series. Clevedon: Multilingual Matters.\n\n\nNisioi, Sergiu, Ella Rabinovich, Liviu P. Dinu, and Shuly Wintner. 23-28, 2016-05. “A Corpus of Native, Non-Native and Translated Texts.” In Proceedings of the Tenth International Conference on Language Resources and Evaluation (LREC 2016). Portoroz̆, Slovenia: European Language Resources Association (ELRA).\n\n\nPaquot, Magali, and Stefan Th. Gries, eds. 2020. A Practical Handbook of Corpus Linguistics. Switzerland: Springer.\n\n\nUniversity of Colorado Boulder. 2008. “Switchboard Dialog Act Corpus. Web Download.” Linguistic Data Consortium."
  },
  {
    "objectID": "approaching-analysis.html#footnotes",
    "href": "approaching-analysis.html#footnotes",
    "title": "3  Approaching analysis",
    "section": "",
    "text": "Depending on the application and the amount of available data, a third development set is sometimes created as a pseudo test set to facilitate the testing of multiple approaches on data outside the training set before the final evaluation on the test set is performed.↩︎"
  },
  {
    "objectID": "preface.html#sec-p-rationale",
    "href": "preface.html#sec-p-rationale",
    "title": "Preface",
    "section": "Rationale",
    "text": "Rationale\nData science, an interdisciplinary field that combines knownledge and skills from statistics, computer science, and domain-specific expertise to extract meaningful insight from structured and unstructured data, has emerged as an exciting and rapidly growing field in recent years, driven in large part by the increase in computing power available to the average individual and the abundance of electronic data now available through the internet. These advances have become an integral part of the modern scientific landscape, with data-driven insights now being used to inform decision-making in a wide variety of academic fields, including linguistics and language-related disciplines.\nThis textbook seeks to meet this growing demand by providing an introduction to the fundamental concepts and practical programming skills from data science applied to the task of quantitative text analysis. It is intended primarily for undergraduate students, but may also be useful for graduates and researchers seeking to expand their methodological toolbox. The textbook takes a pedagogical approach which assumes no prior experience with statistics or programming, making it an accessible resource for novices beginning their exploration of quantitative text analysis methods."
  },
  {
    "objectID": "preface.html#sec-p-aims",
    "href": "preface.html#sec-p-aims",
    "title": "Preface",
    "section": "Aims",
    "text": "Aims\nThe overarching goal of this textbook is to provide readers with foundational knowledge and practical skills to conduct and evaluate quantitative text analysis using the R programming language and other open source tools and technologies. The specific aims are to develop the reader’s proficiency in three main areas:\n\n\nData literacy: Identify, interpret and evaluate data analysis procedures and results\n\n\nThroughout this textbook we will explore topics which will help you understand how data analysis methods derive insight from data. In this process you will be encouraged to critically evaluate connections across linguistic and language-related disciplines using data analysis knowledge and skills. Data literacy is an invaluable skillset for academics and professionals but also is an indispensable aptitude for in the 21st century citizens to navigate and actively participate in the ‘Information Age’ in which we live (Carmi et al. 2020).\n\n\n\nResearch skills: Design, implement, and communicate quantitative research\n\n\nThis aim does not differ significantly, in spirit, from common learning outcomes in a research methods course. However, working with text will incur a series of key steps in the selection, collection, and preparation of the data that are unique to text analysis projects. In addition, I will stress the importance of research documentation and creating reproducible research as an integral part of modern scientific inquiry (Buckheit and Donoho 1995).\n\n\n\nProgramming skills: Apply programmatic strategies to develop and collaborate on reproducible research projects\n\n\nModern data analysis, and by extension, text analysis is conducted using programming. There are various key reasons for this: a programming approach (1) affords researchers unlimited research freedom –if you can envision it, you can program it, (2) underlies well-documented and reproducible research (Gandrud 2015), and (3) invites researchers to engage more intimately with the data and the methods for analysis.\n\nThese aims are important for linguistics students because they provide a foundation for concepts and in the skills required to succeed in the rapidly evolving landscape of 21st-century research. These abilities enable researchers to evaluate and conduct high-quality empirical investigation across linguistic fields on a wide variety of topics. Moreover, these skills go beyond linguistics research; they are widely applicable across many disciplines where quantitative data analysis and programming are becoming increasingly important. Thus, this textbook provides students with a comprehensive introduction to quantitative text analysis that is relevant to linguistics research and that equips them with valuable skills for their future careers."
  },
  {
    "objectID": "preface.html#sec-p-approach",
    "href": "preface.html#sec-p-approach",
    "title": "Preface",
    "section": "Approach",
    "text": "Approach\nThe approach taken in this textbook is designed to accomodate linguistics students and researchers with little to no prior experience with programming or quantitative methods. With this in mind the objective is connect conceptual understanding with practical application. Real-world data and research tasks relevant to linguistics are used thoughtout the book to provide context and to motivate the learning process1. Furthermore, as an introduction to the field, the textbook focuses on the most common and fundamental methods and techniques for quantitative text analysis and prioritizes breadth over depth and intuitive understanding over technical explanations. On the programming side, the Tidyverse approach to programming in R will be adopted. This approach provides a consistent syntax across different packages and is known for its legibility, making it easier for readers to understand and write code. Together, these strategies form an approach that is intended to provide readers with an accessible resource to gain a foothold in the field and to equip them with the knowledge and skills to apply quantitative text analysis in their own research."
  },
  {
    "objectID": "preface.html#sec-p-structure",
    "href": "preface.html#sec-p-structure",
    "title": "Preface",
    "section": "Structure",
    "text": "Structure\nThe aims and approach described above is reflected in the overall structure of the book and each chapter.\nBook level\nAt the book level, there are five interdependent parts:\nPart I “Orientation” provides the necessary background knowledge to situate quantitative text analysis in the wider context of data analysis and linguistic research and to provide a clearer picture of what text analysis entails and its range of applications.\nThe subsequent parts are directly aligned with the data analysis process. The building blocks of this process are reflected in ‘Data to Insight Hierarchy (DIKI)’ visualized in Figure 12.\n\n\n\n\nFigure 1: Data to Insight Hierarchy (DIKI)\n\n\n\nThe DIKI Hierarchy highlights the stages and intermediate steps required to derive insight from data. Part II “Foundations” provides a conceptual introduction to the DIKI Hierarchy and establishes foundational knowledge about data, information, knowledge, and insight which is fundamental to developing a viable research plan.\nParts III “Preparation” and IV “Analysis” focus on the implementation process. Part III covers the steps involved in preparing data for analysis, including data acquisition, curation, and transformation. Part IV covers the steps involved in conducting analysis, including exploratory, predictive, and inferential data analysis.\nThe final part, Part V “Communication”, covers the final stage of the data analysis process, which is to communicate the results of the analysis. This includes the structure and content of research reports as well as the process of publishing, sharing, and collaborating on research.\nChapter level\nAt the chapter level, both conceptual and programming skills are developed in stages3. The chapter-level structure is consistent across chapters and can be seen in Table 1.\n\n\nTable 1: The general structure of a chapter including: the component, its purpose, where to find the resource, and the target learning stage.\n\n\n\n\n\n\n\nComponent\nPurpose\nResource\nStage\n\n\n\nOutcomes\nIdentify the learning objectives for the chapter\nTextbook\nIntroduction\n\n\nOverview\nProvide a brief introduction to the chapter topic\nTextbook\nIntroduction\n\n\nCoding Lessons\nTeach programming techniques with hands-on interactive exercises\nGitHub\nSkills\n\n\nContent\nCombine conceptual discussions and programming skills, incorporating thought-provoking questions, relevant studies, and advanced topic references\nTextbook\nKnowledge\n\n\nRecipes\nOffer step-by-step programming examples related to the chapter\nResources website\nComprehension\n\n\nLabs\nAllow readers to apply chapter-specific concepts and techniques\nGitHub\nApplication\n\n\nSummary\nReview the key concepts and skills covered in the chapter\nTextbook\nReview\n\n\nQuestions\nAssess and expand the reader’s knowledge and abilities\nTextbook\nAssessment\n\n\n\n\nEach chapter will begin with a list of key learning outcomes followed by a brief introduction to the chapter’s content. The goal is to orient the reader to the chapter. Next there will be a prompt to complete the interactive coding lesson(s) to introduce reader’s to key programming concepts related to the chapter though hands-on experience and then the main content of the chapter will follow. The content will be a combination of conceptual discussions and programming skills, incorporating thought-provoking questions (‘Consider this’), relevant studies (‘Case study’), and advanced topic references (‘Dive deeper’). Together these components form the skills and knowledge phase. The next phase is the application phase. This phase will include step-by-step programming demonstrations related to the chapter (Recipes) and lab exercises that allow readers to apply their knowledge and skills chapter-related tasks. Finally the chapters conclude with a summary of the key concepts and skills covered in the chapter and a set of questions to assess and expand the reader’s knowledge and abilities."
  },
  {
    "objectID": "preface.html#sec-p-resources",
    "href": "preface.html#sec-p-resources",
    "title": "Preface",
    "section": "Resources",
    "text": "Resources\nThere are three main resources available to support the aims and approach of this textbook. Firstly, the textbook itself provides prose discussion, figures/ tables, R code, case studies, and thought and practical exercises. Secondly, there is a companion R package called qtalrkit (Francom 2023), which includes functions for accessing data and datasets, as well as various useful functions developed specifically for this textbook. In addition, there is a comprehensive website Quantitative Text Analysis for Linguistics Resources(qtalr website) that includes programming tutorials and demonstrations to enhance the reader’s recognition of how programming strategies are implemented. Finally, a GitHub repository is provided which contains both a set of interactive R programming lessons (Swirl) and lab exercises designed to guide the reader through practical hands-on programming applications. The companion qtalrkit package and the GitHub repository are both under active development and will be updated regularly to ensure that supplementary materials remain relevant to the content of the text4."
  },
  {
    "objectID": "preface.html#sec-p-getting-started",
    "href": "preface.html#sec-p-getting-started",
    "title": "Preface",
    "section": "Getting started",
    "text": "Getting started\nBefore jumping in to this and subsequent chapter’s textbook activities, it is important to prepare your computing environment and understand how to take advantage of the resources available, both those directly and indirectly associated with the textbook.\nR and IDEs\nProgramming is the backbone for modern quantitative research. Among the many programming languages available, R is a popular open-source language and software environment for statistical computing. R is popular with statisticians and has been adopted as the de facto language by many other fields in natural and social sciences, including linguistics. It is freely downloadable from The R Project for Statistical Programming website and is available for macOS, Linux, and Windows operating systems.\nSuccessfully installing R is rarely the last step in setting up your R-enabled computing environment. The majority of R users also install an integrated development environment (IDE). An IDE, such as RStudio or Visual Studio Code, provide a graphical user interface (GUI) for working with R. In effect, IDEs provide a dashboard for working with R and are designed to make it easier to write and execute R code. IDEs also provide a number of other useful features such as syntax highlighting, code completion, and debugging. IDEs are not required to work with R but they are highly recommended.\nChoosing to install R and an IDE on your personal computer, which is know as your local environment, is not the only option to work with R. You can also choose to work with R in the cloud, a remote environment. There are a number of cloud-based options for working with R, including RStudio Cloud and Microsoft Azure. These options provide a pre-configured R environment that you can access from any computer with an internet connection. The advantage of working in the cloud is that you do not need to install R or an IDE on your local computer. The disadvantage is that you will need to be connected to the internet to work with R and the free tiers for these services are limited.\nIf you are new to R, you may want to consider working in the cloud to get started. If you plan to continue to work with R in the future, you will most likely want to install R and an IDE on your local computer or explore using a virtual environment. Virtual environments, such as Docker, provide a way to use a pre-configured computing environment or create your own that you can share with others. Virtual environments are a good option if you want to ensure that everyone in your research group is working with the same computing environment. Pre-configured virtual environments exist for R through the Rocker project and can be used locally or in the cloud.\nThere are trade-offs in terms of cost, convenience, and flexibility when choosing to work with R in a local, remote, or virtual environment. The choice is yours and you can always change your mind later. The important thing is to get started and begin learning R. Furthermore, any of the approaches described here will be compatible with this textbook.\nFor more information and instructions on setting up an R environment consult the following guides.\n\n\n\n\n\n\n Guides\n\nInstalling R\nChoosing and setting up an IDE\nWorking with R in remote and virtual environments\n\n\n\n\nR packages\nAs you progress in your R programming experience, you’ll find yourself leveraging code from other R users, which is typically provided as packages. Packages are sets of functions and/or datasets that are freely accessible for download, designed to perform a specific set of interrelated tasks. They enhance the capabilities of R. Official R packages can be found in repositories like CRAN (Comprehensive R Archive Network), while other packages can be obtained from code-sharing platforms such as GitHub.\n\n\n\n\n\n\n Consider this\nThe Comprehensive R Archive Network (CRAN) includes groupings of popular packages related to a given applied programming task called Task Views. Explore the available CRAN Task Views listings. Note the variety of areas (tasks) that are covered in this listing. Now explore in more detail one of the following task views which are directly related to topics covered in this textbook noting the associated packages and their descriptions: (1) Cluster, (2) MachineLearning, (3) NaturalLanguageProcessing, or (4) ReproducibleResearch.\n\n\n\nYou will download a number of packages at different stages of this textbook, but there is a set of packages that will be key to have from the get go. Once you have access to a working R/ RStudio environment, you can proceed to install the following packages.\nInstall the following packages from CRAN.\n\n\ntidyverse (Wickham 2023)\n\n\nrmarkdown (Allaire et al. 2023)\n\n\nquarto (Allaire 2022)\n\n\ntinytex (Xie 2023)\n\n\ndevtools (Wickham et al. 2022)\n\n\nusethis (Wickham et al. 2023)\n\n\nswirl (Kross et al. 2020)\n\n\nYou can do this by running the following code in an R console:\n # install key packages from CRAN\ninstall.packages(c(\"tidyverse\", \"rmarkdown\", \"quarto\", \"tinytex\", \"devtools\", \"usethis\", \"swirl\"))\nFor instructions on how to install the qtalrkit package from GitHub and download and use the interactive R programming lessons for this textbook, see the following guides.\n\n\n\n\n\n\n Guides\n\nGetting started\n\n\n\n\nGit and GitHub\n\nGitHub is a code sharing website. Modern computing is highly collaborative and GitHub is a very popular platform for sharing and collaborating on coding projects. The lab exercises for this textbook are shared on GitHub. To access and complete these exercises you will need to sign up for a (free) GitHub account and then set up the version control software git on your computing environment. git is the conduit to interfacing GitHub and for many git will already be installed on your computer (or cloud computing environment).\nFor more information and instructions on setting up version control consult the following guide.\n\n\n\n\n\n\n Guides\n\nSetting up Git and GitHub\n\n\n\n\nGetting help\nThe technologies employed in this approach to text analysis will include a somewhat steep learning curve. And in all honesty, the learning never stops! Both seasoned programmers and beginners alike need assistance. Fortunately there is a very large community of programmers who have developed many official support resources and who actively contribute to official and unofficial discussion forums. Together these resources provide many avenues for overcoming challenges.\nIn Table 2, I provide a list of steps for seeking help with R.\n\n\nTable 2: Recommended order for seeking help with R.\n\n\n\n\n\n\nOrder\nResource\nDescription\n\n\n\n1\nOfficial R Documentation\nAccess the official documentation by running help(package = \"package_name\") in an R console. Use the ? operator followed by the package or function name. Check out available Vignettes by running browseVignettes(\"package_name\").\n\n\n2\nWeb Search\nLook for package documentation and vignettes on the web. A popular site for this is R-Universe.\n\n\n3\nRStudio IDE Help Toolbar\nIf you’re using RStudio IDE, use the “Help” toolbar menu. It provides links to help resources, guides, and manuals.\n\n\n4\nOnline Discussion Forums\nSites like Stack Overflow and RStudio Community are great platforms where the programming community asks and answers questions related to real-world issues.\n\n\n5\nPost Questions with Reprex\nWhen posting a question, especially those involving coding issues or errors, provide enough background and include a reproducible example (reprex) - a minimal piece of code that demonstrates your issue. This helps others understand and answer your question effectively.\n\n\n\n\nThe first place to look for help with R is the official documentation of the R package you are using. You can access this documentation by running help(package = \"package_name\") in an R console or using the ? operator and then the package or function name. Many R packages often include “Vignettes” (long-form documentation and demonstrations). These can be accessed either by running browseVignettes() in an R console with the package name in quotes (e.g. browseVignettes(\"tidyverse\")).\nYou can also search the web for package documentation and vignettes. A popular site for this purpose is R-Universe.\nIf you are using the RStudio IDE, the easiest and most convenient place to get help with either R or RStudio is through the RStudio “Help” toolbar menu. There you will find links to help resources, guides, and manuals.\nThere are a number of very popular discussion forum websites where the programming community asks and answers questions to real-world issues. These sites often have subsections dedicated to particular programming languages or software. The most popular of these sites is Stack Overflow. There are also R-specific discussion forums such as RStudio Community.\nIf you post a question on one of these communities ensure that if your question involves some coding issue or error that you provide enough background such that the community will be able to help you. This is often referred to as a reproducible example or “reprex”. A reprex is a minimal piece of code that demonstrates the issue you are having. It is a very useful tool for both asking and answering questions.\nFor information on how to create a reprex consult the following guide.\n\n\n\n\n\n\n Guides\n\nCreating reproducible examples\n\n\n\n\nThe take-home message here is that you are not alone. There are many people world-wide that are learning to program and/ or contribute to the learning of others. The more you engage with these resources and communities the more successful your learning will be. As soon as you are able, pay it forward. Posting questions and offering answers helps the community and engages and refines your skills –a win-win."
  },
  {
    "objectID": "preface.html#sec-p-conventions",
    "href": "preface.html#sec-p-conventions",
    "title": "Preface",
    "section": "Conventions",
    "text": "Conventions\nTo facilitate the learning process, this textbook will employ a number of conventions. These conventions are intended to help the reader navigate the text and to signal the reader’s attention to important concepts and information.\nProse\nThe following typographic conventions are used throughout the text:\n\n\nItalics\n\nFilenames, file extensions, directory paths, and URLs.\n\n\n\nFixed-width\n\nPackage names, function names, variable names, and in-line code including expressions and operators.\n\n\n\nBold\n\nKey concepts when first introduced.\n\n\n\nLinked text\n\nLinks to internal and external resources, footnotes, and citations including references to R packages when first introduced.\n\n\nCode blocks\nMore lengthy code will be presented in code blocks, as seen in Example 1.\n\nExample 1  \n\n# A function that takes a name and returns a greeting\ngreet &lt;- function(name) { # function definition\n  paste(\"Hello\", name) # print greeting\n} # end function definition\n\ngreet(name = \"Jerid\") # apply function to a name\n\n&gt; [1] \"Hello Jerid\"\n\n\n\nThere are a couple of things to note about the code in Example 1. First, it shows the code that is run in R as well as the ouput that is returned. The code will appear in a box and the output will appear below the box. Both code and output will appear in fixed-width font. Output which is text will be prefixed with &gt;. Second, the # symbol is used to signal a code comment, a human-facing description. Everything right of a # is not run as code. In this textbook you will see code comments above code on a separate line and to the right of code on the same line. It is good practice to comment your code to enhance readability and to help others understand what your code is doing.\n\n\n\n\n\n\n Tip\nSince you are reading this textbook in a web browser there are two more features that you should be aware of. First, you can click on the code block to copy the code to your clipboard. Second, you can click on a function name to see the help documentation for that function.\n\n\n\nAll figures, tables, and images in this textbook are generated by code blocks but only code for those elements that are relevant for discussion will be shown. However, if you wish to see the code for any element in this textbook, you can visit the GitHub repository https://qtalr.github.io/book/.\nWhen a reference to a file and its contents is made, it will appear as in File 1.\n\nFile 1: Example R script\n\nexample.R\n\n# Load libraries\nlibrary(tidyverse)\n\n# Add 1 and 1\n1 + 1\n\nCallouts\nCallouts are used to signal the reader’s attention to content, activity, and other important sections. The following callouts are used in this textbook:\nContent\n\n\n\n\n\n\n Outcomes\nLearning outcomes for the chapter appear here.\n\n\n\n\n\n\n\n\n\n Consider this\nPoints for you to consider and questions to explore appear here.\n\n\n\n\n\n\n\n\n\n Case study\nCase studies for applying conceptual knowledge and coding skills covered in the chapter appear here.\n\n\n\n\n\n\n\n\n\n Dive deeper\nLinks to additional resources for diving deeper into the topic appear here.\n\n\n\nActivities\n\n\n\n\n\n\n Swirl lesson\nLinks to swirl lessons for practicing coding skills for the chapter appear here.\n\n\n\n\n\n\n\n\n\n Recipe\nLinks to demonstration programming tasks on the qtalr site for the chapter appear here.\n\n\n\n\n\n\n\n\n\n Lab\nLinks to lab exercises for applying conceptual knowledge and coding skills on the qtalr GitHub repository for the chapter appear here.\n\n\n\nOther\n\n\n\n\n\n\n Tip\nTips for using R and related tools appear here.\n\n\n\n\n\n\n\n\n\n Warning\nWarnings for using R and related tools appear here."
  },
  {
    "objectID": "preface.html#sec-p-instructor",
    "href": "preface.html#sec-p-instructor",
    "title": "Preface",
    "section": "To the instructor",
    "text": "To the instructor\nDepending on the experience level and expectations of your readers, you may want to consider adopting one of the following course designs for using this textbook.\nBasic Introduction\n\nCover chapters 1-5 in sequence to give your readers a foundational understanding of quantitative text analysis.\nCulminate the course with a research proposal assignment that requires them to identify an interesting linguistic problem, propose ways of solving it using the methods covered in class, and identify potential data sources.\nIf your readers have little to no experience with R, you may want to consider using the RStudio Cloud platform to host the course. This will provide them with a pre-installed R environment and allow them to focus on learning the material rather than troubleshooting.\nIntermediate Introduction\n\nCover chapters 1, 5-10 in sequence to give your readers a deeper understanding of quantitative text analysis methods. Explore additional case studies or dataset examples throughout the course if you wish to supplement your lectures.\nCulminate the course with a research project assignment that allows your readers to apply what they’ve learned to linguistic content of their choice.\nYou may consider using the RStudio Cloud platform to host the course, but ensure that your readers have access to R and RStudio on their own computers as well.\nAdvanced Introduction\n\nCover all 12 chapters to give your readers a thorough understanding of quantitative text analysis concepts and techniques. Devote more time chapters 5-10 providing demonstrations of how to approach different problems and evaluating alternative approaches.\nCulminate the course with a collaborative research project that requires your readers to work in groups to conduct a comprehensive analysis of a given dataset.\nEnsure that your readers install R and RStudio on their own computers as they will need full control over their coding environment.\n\nFor all course designs, it is strongly recommend that you evaluate the readers’ success in understanding the material by providing a combination of quizzes, lab assignments, programming exercises, and written reports. Additionally, encourage your readers to ask questions5, collaborate with peers, and seek help from the ample resources available online when they encounter scope-limited programming problems.\nFor more information on how to use this textbook in your course, visit the Instructor Guide on the compansion website."
  },
  {
    "objectID": "preface.html#sec-p-activities",
    "href": "preface.html#sec-p-activities",
    "title": "Preface",
    "section": "Activities",
    "text": "Activities\n\nAt this point you should have a working R environment with the core packages including qtalrkit installed. You should also have verified that you have a working Git environment and that you have a GitHub account. If you have not completed these tasks, return to the guides listed above in “Getting started” of this Preface and complete them before proceeding.\nThe following activities are designed to help you become familiar with the tools and resources that you will be using throughout this textbook. These and subsequent activities are designed to be completed in the order that they are presented in this textbook.\n\n\n\n\n\n\n Swirl lesson\n\nWhat: Intro to SwirlHow: In the R console load swirl, run swirl(), and follow prompts to select the lesson.Why: To familiarize you with navigating, selecting, and completing swirl lessons.\n\n\n\n\n\n\n\n\n\n Recipe\n\nWhat: Literate programming IHow: Read Recipe 0 and participate in collaborative discussion with peers.Why: To introduce the concept of Literate Programming and how to create literate documents using R and Quarto.\n\n\n\n\n\n\n\n\n\n Lab\n\nWhat: Literate programming IHow: Clone, fork, and complete the steps in Lab 0.Why: To put literate programming techniques covered in Recipe 0 into practice. Specifically, you will create and edit a Quarto document and render a report in PDF format."
  },
  {
    "objectID": "preface.html#sec-p-summary",
    "href": "preface.html#sec-p-summary",
    "title": "Preface",
    "section": "Summary",
    "text": "Summary\nIn the Preface, we lay the groundwork by introducing the textbook’s underlying principles, learning goals, teaching methods, and target audience. The chapter also offers advice on how to navigate the book’s layout, comprehend its subject matter, and make use of supplementary materials. Crucial insights from this section involve grasping the book’s objectives and aims, which center around instructing readers on quantitative text analysis for linguistics using R while emphasizing reproducible research. This chapter assists readers in setting up a working R development environment ensuring they can effectively engage with the material. Moreover, the Preface provides guidance on how to get help with R and other related software tools and deciphering conventions in the text. With this foundation, you’re now prepared to delve into the captivating realm of text analysis in the subsequent chapter, titled “Text Analysis in Context.”"
  },
  {
    "objectID": "preface.html#sec-p-questions",
    "href": "preface.html#sec-p-questions",
    "title": "Preface",
    "section": "Questions",
    "text": "Questions\n\n\n\n Revise/ add questions.\n\n\n\n\n\n\n\nConceptual questions\n\nHow is the textbook designed to be accessible for both novice and seasoned practitioners in the area of quantitative text analysis?\nWhat is the purpose of the textbook and what are the three areas it aims to scaffold?\nWhat are the main components of each chapter, and how are they structured to support learning outcomes?\nHow does the structure of the textbook and associated resources work to support learning and proficiency in areas?\nWhat is the role of programmatic approaches in quantitative text analysis?\nWhat is the relationship between R and an IDE (e.g. RStudio, VS Code)?\nWhat is the relationship between R and a version control system (e.g. Git)?\n\n\n\n\n\n\n\n\n\n\nTechnical exercises\n\nInstall the latest version of R by following the instructions for your operating system. https://cran.r-project.org/\n\nInstall RStudio Desktop https://www.rstudio.com/products/rstudio/download/\n\nVerify a Git installation or install Git (Windows: https://git-scm.com/downloads). Git a version control system that allows you to track changes to files and collaborate with others through GitHub.\nCreate a free GitHub account at https://github.com/join.\nInstall the tidyverse package in R by running install.packages(\"tidyverse\") in the R Console pane.\nInstall the swirl package by running install.packages(\"swirl\") in the R Console pane.\nOpen RStudio and create a new project for this textbook. This will help you keep your code and files organized.\n\n\n\n\n\n\n\n\nAckoff, Russell L. 1989. “From Data to Wisdom.” Journal of Applied Systems Analysis 16 (1): 3–9.\n\n\nAllaire, JJ. 2022. Quarto: R Interface to Quarto Markdown Publishing System. https://github.com/quarto-dev/quarto-r.\n\n\nAllaire, JJ, Yihui Xie, Christophe Dervieux, Jonathan McPherson, Javier Luraschi, Kevin Ushey, Aron Atkins, et al. 2023. Rmarkdown: Dynamic Documents for r. https://CRAN.R-project.org/package=rmarkdown.\n\n\nBuckheit, Jonathan B., and David L. Donoho. 1995. “Wavelab and Reproducible Research.” In Wavelets and Statistics, 55–81. Springer.\n\n\nCarmi, Elinor, Simeon J. Yates, Eleanor Lockley, and Alicja Pawluczuk. 2020. “Data Citizenship: Rethinking Data Literacy in the Age of Disinformation, Misinformation, and Malinformation.” Internet Policy Review 9 (2).\n\n\nFrancom, Jerid. 2023. Qtalrkit: Quantitative Text Analysis for Linguists Resource Kit.\n\n\nGandrud, Christopher. 2015. Reproducible Research with r and r Studio. Second edition. CRC Press.\n\n\nKrathwohl, David R. 2002. “A Revision of Bloom’s Taxonomy: An Overview.” Theory into Practice 41 (4): 212–18.\n\n\nKross, Sean, Nick Carchedi, Bill Bauer, and Gina Grdina. 2020. Swirl: Learn r, in r. http://swirlstats.com.\n\n\nRowley, Jennifer. 2007. “The Wisdom Hierarchy: Representations of the DIKW Hierarchy.” Journal of Information Science 33 (2): 163–80. https://doi.org/10.1177/0165551506070706.\n\n\nWickham, Hadley. 2023. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Jennifer Bryan, Malcolm Barrett, and Andy Teucher. 2023. Usethis: Automate Package and Project Setup. https://CRAN.R-project.org/package=usethis.\n\n\nWickham, Hadley, Jim Hester, Winston Chang, and Jennifer Bryan. 2022. Devtools: Tools to Make Developing r Packages Easier. https://CRAN.R-project.org/package=devtools.\n\n\nXie, Yihui. 2023. Tinytex: Helper Functions to Install and Maintain TeX Live, and Compile LaTeX Documents. https://github.com/rstudio/tinytex."
  },
  {
    "objectID": "preface.html#footnotes",
    "href": "preface.html#footnotes",
    "title": "Preface",
    "section": "",
    "text": "Research data and questions are primarily based on English for wide accessibility as it is the de facto language of academics and research. However, the methods and techniques presented in this textbook are applicable to many other languages.↩︎\nAdapted from Ackoff (1989) and Rowley (2007).↩︎\nThese stages attempt to capture the general progression of learning reflected in Bloom’s Taxonomy (see Krathwohl (2002) for a description and revision).↩︎\nErrata for the textbook is found on the qtalr website.↩︎\nIf you are using this textbook in a course, consider using a CMS (e.g. Canvas, Blackboard, etc.) or the web-based social annotation tool Hypothes.is to facilitate reader questions and discussion.↩︎"
  },
  {
    "objectID": "orientation.html",
    "href": "orientation.html",
    "title": "Orientation",
    "section": "",
    "text": "Update the overview of Part I “Orientation” to reflect the new structure of the chapter.\n\nIn this section the aims are to: 1) provide an overview of quantitative research and their applications, by both highlighting visible applications and notable research in various fields, 2) consider how quantitative research contributes to language research, and 3) layout the main types of research and situate quantitative text analysis inside these."
  },
  {
    "objectID": "foundations.html",
    "href": "foundations.html",
    "title": "Foundations",
    "section": "",
    "text": "Before working on the specifics of a data project, it is important to establish a fundamental understanding of the characteristics of each of the levels in the “Data, Information, Knowledge, and Insight Hierarchy (DIKI)” (see Figure 1) and the roles each of these levels have in deriving insight from data. In Chapter 2 we will explore the Data and Information levels drawing a distinction between two main types of data (populations and samples) and then cover how data is structured and transformed to generate information (datasets) that is fit for statistical analysis. In Chapter 3 I will outline the importance and distinct types of statistical procedures (descriptive and analytic) that are commonly used in text analysis. Chapter 4 aims to tie these concepts together and cover the required steps for preparing a research blueprint to conduct an original text analysis project."
  },
  {
    "objectID": "understanding-data.html#sec-ud-data",
    "href": "understanding-data.html#sec-ud-data",
    "title": "2  Understanding data",
    "section": "\n2.1 Data",
    "text": "2.1 Data\nData is data, right? The term ‘data’ is so common in popular vernacular it is easy to assume we know what we mean when we say ‘data’. But as in most things, where there are common assumptions there are important details that require more careful consideration. Let’s turn to the first key distinction that we need to make to start to break down the term ‘data’: the difference between populations and samples.\n\n\n2.1.1 Populations\n\nThe first thing that comes to many people’s mind when the term population is used is human populations (derived from Latin ‘populus’). Say for example we pose the question –What’s the population of Milwuakee? When we speak of a population in these terms we are talking about the total sum of individuals living within the geographical boundaries of Milwaukee. In concrete terms, a population an idealized set of objects or events in reality which share a common characteristic or belong to a specific category. The term to highlight here is idealized. Although we can look up the US Census report for Milwaukee and retrieve a figure for the population, this cannot truly be the population. Why is that? Well, whatever method that was used to derive this numerical figure was surely incomplete. If not incomplete, by the time someone recorded the figure some number of residents of Milwaukee moved out, moved in, were born, or passed away. In either case, this example serves to point out that populations are not fixed and are subject to change over time.\nLikewise when we talk about populations in terms of language we dealing with an idealized aspect of linguistic reality. Let’s take the words of the English language as an analog to our previous example population. In this case the words are the people and English is the grouping characteristic. Just as people, words move out, move in, are born, and pass away. Any compendium of the words of English at any moment is almost instananeously incomplete. This is true for all populations, save those relatively rare cases in which the grouping characteristics select a narrow slice of reality which is objectively measurable and whose membership is fixed (the complete works of Shakespeare, for example).\nIn sum, (most) populations are amorphous moving targets. We subjectively hold them to exist, but in practical terms we often cannot nail down the specifics of populations. So how do researchers go about studying populations if they are theoretically impossible to access directly? The strategy employed is called sampling.\n\n2.1.2 Samples\n\nA sample is the product of a subjective process of selecting a finite set of observations from an idealized population with the goal of capturing the relevant characteristics of the target population. The degree of representativeness of a sample is the extent to which the sample reflects the characteristics of the population. The degree of representativeness is crucial for research as it directly impacts of any findings based on the sample.\n\nTo maximize the representativeness of a sample, researchers employ a variety of strategies. One of the first and sometimes the easiest strategy is to increase the sample size. A larger sample will always be more representative than a smaller sample. Sample size, however, is often not enough. It is not hard to imagine a large sample which by chance captures only a subset of the features of the population. Another step to enhance sample representativeness is to apply random sampling. Together a large random sample has an even better chance of reflecting the main characteristics of the population better than a large or random sample. But, random as random is, we still run the risk of acquiring a skewed sample (i.e. a sample with low representativeness).\nTo help mitigate these issues, there are two more strategies that can be applied to improve sample representativeness. Note, however, that while size and random samples can be applied to any sample with few assumptions about internal characteristics of the population, these next two strategies require decisions depend on the presumed internal characteristics of the population.\nThe first of these more informed sampling strategies is called stratified sampling. Stratified samples make (educated) assumptions about sub-components within the population of interest. With these sub-populations in mind, large random samples are acquired for each sub-population, or strata. At a minimum, stratified samples can be no less representative than random sampling alone, but the chances that the sample is better increases. Can there be problems in the approach? Yes, and on two fronts. First knowledge of the internal components of a population are often based on a limited or incomplete knowledge of the population (remember populations are idealized). In other words, strata are selected subjectively by researchers using various heuristics some of which are based on some sense of ‘common knowledge’.\nThe second front on which stratified sampling can err concerns the relative sizes of the sub-components relative to the whole population, which is known as balance. Even if the relevant sub-components are identified, their relative size adds another challenge which researchers must address in order to maximize the representativeness of a sample.\nTogether, large randomly selected and balanced stratified samples set the benchmark for sampling. However, hitting this ideal is not always feasible. There are situations where sizeable samples are not accessible. Alternatively, there may be instances where the population or its strata are not well understood. In such scenarios, researchers have to work with the most suitable sample they can obtain given the limitations of their research project.\n\n2.1.3 Corpora\nA key feature of a sample is that it is purposely selected to model a target population. In text analysis, a purposely sampled collection of texts, of the type defined here, is known as a corpus (pl. corpora). A set of texts or documents which have not been selected purposely lack a sampling frame, and therefore is not a corpus. The sampling frame, hence the populations modeled, in any given corpus will vary. It is key to vet corpora to ensure that the resource’s sampling frame and the research project’s target populations align as closely as possible to safeguard the integrity of research findings later in the research process.\n\n\n\n\n\n\n Consider this\n\n\n\nThe ‘Standard Sample of Present-Day American English’ (known commonly as the Brown Corpus) is widely recognized as one of the first large, machine-readable corpora. Compiled by Kucera and Francis (1967), the corpus is comprised of 1,014,312 words from edited English prose published in the United States in 1961.\nGiven the sampling frame for this corpus visualized in Figure 2.1, can you determine what language population this corpus aims to represent? What types of research might this corpus support or not support?\n\n\n \n\n\n\n\n\n\nFigure 2.1: Overview of the sampling frame of the Brown Corpus.\n\n\n\n\n\n\n\n\n\nTypes\nLet’s take a look at some key characteristics, attributes, and features that distinguish corpora.\nReference\nThe least common and most ambitious corpus resources are those which aim to model the characteristics of a language population. These are known as reference corpora. These are projects designed with wide sampling frames, and require significant investments of time in corpus design and implementation (and continued development) that are usually undertaken by research teams (Ädel 2020).\nThe American National Corpus (ANC) or the British National Corpus (BNC) are corpora which aim to model the general characteristics of a variety of the English language, the former of American English and the later British English. Reference corpora exist for other languages as well: Spanish Reference Corpus of Present-Day Spanish (CREA), German The German Reference Corpus (DeReKo), Turkish Turkish National Corpus (TNC), and many others.\n\n\n\n\n\n\n Consider this\nOf note is the fact that, at present, most of the world’s languages lack reference corpus resources, or any corpus resources whatsoever. “Low-resourced” languages are often less studied, resource scarce, less available in born-digital formats, etc. (Magueresse, Carles, and Heetderks 2020).\nVisit the Clarin overview on reference corpora and then visit LRE Map. Can you find a reference corpus for a language you speak or are interested in studying? If not, consider what can be done to address this gap in the research community.\n\n\n\nSpecialized\n\nSpecialized corpora aim to represent more specific populations. The population may be defined either by modality, genre, time, location, or speaker-oriented characteristics, or some combination thereof. What specialized corpora lack in breadth of coverage, they make up for in depth of coverage by providing a more targeted representation of specific language populations.\nThe Santa Barbara Corpus of Spoken American English (SBCSAE), as you can imagine from the name of the resource, aims to model spoken American English. No claim to written English is included. There are even more specific types of corpora which attempt to model other types of sub-populations such as academic writing, computer-mediated communication (CMC), language use in specific regions of the world, a country, a region of a country, etc.\n\n\n\n\n\n\n\n Consider this\n\n\n\nGrieve, Nini, and Guo (2018) compiled a 8.9 billion-word corpus of geotagged posts from Twitter between 2013-2014 in the United States. The authors provide a search interface to explore relationship between lexical usage and geographic location. Explore this corpus searching for terms related to slang (“hella”, “wicked”), geographical (“mountain”, “river”), meteorological (“snow”, “rain”), and/ or any other term types. What types of patterns do you find? What are the benefits and/ or limitations of this type of data and/ or interface?\n\n\n \n\n\n\n\n\n\nFigure 2.2: Example distribution of the term ‘Ya’ll’ the Word Mapper project.\n\n\n\n\n\n\n\n\n\nAnother set of specialized corpora are resources which aim to compile texts from different languages or different language varieties for direct or indirect comparison. Corpora that are directly comparable, that is they include source and translated texts, are called parallel corpora. Parallel corpora include different languages or language varieties that are indexed and aligned at some linguistic level (i.e. word, phrase, sentence, paragraph, or document), see OPUS. Corpora that are compiled with different languages or language varieties but are not directly aligned are called comparable corpora. The comparable language or language varieties are sampled with the same or similar sampling frame, for example Brown and LOB corpora.\nThe aim of the quantitative text researcher is to select the corpus, or corpora, which best align with the purpose of the research. For example, a general corpus such as the American National Corpus may be better suited to address a question dealing with the way American English works, but this general resource may lack detail in certain areas, such as medical language, that may be vital for a research project aimed at understanding changes in medical terminology. Furthermore, a researcher studying spoken language might collect a corpus of transcribed conversations from a particular community or region, such as the SBCSAE. While this would not include every possible spoken utterance produced by members of that group, it could be considered a representative sample of the population of speech in that context.\nSources\n\nPublished\nThe most common source of data used in contemporary quantitative research is the internet. On the web an investigator can access corpora published for research purposes. Many organizations exist around the globe that provide access to published corpora in browsable catalogs, or repositories. There are repositories dedicated to language research, in general, such as the Language Data Consortium or that specialize in specific domains, such as the spoken language repository TalkBank. It is always advisable to start looking for the available language data in a repository. The advantage of beginning your data search in repositories is that a repository, especially those geared towards the linguistic community, will make identifying language corpora faster than through a general web search. Furthermore, repositories often require certain standards for corpus format and documentation for publication.\nRepositories are by no means the only source of published corpora on the web. Researchers from around the world provide access to corpora and datasets on their own sites or through data sharing platforms. Corpora of various sizes and scopes will often be accessible on a dedicated homepage or appear on the homepage of a sponsoring institution. These resources may be available for download or via search inferaces. Finding these resources is often a matter of doing a web search with the word ‘corpus’ and a list of desired attributes, including language, modality, register, etc.\nAs part of a general movement towards reproducibility, more corpora are available on data sharing platforms such as GitHub, Zenodo, Re3data, OSF, etc. These platforms enable researchers to securely store, manage, and share data with others. Support is provided for various types of data, including documents and code, and as such they are a good place to look as they often include reproducible research projects as well.\nDevelop\nLanguage corpora prepared by researchers and research groups listed on repositories or hosted by the researchers themselves is often the first place to look for data. The web, however, contains a wealth of language and language-related data that can be accessed by researcher to compile their own corpus. There are two primary ways to attain language data from the web. The first is through an Application Programming Interface (API). APIs are, as the title suggests, programming interfaces which allow access, under certain conditions, to information that a website or database accessible via the web contains.\nThe second, more involved, way to acquire data from the web is is through the process of web scraping. Web scraping is the process of harvesting data from the public-facing web. Language texts may be found on sites as uploaded files, such as pdf or doc (Word) documents, or found displayed as the primary text of a site. Given the wide variety of documents uploaded and language behavior recorded daily on news sites, blogs and the like, compiling a corpus has never been easier. Having said that, how the data is structured and how much data needs to be retrieved can pose practical obstacles to collecting data from the web, particularly if the approach is to acquire the data by manually instead of automating the task.\n\n\n\n\n\n\n Dive deeper\nThe process of corpus development is a topic in and of itself. For a more in-depth discussion of the process, see Ädel (2020).\n\n\n\n\n\n\n\n\n\n Consider this\nExplore some of the resources listed on the qtalrkit compansion site and consider their sampling frames. Can you think of a research question or questions that this resource may be well-suited to support research into? What types of questions would be less-than-adequate for a given resource?\n\n\n\nEthical considerations\nJust because data is available on the web does not mean it is free to use. Repositories, APIs, and individual data resources often have licensing agreements and terms of use, ranging from public domain to proprietary licenses. Public domain licenses, such as those found in Project Gutenberg, allow anyone to use the data for any purpose. Creative Commons licenses, like those used by the American National Corpus, Wikipedia, and TalkBank, span from public domain to more restrictive uses, including requirements for attribution or prohibiting commercial use. Even more restrictive licenses, such as those for the Corpus of Contemporary American English and the British National Corpus, may require a fee to access and use the data, even for research purposes.\nRespecting intellectual property rights is crucial when working with corpus data. Violating these rights can lead to legal and ethical issues, including lawsuits, fines, and damage to one’s professional reputation. To avoid these problems, researchers must ensure they have the necessary permissions to use copyrighted works in their corpora. Obtaining permissions involves contacting the author or publisher and requesting consent to use their work for research purposes. Documenting all obtained permissions and providing attribution and/ or citation is essential respecting the intellectual property rights of others.\nFormats\nWhether you are using a published corpus or developing your own, it is important to understand how the data you want to work with is formatted. When referring to the format of a corpus, this includes the folder and file structure, the file types, the internal structure of the files themselves, and how file content is encoded electronically.\nFolder and file structure\nSome corpus resources are contained in a single file, such as a spreadsheet or a text file, but more often than not a corpus will be comprised of multiple files and folders. The folder and file structure will reflect the organization of the corpus and may include sub-folders for different types or groupings of data. In addition to the corpus data itself, metadata and documentation will often be included in the corpus folder structure. The corpus data may be grouped by language, modality, register, or other attributes such as types of linguistic annotation.\nTo illustrate, in Example 2.1 we have the file and folder structure of a toy corpus.\n\nExample 2.1 Toy corpus structure\ncorpus/\n├── documentation/\n│   ├── README.md\n│   ├── LICENSE\n├── metadata/\n│   ├── speakers.csv\n├── data/\n│   ├── spoken/\n│   │   ├── inter-09-a.xml\n│   │   ├── inter-09-b.xml\n│   │   ├── convo-09-a.xml\n│   │   ├── ...\n│   ├── written/\n│   │   ├── essay-09-a.xml\n│   │   ├── essay-09-b.xml\n│   │   ├── respo-09-a.xml\n│   │   ├── ...\n\nIn this example, we have a corpus folder with three sub-folders: documentation/, metadata/, and data/. The data/ folder contains two sub-folders: spoken/ and written/. Each folder contains the relevant data files.\nWhere a single file is easy to download from the web, a corpus with a more complex folder structure can be more difficult to access. For that reason, many corpus resources are packaged into and made into a single compressed file. File compression has two benefits: it preserves the folder structure in a format which is contained in a single file and it also reduces the overall storage size. Common file compression formats are .zip and .tar.gz. So a compressed corpus file for the example above may be named something like corpus.zip or corpus.tar.gz. To access the original data within a compressed file, one must use a decompression tool or software to extract the contents after downloading it.\nFile types\nIn our toy corpus example, you may have noticed that each of the filenames appear with either .md, .csv, .xml, or nothing appended. These are examples of file extensions. File extensions a short sequence of characters, usually preceded by a period (.) which are used to indicate the type or format of file. File extensions help both users and software programs to identify the content and purpose of a file.\n\n\n\n\n\n\n Warning\nIf you are working on your own desktop computer, you may not see the file extensions. This is because the file explorer is configured to hide them by default. To see the file extensions, you will need to change the settings in your file explorer. Use a search engine to find instructions for your operating system.\n\n\n\nIn addition to those listed above, other file extensions often encountered when working with data for text analysis include .txt, .pdf, .docx, .xlsx, .json, and .html. Common file extensions will often be associated with specific software programs on your computer, especially those which are directly associated with proprietary software such as .docx for Microsoft Word or .xlsx for Microsoft Excel. However, many file extensions are not directly associated with any specific software program and can be opened and edited with any text editor.\nIt is important to note that file extensions are helpful conventions, but they are not a guarantee of the file type or structure of the file content. Furthermore, corpus developers may create their own file extensions to signal the unique structure of their data. For example, the .utt file extension used in the Switchboard Dialogue Act Corpus (SWDA) or the .cha extension used for TalkBank resource transcripts signal project-specific structuring. In either case, it is recommended to open the file in a text editor to inspect the structure of the file content to confirm the file structure before processing the data contained therein.\nFile content\nThe internal structure of the content of corpus data files is an important aspect of any corpus both in terms of what data is included and how to approach accessing and processing the data. A corpus may include various types of linguistic (e.g. part of speech, syntactic structure, named entities, etc.) or non-linguistic (e.g. source, dates, speaker information, etc.) attributes. These attributes are known as metadata, or data about data. As a general rule, files which include more metadata tend to be more internally structured. Internal file structure refers to the degree to which the content is easy to query and analyze by a computer. Let’s review characteristics of the three main types of file structure types and associate common file extensions that files in each have.\nUnstructured data is data which does not have a machine-readable internal structure. This is the case for plain text files (.txt), which are simply a sequence of characters. For example, in Example 2.2 we see a snippet of a plain text file from the the Manually Annotated Sub-Corpus of American English (MASC) (Ide et al. 2008):\n\nExample 2.2 MASC plain text\n&gt;Hotel California\n\nFact: Sound is a vibration. Sound travels as a mechanical wave through a medium, and in space, there is no\nmedium. So when my shuttle malfunctioned and the airlocks didn't keep the air in, I heard nothing. After the\nfirst whoosh of the air being sucked away, there was lightning, but no thunder. Eyes bulging in\npanic, but no screams. Quiet and peaceful, right? Such a relief to never again hear my crewmate Jesse natter\nabout his girl back on Earth and that all-expenses-paid vacation-for-two she won last time he was on leave. I\nswore, if I ever had to see a photo of him in a skimpy bathing suit again, giving the camera a cheesy thumbs-up\nfrom a lounge chair on one of those white sandy beaches, I'd kiss a monkey. Metaphorically, of course.\n\nOther examples of files which often contain unstructured data include .pdf and .docx files. While these file types may contain data which appears structured to the human eye, the structure is not designed to be machine-readable. As such the data would typically be read into R as a vector of character strings. It is possible to perform only the most rudimentary queries on this type of data, such as string matches. For anything more informative, it is necessary to further process this data.\nOn the other end of the spectrum, structured data is data which conforms to a tabular format in which elements in tables and relationships between tables are defined. This makes querying and analyzing easy and efficient. Relational databases (e.g. MySQL, PostgreSQL, etc.) are designed to store and query structured data. The data frame object in R is also a structured data format. In each case, the data is stored in a tabular format in which each row represents a single observation and each column represents a single attribute whose values are of the same type.\nIn Example 2.3 we see an example of an R data frame object which overlaps with the data in the plain text file above in Example 2.2:\n\nExample 2.3 MASC data frame\n   title             date modality domain          ref_num word  lemma pos  \n   &lt;chr&gt;            &lt;dbl&gt; &lt;fct&gt;    &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 Hotel California  2008 Writing  General Fiction       0 &gt;     &gt;     NN   \n 2 Hotel California  2008 Writing  General Fiction       1 Hotel hotel NNP  \n 3 Hotel California  2008 Writing  General Fiction       2 Cali… cali… NNP  \n 4 Hotel California  2008 Writing  General Fiction       3 Fact  fact  NNP  \n 5 Hotel California  2008 Writing  General Fiction       4 :     :     :    \n 6 Hotel California  2008 Writing  General Fiction       5 Sound sound NNP  \n 7 Hotel California  2008 Writing  General Fiction       6 is    be    VBZ  \n 8 Hotel California  2008 Writing  General Fiction       7 a     a     DT   \n 9 Hotel California  2008 Writing  General Fiction       8 vibr… vibr… NN   \n10 Hotel California  2008 Writing  General Fiction       9 .     .     .    \n11 Hotel California  2008 Writing  General Fiction      10 Sound sound NNP  \n\nHere we see that the data is stored in a tabular format with each row representing a single observation (word) and each column representing a single attribute. Internally, R applies a schema to ensure the values in each column are of the same type (e.g. &lt;chr&gt;, &lt;dbl&gt;, &lt;fct&gt;, etc.). This structured format is designed to be easy to query and analyze and as such is the primary format for data analysis in R.\n\n\n\n\n\n\n Tip\nIt is conventional to work with column names for datasets in R using the same conventions that are used for naming objects. It is a matter of taste which convention is used, but I have adopted snake case as my personal preference (e.g ref_num). There are also alternatives. Regardless of the convention you choose, it is good practice to be consistent.\nIt is also of note that the column names should be balanced for meaningfulness and brevity. This brevity is of practical concern but can be somewhat opaque. For questions into the meaning of the column and is values consult the resource’s dataset documentation, consult Section 2.3.\n\n\n\nSemi-structured data falls between unstructured and structured data. This covers a wide range of file structuring approaches. For example, a otherwise plain text file with part-of-speech tags appended to each word is minimally structured (Example 2.4).\n\nExample 2.4 MASC plain text with part-of-speech tags\n&gt;/NN Hotel/NNP California/NNP Fact/NNP :/: Sound/NNP is/VBZ a/DT vibration/NN ./. Sound/NNP travels/VBZ as/IN a/DT mechanical/JJ wave/NN through/IN a/DT medium/NN ,/, and/CC in/IN space/NN ,/, there/EX is/VBZ no/DT medium/NN ./. So/RB when/WRB my/PRP$ shuttle/NN malfunctioned/JJ and/CC the/DT airlocks/NNS did/VBD n't/RB keep/VB the/DT air/NN in/IN ,/, I/PRP heard/VBD nothing/NN ./. After/IN the/DT\n\nTowards the more structured end of semi-structured data, many file formats including .xml and .json contain highly structured, hierarchical data. For example, in Example 2.5 shows a snippet from a .xml file from the MASC corpus.\n\nExample 2.5 MASC XML\n&lt;a xml:id=\"penn-N65571\" label=\"tok\" ref=\"penn-n0\" as=\"anc\"&gt;                                                                                                                                                        \n  &lt;fs&gt;\n    &lt;f name=\"base\" value=\"&gt;\"/&gt;\n    &lt;f name=\"msd\" value=\"NN\"/&gt;\n    &lt;f name=\"string\" value=\"&gt;\"/&gt;\n  &lt;/fs&gt;\n&lt;/a&gt;\n&lt;node xml:id=\"penn-n1\"&gt;\n  &lt;link targets=\"seg-r1\"/&gt;\n&lt;/node&gt;\n&lt;a xml:id=\"penn-N65599\" label=\"tok\" ref=\"penn-n1\" as=\"anc\"&gt;\n  &lt;fs&gt;\n    &lt;f name=\"base\" value=\"hotel\"/&gt;\n    &lt;f name=\"msd\" value=\"NNP\"/&gt;\n    &lt;f name=\"string\" value=\"Hotel\"/&gt;\n  &lt;/fs&gt;\n&lt;/a&gt;\n\nThe format of semi-structured data is often influenced by characteristics of the data or reflect an author’s individual preferences. It is sometimes the case that data will be semi-structured in a less-standard format. For example, the SWDA corpus includes a .utt file extension for files which contain utterances annotated with dialogue act tags.\n\nExample 2.6 SWDA .utt file\no          A.1 utt1: Okay.  /\nqw          A.1 utt2: {D So, }\n\nqy^d          B.2 utt1: [ [ I guess, +\n\n+          A.3 utt1: What kind of experience [ do you, + do you ] have, then with child care? /\n\n+          B.4 utt1: I think, ] + {F uh, } I wonder ] if that worked. /\n\nqy          A.5 utt1: Does it say something? /\n\nWhether standard or not, semi-structured data is often designed to be machine-readable. As with unstructured data, the ultimate goal is to convert the data into a structured format and augment the data where necessary to prepare it for a particular research analysis.\nFile encoding\nThe last aspect to consider about corpus formats is file encoding. For a computer to display and process text characters, it must be encoded in a way that the computer can understand (i.e. 1’s and 0’s). Historically, character encoding schemes were developed to represent characters from specific character script sets (e.g. ASCII only includes characters from the English alphabet). However, as the need for a consistent and more inclusive way to encode characters from multiple languages and scripts became apparent, the Unicode standard, Unicode Transformation Format (UTF), was developed in the early 1990s. UTF encodings (UTF-8, UTF-16, and UTF-32) are now the most common way to encode text data and modern computers typically use them by default. Although other more script-specific encoding schemes can still be found in older data (e.g. ISO-8859, Windows-1252, Shift JIS).\nWhen working with corpus data, it is important to know if the encoding scheme used for the data is compatible with your computing environment’s default (most likely UTF). If it is not, you will need to convert the data to a compatible encoding scheme. Rest assured, there is support in R for converting between different encoding schemes if the need arises."
  },
  {
    "objectID": "understanding-data.html#information",
    "href": "understanding-data.html#information",
    "title": "2  Understanding data",
    "section": "\n2.2 Information",
    "text": "2.2 Information\nIdentifying an adequate corpus resource, in terms of content, licensing, and formatting, for the target research question is the first step in moving a quantitative text research project forward. The next step is to select the components or characteristics of this resource that are relevant for the research and then move to organize the attributes of this data into a more informative format. This is the process of converting corpus data into a dataset –a tabular representation of particular attributes of the data as the basis for generating information. Once the data represented as dataset, it is often manipulated and transformed adjusting and augmenting the data such that it better aligns with the research question and the analytical approach.\n\n2.2.1 Organization\nData alone is not informative. Only through explicit organization of the data in a way that makes relationships and meaning explicit does data become information. In this form, our data is called a dataset. This is a particularly salient hurdle in text analysis research. Many textual sources are unstructured or semi-structured, that is relationships that will be used in the analysis have yet to be purposefully drawn and organized from the data.\nTidy Data\nThe selection of the attributes from a corpus and the juxtaposition of these attributes in a relational format, or dataset, that converts data into information is known as data curation. The process of data curation minimally involves creating a base dataset, or curated dataset, which establishes the main informational associations according to philosophical approach outlined by Wickham (2014).\nIn this work, a tidy dataset refers both to the structural (physical) and informational (semantic) organization of the dataset. Physically, a tidy dataset is a tabular data structure, illustrated in Figure 2.3, where each row is an observation and each column is a variable that contains measures of a feature or attribute of each observation. Each cell where a given row-column intersect contains a value which is a particular attribute of a particular observation for the particular observation-feature pair also known as a data point.\n\n\n\n\nFigure 2.3: Visual summary of the tidy format.\n\n\n\nIn terms of semantics, columns and rows both contribute to the informational value of the dataset. Let’s start with columns. In a tidy dataset, each column is a variable, an attribute that can take on a number of values. Although variables vary in terms of values, they do not in type. A variable is of one and only one informational type. Statistically speaking, informational types are defined as levels of measurement, a classification system used to semantically distiguish between types of variables. There are four levels (or types) in this system: nominal, ordinal, interval, and ratio.\nIn practice, however, text analysis researchers often group these levels into three main informational types: categorical, ordinal, and numeric (Gries 2021). What do these informational types represent? Categorical data is for labeled data or classes that answer the question “what?” Ordinal data is categorical data with rank order that answers the question “what order?” Numeric data is ordinal data with equal intervals between values that answers the question “how much or how many?”\nLet’s look at an example of a tidy dataset. Using the criteria just described, let’s see if we can identify the informational values (categorical, ordinal, or numeric) of the variables that appear in a snippet from the MASC corpus in dataset form in Table 2.1.\n\n\n\n\nTable 2.1: MASC dataset variables.\n\n\n\n\n\n\n\n\n\n\ntitle\nmodality\ndate\nref_num\nword\npos\nnum_letters\n\n\n\nHotel California\nWriting\n2008\n0\n&gt;\nNN\n1\n\n\nHotel California\nWriting\n2008\n1\nHotel\nNNP\n5\n\n\nHotel California\nWriting\n2008\n2\nCalifornia\nNNP\n10\n\n\nHotel California\nWriting\n2008\n3\nFact\nNNP\n4\n\n\nHotel California\nWriting\n2008\n4\n:\n:\n1\n\n\nHotel California\nWriting\n2008\n5\nSound\nNNP\n5\n\n\nHotel California\nWriting\n2008\n6\nis\nVBZ\n2\n\n\nHotel California\nWriting\n2008\n7\na\nDT\n1\n\n\nHotel California\nWriting\n2008\n8\nvibration\nNN\n9\n\n\nHotel California\nWriting\n2008\n9\n.\n.\n1\n\n\n\n\n\n\nWe have seven variables listed as headers for each of the columns. We could go one-by-one left-to-right but let’s take another tack. Instead, let’s identify all those variables that cannot be numeric –these are all the non-numeral variables: title, modality, word, and pos. The question to ask of these variables is whether they represent an order or rank. Since titles, modalities, words, and parts-of-speech are not ordered values, they are all categorical.\nNow in relation to date, ref_num, and num_letters. All three are numerals, so they could be numeric. But they could also be numeral representations of ordinal data. Before we can move forward, we need to make sure we understand what each variable means and how it is measured, or operationalized. The variable name and the values can be helpful in this respect. date is what it sounds like, a date, and is operationalized as a year in the Gregorian calendar. And num_letters seems quite descriptive as well, number of letters, appearing as a letter count. But in some cases it may be opaque as to what is being measured by the variable name alone, for example ref_num, and one will have to refer to the dataset documentation. In this case ref_num is a reference number operationalized as a unique identifier for each word per document in the corpus.\nWith this in mind, let’s return to the question of whether date, ref_num, and num_letters are numeric or ordinal. Starting with the trickiest one, date, we can ask the question to identify numeric data: “how much or how many?”. In the case of date, the answer is neither. A date is a point in time, not a quantity. So date is not numeric. But it does provide information about order. Hence, date is ordinal. ref_num is also ordinal because the question “what order?” can be asked of it. Finally, num_letters is numeric because it answers the question “how many?”.\nLet’s turn to the second semantic value of a tidy dataset. In a tidy dataset, each row is an observation. But an observation of what? This depends on what the unit of observation is. That sounds circular, but its not. The unit of observation is simply the primary entity that is being observed. Without context, it can it can be identified in a dataset by looking at the level of specificity of the variable values and asking what each variable describes. When one variable appears to be the most individualized and other variables appear to describe that variable, then the most individualized variable is likely the unit of observation of the dataset, i.e. the meaning of each observation.\nApplying these strategies to the Table in 2.1, we can see that each observation at its core is a word. We see that the values of each observation are the attributes of each word. word is the most individualized variable and the pos (part-of-speech), num_letters, and ref_num all describe the word.\nThe other variables title, modality, and date are not direct attributes of the word. Instead, they are attributes of the document in which the word appears. Together, however, they all provide information about the word.\n\n\n\n\n\n\n Consider this\nData can be organized in many ways. It is important to make clear that data in tabular format in itself does not constitute a dataset, in the tidy sense we will be using. Can you think of examples of tabular information that would not be in a tidy format? What would be the implications of this for data analysis?\n\n\n\nAs we round out this section on data organization, it is important to stress that the purpose of curation is to represent the corpus data in an informative, tidy format. A curated dataset serves as a reference point making relationships explicit, enabling more efficient querying, and paving the way for further processing before analysis. In the subsequent section, we will highlight common approaches to modifying the curated dataset, either row-wise or column-wise, to make it more amenable to the particular aims of a given analysis.\n\n2.2.2 Transformation\nAt this point have introduced the first step creating a dataset ready for analysis, data curation. However, a curated dataset is rarely the final organizational step before proceeding to statistical analysis. Many times, if not always, the curated dataset requires data transformation to derive or generate new data for the dataset. This process may incur row-wise (observation) or column-wise (variable) level changes, as illustrated in Figure 2.4.\n\n\n\n\nFigure 2.4: Visualization of row-wise and column-wise transformation operations on a dataset.\n\n\n\nThe results build on and manipulate the curated dataset to produce a derived dataset. While there is typically one curated dataset that serves as the base organizational dataset, there may be multiple derived datasets, each aligning with the informational needs of specific analyses in the research project.\nIn what follows, we will discuss the most common types of data transformation: text normalization, text tokenization, variable recoding, variable generation, and observation/ variable merging. Note, however, that the order in which these transformations are applied in a given research project is not fixed and will vary depending on the dataset and the research question(s) to be addressed.\nText normalization\n\n\nThe process of text normalization aims to prepare and standardize text. It is often a preliminary step in data transformation processes which include variables with text. The aim is to convert the text into a uniform format to reduce unwanted variation and noise.\nLet’s take a toy dataset, in Table 2.2, as an example starting point. In this dataset, we have two variables, text_id and text. It only has one observation.\n\n\n\n\nTable 2.2: A toy dataset with two variables, text_id and text.\n\n\n\n\n\ntext_id\ntext\n\n\n1\nIt’s a beautiful day in the US, and our group decided to visit the famous Grand Canyon. As we reached the destination, Jane said, “I can’t believe we’re finally here!” The breathtaking view left us speechless; indeed, it was a sight to behold. During our trip, we encountered tourists from different countries, sharing stories and laughter. For all of us, this experience will be cherished forever.\n\n\n\n\n\nThe types of transformations we apply will depend on the specific needs of the project, but can include those found in Table 2.3.\n\n\nTable 2.3: Common text normalization tasks\n\n\n\n\n\n\nTask name\nRelevant example\nTypical purpose\n\n\n\nLowercasing\n\n\"Text\" to \"text\"\n\nMinimizing case sensitivity in subsequent analysis\n\n\nRemoval of Punctuation and Special Characters\n\n\"Hello, World!\" to \"Hello World\"\n\nRemoving non-alphanumeric characters that may not carry semantic value\n\n\nAdjustment of Forms\n\n\"colour\" to \"color\", \"it's\" to \"it is\", \"1\" to \"one\"\n\nStandardizing variations in spelling, contractions, and numeric forms to a common format\n\n\nStopword Removal\n\n\"This is a sentence\" to \"This sentence\"\n\nDiscarding common words that usually do not contain meaningful semantic information\n\n\n\n\nThese transformations are column-wise operations, meaning they preserve the number of rows in the dataset. They also preserve the number of columns, but do change the values of the variables. These tasks should be applied with an understanding of how the changes will impact the analysis. For example, lowercasing can be useful for reducing differences between words that are otherwise identical, yet differ in case due to word position in a sentence (“The” versus “the”). However, lowercasing can also be problematic if the case of the word carries semantic value, such as in the case of “US” (United States) and “us” (first person plural pronoun). The same can be said for removing or adjusting particular characters and discarding stopwords.\n\n\n\n\n\n\n Dive deeper\nStopwords are words that are so commonly used in a language that they tend not to contribute much to the meaning of a sentence. There are various predefined lists of stopwords for different languages available on the web and through R in the stopwords package (Benoit, Muhr, and Watanabe 2021). However, it is important to note the criteria used to determine which words are considered stopwords in a particular resource may not fit a researcher’s needs or the characteristics of the data. Learn more about stopwords in Kaur and Buttar (2018).\n\n\n\nLet’s be conservative and only apply lowercasing to our toy dataset as seen in Table 2.4.\n\n\n\n\nTable 2.4: A toy dataset with two variables, text_id and text, where the text has been lowercased.\n\n\n\n\n\ntext_id\ntext\n\n\n1\nit’s a beautiful day in the us, and our group decided to visit the famous grand canyon. as we reached the destination, jane said, “i can’t believe we’re finally here!” the breathtaking view left us speechless; indeed, it was a sight to behold. during our trip, we encountered tourists from different countries, sharing stories and laughter. for all of us, this experience will be cherished forever.\n\n\n\n\n\nWhen text normalization steps are motivated and applied with foresight they serve to enhance the quality of the data and improves the reliability of subsequent transformation steps.\nText tokenization\nAnother text-oriented transformation step is text tokenization. This process involves adapting the text such that it reflects the target linguistic unit that will be used in the analysis. This is a row-wise operation expanding the number of rows, if the linguistic unit is smaller than the original variable, or reducing the number of rows, if the linguistic unit is larger than the original variable. At its core, tokenization is the process which enables the quantitative analysis of text.\nText variables can be tokenized at any linguistic level. To illustrate, consider our toy dataset from Table 2.4. We can tokenize the text at the sentence level, in Table 2.5, by splitting the text at the period followed by a space. This results in a dataset with four observations, one for each sentence in the original text.\n\n\n\n\nTable 2.5: A toy dataset with two variables, text_id and sentence, where the text has been tokenized at the sentence level.\n\n\n\n\n\ntext_id\nsentence\n\n\n\n1\nit’s a beautiful day in the us, and our group decided to visit the famous grand canyon\n\n\n1\nas we reached the destination, jane said, “i can’t believe we’re finally here!” the breathtaking view left us speechless; indeed, it was a sight to behold\n\n\n1\nduring our trip, we encountered tourists from different countries, sharing stories and laughter\n\n\n1\nfor all of us, this experience will be cherished forever.\n\n\n\n\n\n\nIt is important to make explicit what the operationalization of our linguistic unit is as common terms such as sentence, word, etc. can be defined in different ways. For example, the sentence tokenization above is based on the assumption that sentences are separated by a period followed by a space. This is a suitable definition for this text, but likely will not be for other English text or for other languages/ writing scripts. For words, a very simple operationalization is to use whitespace separation (e.g. “I cannot believe it.” – [“I”, “cannot”, “believe”, “it.”]). However, this approach does not handle puntuation marks (e.g. [“it.”]) or contractions (e.g. [“can’t”]). A more sophisticated operationalization will be necessary for these, and possibly other, cases.\nAnother important token unit is the \\(n\\)-gram. Words or characters can be grouped into contiguous sequences with a moving window of a certain size \\(n\\). Single unit windows are referred to as unigrams, two units as bigrams, three units as trigrams, and so on. Let’s tokenize our toy dataset at the bigram level for words using a simple whitespace separation for words, as seen in Table 2.6.\n\n\n\n\nTable 2.6: A toy dataset with two variables, text_id and bigram, where the text has been tokenized at the bigram word level.\n\ntext_id\nword\n\n\n\n1\nit’s a\n\n\n1\na beautiful\n\n\n1\nbeautiful day\n\n\n1\nday in\n\n\n1\nin the\n\n\n1\nthe us\n\n\n1\nus and\n\n\n1\nand our\n\n\n1\nour group\n\n\n1\ngroup decided\n\n\n\n\n\n\nIn Table 2.6 we see that the first bigram is “it’s a” –the first two words (based on whitespace separation) in the text. The second bigram is “a toy” –the second and third words in the text. This continues to the end of the text. \\(N\\)-gram tokenization can be useful to capture context that would otherwise would be lost from tokenizing words or characters at the unigram level.\nUp to this point our tokens have been surface forms. That is, they are the actual words or characters as they appear in the text. However, we may want to reduce the tokens to their base form, removing their inflectional forms. This is known as lemmatization. For example, the word “run” is the lemma of the words “running”, “runs”, and “ran”. Let’s lemmatize the third sentence in our toy dataset. For comparison, word and lemma are shown side-by-side in Table 2.7.\n\n\n\n\nTable 2.7: A toy dataset with two variables, text_id and word, where the text has been tokenized at the unigram word level and lemmatized.\n\ntext_id\nword\nlemma\n\n\n\n1\nduring\nduring\n\n\n1\nour\nour\n\n\n1\ntrip\ntrip\n\n\n1\nwe\nwe\n\n\n1\nencountered\nencounter\n\n\n1\ntourists\ntourist\n\n\n1\nfrom\nfrom\n\n\n1\ndifferent\ndifferent\n\n\n1\ncountries\ncountry\n\n\n1\nsharing\nshare\n\n\n1\nstories\nstory\n\n\n1\nand\nand\n\n\n1\nlaughter\nlaughter\n\n\n\n\n\n\n\n\n\n\n\n\n Case study\nInflectional family size is the number of inflectional forms for a given word and can be calculated from a corpus by counting the number of surface forms for each lemma in the corpus (Kostić, Marković, and Baucal 2003). Baayen, Feldman, and Schreuder (2006) found that words with larger inflectional family size are associated with faster word recognition times in lexical processing tasks.\n\n\n\nTogether tokenization and lemmatization are powerful tools for transforming text. If our dataset contains more robust linguistic annotation or that annotation can be generated (see Section 2.2.2.4), this information can also be leveraged to tokenize language into a format that is easier to explore and quantify in an analysis.\nVariable recoding\nRecoding is the process of transforming the values of one or more variables into new values which are more amenable to analysis. The aim is to simplify complex variables, making it easier to identify patterns and trends relevant for the research question. This is a column-wise operation which can be applied to categorical or numeric variables.\nLet’s return to the MASC dataset and demonstrate recoding of categorical and numeric variables. In Table 2.1 the pos variable whose values represent the part-of-speech (POS) of each token in the text. The measure is a POS tag from the Penn Treebank tagset (Marcus, Santorini, and Marcinkiewicz 1993). This tagset makes twelve major and 45 minor grammatical class distinctions. In an analysis that aims to explore only major class distinctions, it would be useful to recode the pos variable into major classes only (i.e. noun, pronoun, adjective, verb, adverb, etc.) to facilitate queries, summaries, and visualizations.\n\n\n\n\nTable 2.8: A toy dataset with three variables, text_id, pos, major_pos, where the pos variable has been recoded into major grammatical classes major_pos.\n\n\n\n\n\n\n\n\n\n\n\ntitle\nmodality\ndate\nref_num\nword\npos\nmajor_pos\nnum_letters\n\n\n\nHotel California\nWriting\n2008\n0\n&gt;\nNN\nnoun\n1\n\n\nHotel California\nWriting\n2008\n1\nHotel\nNNP\nnoun\n5\n\n\nHotel California\nWriting\n2008\n2\nCalifornia\nNNP\nnoun\n10\n\n\nHotel California\nWriting\n2008\n3\nFact\nNNP\nnoun\n4\n\n\nHotel California\nWriting\n2008\n4\n:\n:\npunctuation\n1\n\n\nHotel California\nWriting\n2008\n5\nSound\nNNP\nnoun\n5\n\n\nHotel California\nWriting\n2008\n6\nis\nVBZ\nverb\n2\n\n\nHotel California\nWriting\n2008\n7\na\nDT\ndeterminer\n1\n\n\nHotel California\nWriting\n2008\n8\nvibration\nNN\nnoun\n9\n\n\nHotel California\nWriting\n2008\n9\n.\n.\npunctuation\n1\n\n\n\n\n\n\nIn Table 2.8, the pos variable has been recoded into major grammatical classes. The major_pos variable is a categorical variable with 12 levels, one for each major grammatical class in the Penn Treebank tagset. While the demonstration here demonstrates the simplification of a categorical variable, recoding can also be used to transliterate categorical variables. Continuing with the theme of POS tags, the pos variable could be recoded into a different tagset, such as the Universal Dependencies tagset (Nivre et al. 2016).\nNow, let’s look at recoding the numeric variable num_letters. This variable represents the number of letters in each token. In the MASC dataset, the num_letters variable is a numeric variable with a range of values from 1 to 21. In some analyses, it may be useful to recode this variable into discrete categories, or bins, such as short, medium, and long words.\n\n\n\n\nTable 2.9: The MASC dataset with the num_letters variable recoded into three categories: short, medium, and long words in word_length.\n\n\n\n\n\n\n\n\n\n\n\n\ntitle\nmodality\ndate\nref_num\nword\npos\nmajor_pos\nnum_letters\nword_length\n\n\n\nHotel California\nWriting\n2008\n0\n&gt;\nNN\nnoun\n1\nshort\n\n\nHotel California\nWriting\n2008\n1\nHotel\nNNP\nnoun\n5\nmedium\n\n\nHotel California\nWriting\n2008\n2\nCalifornia\nNNP\nnoun\n10\nlong\n\n\nHotel California\nWriting\n2008\n3\nFact\nNNP\nnoun\n4\nmedium\n\n\nHotel California\nWriting\n2008\n4\n:\n:\npunctuation\n1\nshort\n\n\nHotel California\nWriting\n2008\n5\nSound\nNNP\nnoun\n5\nmedium\n\n\nHotel California\nWriting\n2008\n6\nis\nVBZ\nverb\n2\nshort\n\n\nHotel California\nWriting\n2008\n7\na\nDT\ndeterminer\n1\nshort\n\n\nHotel California\nWriting\n2008\n8\nvibration\nNN\nnoun\n9\nlong\n\n\nHotel California\nWriting\n2008\n9\n.\n.\npunctuation\n1\nshort\n\n\n\n\n\n\nIn Table 2.9 the variable word_length appears with the values short, medium, and long. This is now a categorical variable of type ordinal. Of note, is that the operational definition of used to create these word length bins should be made explicit in the documentation of the dataset.\nIn sum, recoding is a useful data transformation technique that can be used to simplify complex variables, making it easier to identify patterns and trends relevant for the research question.\nVariable generation\nThe process of variable generation aims to augment existing variables or create new ones, and as such is a column-wise operation. Generation can include applying calculations or extracting relevant information from existing variables or enhancing text variables with linguistic annotation. Simplifying a bit, generation helps make implicit attributes explicit. The results of this process enables direct access during analysis to features that were otherwise hidden or difficult to access.\nLet’s highlight a some common calculation and extraction examples that generate variables. First, let’s look at the calculation of measures. In text analysis, measures are often used to describe the properties of a document or linguistic unit. For example, the number of words in a corpus document, the lengths of sentences, the number of clauses in a sentence, etc.. In turn, these measures can be used to calculate other measures, such as lexical diversity or syntactic complexity measures.\nIn terms of extraction, the goal is to distill relevant information from existing variables. For example, extracting the year from a date variable, or extracting the first name from a full name variable. In text analysis, extraction is often used to extract information from text variables. Say we have a dataset with a variable containing conversation utterances. We may want to extract some characteristic from those utterances and capture their occurrence in a new variable.\nBut what if we want to extract linguistic information from a text variable that is not explicitly present in the text? This is where linguistic annotation comes in. Linguistic annotation is the process of enriching text with linguistic information, such as morphological features, part-of-speech tags, syntactic structure, etc.. This can be done manually by linguist coders and/ or done using natural language processing (NLP) tools, many of which are available in R (see Chapter 7).\nTo illustrate the process of generating linguistic annotation with existing tools, I will use the plain text version of the MASC. In Table 2.10, the text has been organized into a dataset and tokenized into sentences. The text_id variable is a unique identifier for each document, and the sentence_id variable is a unique identifier for each sentence.\n\n\n\n\nTable 2.10: A MASC sample document in dataset tokenized into sentences.\n\n\n\n\n\n\ntext_id\nsentence_id\nsentence\n\n\n\n1\n1\n&gt;Hotel California Fact: Sound is a vibration.\n\n\n1\n2\nSound travels as a mechanical wave through a medium, and in space, there is no medium.\n\n\n1\n3\nSo when my shuttle malfunctioned and the airlocks didn’t keep the air in, I heard nothing.\n\n\n1\n4\nAfter the first whoosh of the air being sucked away, there was lightning, but no thunder.\n\n\n1\n5\nEyes bulging in panic, but no screams.\n\n\n\n\n\n\nApplying a pre-trained model from the Universal Dependencies (UD)1 project, we can generate linguistic annotation for each token in the MASC.\n\n\n\n\nTable 2.11: Automatic linguistic annotation for grammatical category and syntactic structure for an example English sentence from the MASC.\n\n\n\n\n\n\n\n\n\n\ndoc_id\nsentence_id\ntoken_id\ntoken\nxpos\nfeatures\nsyntactic_relation\n\n\n\n1\n4\n1\nAfter\nIN\nNA\nmark\n\n\n1\n4\n2\nthe\nDT\nDefinite=Def|PronType=Art\ndet\n\n\n1\n4\n3\nfirst\nJJ\nDegree=Pos|NumType=Ord\namod\n\n\n1\n4\n4\nwhoosh\nNN\nNumber=Sing\nnsubj:pass\n\n\n1\n4\n5\nof\nIN\nNA\ncase\n\n\n1\n4\n6\nthe\nDT\nDefinite=Def|PronType=Art\ndet\n\n\n1\n4\n7\nair\nNN\nNumber=Sing\nnmod\n\n\n1\n4\n8\nbeing\nVBG\nVerbForm=Ger\naux:pass\n\n\n1\n4\n9\nsucked\nVBN\nTense=Past|VerbForm=Part|Voice=Pass\nadvcl\n\n\n1\n4\n10\naway\nRB\nNA\nadvmod\n\n\n1\n4\n11\n,\n,\nNA\npunct\n\n\n1\n4\n12\nthere\nEX\nNA\nexpl\n\n\n1\n4\n13\nwas\nVBD\nMood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin\nroot\n\n\n1\n4\n14\nlightning\nNN\nNumber=Sing\nnsubj\n\n\n1\n4\n15\n,\n,\nNA\npunct\n\n\n1\n4\n16\nbut\nCC\nNA\ncc\n\n\n1\n4\n17\nno\nDT\nNA\ndet\n\n\n1\n4\n18\nthunder\nNN\nNumber=Sing\nconj\n\n\n1\n4\n19\n.\n.\nNA\npunct\n\n\n\n\n\n\nThe annotated dataset now includes the key variables xpos (Penn treebank tags), features (morphological features), and syntactic_relation. The results of this process can then be further transformed as need be to fit the needs of the analysis.\nA word of caution: automated linguistic annotation offers rapid access to abundant and highly dependable linguistic data for numerous languages. However, linguistic annotation tools are not infallible. They are tools developed by training computational algorithms to identify patterns in previously annotated and verified datasets, resulting in a language model. This model is then employed to predict linguistic annotations for new language data (as seen in Table 2.11). The accuracy of the linguistic annotation heavily relies on the congruence between the language sampling framework of the trained data and the language data set to be automatically annotated.\nObservation/ variable merging\n\n\n\nThe processing of merging datasets is a transformation step which can be row-wise or column-wise. Row-wise merging is the process of combining datasets by appending observations from one dataset to another. Column-wise merging is the process of combining datasets by appending variables from one dataset to another. In either case, merging provides a way to enrich a dataset by incorporating additional information.\nTo merge in row-wise manner the datasets involved in the process must have the same variables and variable types. This process is often referred to as concatenating datasets. It can be thought of as stacking datasets on top of each other to create a larger dataset. Remember, having the sample variables and variable types is not the same has having the same values.\nTake, for example, a case when a corpus resource contains data for two populations. In the course of curating and transforming the datasets it may make more sense to work with the datasets separately. However, when it comes time to analyze the data, it may be more convenient to work with the datasets as a single dataset. In this case, the datasets can be concatenated to create a single dataset.\nTo illustate, consider the toy datasets in Table 2.12 and Table 2.13.\n\n\n\n\nTable 2.12: Toy dataset of written text data.\n\n\n\n\n\n\n\nparticipant_id\ntext_id\nmodality\ntext\n\n\n\nP1\nT1\nWritten\nTechnology has revolutionized our lives in many ways. It has made communication easier, faster, and more efficient.\n\n\nP3\nT3\nWritten\nClimate change is a pressing issue that affects everyone on Earth. We must take immediate action to reduce our carbon footprint.\n\n\nP5\nT5\nWritten\nEducation is the key to personal and societal growth. Investing in quality education will lead to a brighter future for all.\n\n\n\n\n\n\n\n\n\n\nTable 2.13: Toy dataset of spoken text data.\n\n\n\n\n\n\n\nparticipant_id\ntext_id\nmodality\ntext\n\n\n\nP2\nT2\nSpoken\nHello, my name is X. I am a software engineer working at XYZ company.\n\n\nP4\nT4\nSpoken\nHi, I’m X, and I work as a project manager. My main responsibility is to ensure that projects are completed on time and within budget.\n\n\nP6\nT6\nSpoken\nHi, my name is X, and I’m a teacher. I teach English at a local high school.\n\n\n\n\n\n\nThese datasets, in Table 2.12 and Table 2.13, contain the same variables and variable types, but different observations –one in which the sample contains written language and the other spoken. Conveniently, they can be concatenated to create a single dataset that contains all of the observations, as seen in Table 2.14.\n\n\n\n\nTable 2.14: Toy dataset of written and spoken text data concatenated.\n\n\n\n\n\n\n\nparticipant_id\ntext_id\nmodality\ntext\n\n\n\nP1\nT1\nWritten\nTechnology has revolutionized our lives in many ways. It has made communication easier, faster, and more efficient.\n\n\nP3\nT3\nWritten\nClimate change is a pressing issue that affects everyone on Earth. We must take immediate action to reduce our carbon footprint.\n\n\nP5\nT5\nWritten\nEducation is the key to personal and societal growth. Investing in quality education will lead to a brighter future for all.\n\n\nP2\nT2\nSpoken\nHello, my name is X. I am a software engineer working at XYZ company.\n\n\nP4\nT4\nSpoken\nHi, I’m X, and I work as a project manager. My main responsibility is to ensure that projects are completed on time and within budget.\n\n\nP6\nT6\nSpoken\nHi, my name is X, and I’m a teacher. I teach English at a local high school.\n\n\n\n\n\n\nMerging datasets can be performed in a column-wise manner as well. In this process, the datasets need not have the exact same variables and variable types, rather it is required that the datasets share a common variable of the same informational type that can be used to index the datasets. This process is often referred to as joining datasets.\nCorpus resources often include metadata in stand-off annotation format. That is, the metadata is not embedded in the corpus files, but rather is stored in a separate file. The metatdata and corpus files will share a common variable which is used to join the metadata with the corpus files.\nTo exemplify, here’s another toy dataset that shares the participant_id index with the previous dataset in Table 2.14 and includes the variables native_speaker_eng, age, and gender:\n\n\n\n\nTable 2.15: Toy dataset of participant data with a shared variable participant_id to index the datasets.\n\nparticipant_id\nnative_speaker_eng\nage\ngender\n\n\n\nP1\nYes\n28\nM\n\n\nP2\nNo\n35\nM\n\n\nP3\nYes\n42\nF\n\n\nP4\nNo\n26\nF\n\n\nP5\nYes\n31\nM\n\n\nP6\nNo\n39\nF\n\n\n\n\n\n\nThis dataset provides additional information about each participant, such as their English native speaker status, age, and gender.\nSince the two datasets share the participant_id variable, we can merge them to create a new dataset that combines the information from both datasets, as we see in Table 2.16.\n\n\n\n\nTable 2.16: Joining variables from two datasets based on a shared index variable.\n\n\n\n\n\n\n\n\n\n\nparticipant_id\ntext_id\nmodality\ntext\nnative_speaker_eng\nage\ngender\n\n\n\nP1\nT1\nWritten\nTechnology has revolutionized our lives in many ways. It has made communication easier, faster, and more efficient.\nYes\n28\nM\n\n\nP3\nT3\nWritten\nClimate change is a pressing issue that affects everyone on Earth. We must take immediate action to reduce our carbon footprint.\nYes\n42\nF\n\n\nP5\nT5\nWritten\nEducation is the key to personal and societal growth. Investing in quality education will lead to a brighter future for all.\nYes\n31\nM\n\n\nP2\nT2\nSpoken\nHello, my name is X. I am a software engineer working at XYZ company.\nNo\n35\nM\n\n\nP4\nT4\nSpoken\nHi, I’m X, and I work as a project manager. My main responsibility is to ensure that projects are completed on time and within budget.\nNo\n26\nF\n\n\nP6\nT6\nSpoken\nHi, my name is X, and I’m a teacher. I teach English at a local high school.\nNo\n39\nF\n\n\n\n\n\n\nAnother common case where joining datasets is useful is when there are external resources that can be used to enrich the dataset. For example, a dataset of text data may include a variable that identifies the language of each document. This variable can be used to join the dataset with a dataset of language metadata, such as the number of speakers of each language, as long as the language metadata dataset includes a variable that identifies the language of each document in the same format as the language variable in the text dataset.\n\nIn sum, the transformation steps described here collectively aim to produce higher quality datasets that are relevant in content and structure to submit to analysis. The process may include one or more of the previous transformations but is rarely linear and is most often iterative. It is typical to do some normalization then generation, then recoding, and then return to normalizing, and so forth. This process is highly idiosyncratic given the characteristics of the curated dataset and the ultimate goal for the derived dataset(s)."
  },
  {
    "objectID": "understanding-data.html#sec-ud-documentation",
    "href": "understanding-data.html#sec-ud-documentation",
    "title": "2  Understanding data",
    "section": "\n2.3 Documentation",
    "text": "2.3 Documentation\nAs we have seen in this chapter, acquiring corpus data and converting that data into information involves a number of conscious decisions and implementation steps. As a favor to ourselves, as researchers, and to the research community, it is crucial to document these decisions and steps. This makes it both possible to retrace our own steps and also provides a guide for future researchers that want to reproduce and/ or build on your research. A programmatic approach to quantitative research helps ensure that the implementation steps are documented and reproducible but it is also vital that the decisions that are made are documented as well. This includes data origin information for the acquired corpus data and data dictionaries for the curated and derived datasets.\n\n2.3.1 Data origin\nData acquired from corpus resources should be accompanied by information about the data origin. Table 2.17 provides a list of the types of information that should be included in the data origin information.\n\n\n\n\nTable 2.17: Data origin information.\n\n\n\n\n\nInformation\nDescription\n\n\n\nResource name\nName of the corpus resource.\n\n\nData source\nURL, DOI, etc.\n\n\n\nData sampling frame\nLanguage, language variety, modality, genre, etc.\n\n\n\nData collection date(s)\nThe date or date range of the data collection.\n\n\nData format\nPlain text, XML, HTML, etc.\n\n\n\nData schema\nRelationships between data elements: files, folders, etc.\n\n\n\nLicense\nCC BY, CC BY-NC, etc.\n\n\n\nAttribution\nCitation information for the data source.\n\n\n\n\n\n\nFor many corpus resources, the corpus documentation will include all or most of this information as part of the resource download or documented online. If this information is not present in the corpus resource or you compile your own, it is important to document this information yourself. This information can be documented in file, such as a plain text file or spreadsheet, that is included with the corpus resource.\n\n2.3.2 Data dictionaries\nThe process of organizing the data into a dataset, curation, and modifications to the dataset in preparation for analysis, transformation, each include a number of project-specific decisions. These decisions should be documented.\nOn the one hand each dataset that is created should have a data dictionary file. A data dictionary is a document, usually in a spreadsheet format, that describes the variables in a dataset. The key information that should be included in a data dictionary is provided in Table 2.18.\n\n\n\n\nTable 2.18: Data dictionary information.\n\n\n\n\n\nInformation\nDescription\n\n\n\nVariable name\nThe name of the variable as it appears in the dataset, e.g. participant_id, modality, etc.\n\n\n\nReadable variable name\nA human-readable name for the variable, e.g. ‘Participant ID’, ‘Language modality’, etc.\n\n\n\nVariable type\nThe type of information that the variable contains, e.g. ‘categorical’, ‘ordinal’, etc.\n\n\n\nVariable description\nA prose description expanding on the readable name and can include measurement units, allowed values, etc.\n\n\n\n\n\n\n\nOrganizing this information in a tabular format, such as a spreadsheet, can make it easy for others to read and understand your data dictionary.\nOn the other hand, the data curation and transformation steps should be documented in the code that is used to create the dataset. This is one of the valuable features of a programmatic approach to quantitative research. The transparency of this documentation is enhanced by using literate programming strategies to intermingling prose descriptions and code the steps in the same, reproducible document.\nBy providing a comprehensive data dictionary and using a programmatic approach to data curation and transformation, you ensure that others can easily understand and work with your dataset, facilitating collaboration and reproducibility."
  },
  {
    "objectID": "understanding-data.html#summary",
    "href": "understanding-data.html#summary",
    "title": "2  Understanding data",
    "section": "Summary",
    "text": "Summary\nIn this chapter we have focused on data and information –the first two components of DIKI Hierarchy. This process is visualized in Figure 2.5.\n\n\n\n\nFigure 2.5: Understanding data: visual summary\n\n\n\nFirst a distinction is made between populations and samples, the latter being a intentional and subjective selection of observations from the world which attempt to represent the population of interest. The result of this process is known as a corpus. Whether developing a corpus or selecting an existing a corpus it is important to vet the sampling frame for its applicability and viability as a resource for a given research project.\nOnce a viable corpus is identified, then that corpus is converted into a curated dataset which adopts the tidy dataset format where each column is a variable, each row is an observation, and the intersection of columns and rows contain values. This curated dataset serves to establish the base informational relationships from which your research will stem.\nThe curated dataset will most likely require transformations which may include normalization, tokenization, recoding, generation, and/ or merging to enhance the usefulness of the information to analysis. A derived dataset or set of datasets will the result from this process.\nFinally, documentation should be implemented at the acquisition, curation, and transformation stages of the analysis project process. The combination of data origin, data dictionary, and literate programming files establishes documentation of the data and implementation steps to ensure transparent and reproducible research."
  },
  {
    "objectID": "understanding-data.html#activities",
    "href": "understanding-data.html#activities",
    "title": "2  Understanding data",
    "section": "Activities",
    "text": "Activities\nIn the following activities you will learn how to read, inspect, and write data and datasets in R using reproducible strategies.\n\n\n\n\n\n\n Recipe\n\nWhat: Reading, inspecting, and writing dataHow: Read Recipe 2 and participate in the Hypothes.is online social annotation.Why: To use literate programming in Quarto to work with R coding strategies for reading, inspecting, and writing datasets.\n\n\n\n\n\n\n\n\n\n Lab\n\nWhat: Reading, inspecting, and writing dataHow: Clone, fork, and complete the steps in Lab 2.Why: To read datasets from packages and from plain-text files, inspect and report characteristics of datasets, and write datasets to plain-text files."
  },
  {
    "objectID": "understanding-data.html#questions",
    "href": "understanding-data.html#questions",
    "title": "2  Understanding data",
    "section": "Questions",
    "text": "Questions\n\n\n\n\n\n\n\n\nConceptual questions\n\nWhat is the difference between a population and a sample?\nWhy is it important to vet a corpus before using it in a research project?\nWhat is a curated dataset in the context of linguistic research?\nWhat is the difference between a variable, an observation, and a value?\nWhy is it important to identify the informationasl types of variables in a dataset?\nWhat kinds of transformations may be performed on a curated dataset to enhance its usefulness for analysis?\nWhat is an transformed dataset and why is it important in linguistic research?\nWhy is documentation important in the process of conducting linguistic analysis?\nHow does a programmatic approach enhance documentation in linguistic research?\nHow does documenting the corpus data and the curated and derived datasets contribute to transparent and reproducible research in linguistics?\n\n\n\n\n\n\n\n\n\n\n\n Technical questions\n\n\nCreating a sample corpus.\nWriting a corpus documentation.\nConverting a corpus to a derived dataset.\nWriting a data dictionary.\nTransforming a derived dataset.\nMerging datasets.\nWriting a dataset to disk.\nConsider (an example dataset) and its data dictionary, write a script to read the dataset, inspect it, and write it to disk.\nConsider a dataset and its data dictionary what appears to be the unit of analysis and the unit of observation?\n\n\n\n\n\n\n\n\n\n\nÄdel, Annelie. 2020. “Corpus Compilation.” In A Practical Handbook of Corpus Linguistics, edited by Magali Paquot and Stefan Th. Gries, 3–24. Switzerland: Springer.\n\n\nBaayen, R. Harald, L. B. Feldman, and R. Schreuder. 2006. “Morphological Influences on the Recognition of Monosyllabic Monomorphemic Words.” Journal of Memory and Language 55: 290–313. https://doi.org/10.1016/j.jml.2006.03.008.\n\n\nBenoit, Kenneth, David Muhr, and Kohei Watanabe. 2021. Stopwords: Multilingual Stopword Lists. https://github.com/quanteda/stopwords.\n\n\nGries, Stefan Th. 2021. Statistics for Linguistics with r. De Gruyter Mouton.\n\n\nGrieve, Jack, Andrea Nini, and Diansheng Guo. 2018. “Mapping Lexical Innovation on American Social Media.” Journal of English Linguistics 46 (4): 293–319.\n\n\nIde, Nancy, Collin Baker, Christiane Fellbaum, Charles Fillmore, and Rebecca Passonneau. 2008. “MASC: The Manually Annotated Sub-Corpus of American English.” In 6th International Conference on Language Resources and Evaluation, LREC 2008, 2455–60. European Language Resources Association (ELRA).\n\n\nKaur, Jashanjot, and P. Kaur Buttar. 2018. “A Systematic Review on Stopword Removal Algorithms.” International Journal on Future Revolution in Computer Science & Communication Engineering 4 (4): 207–10.\n\n\nKostić, Aleksandar, Tanja Marković, and Aleksandar Baucal. 2003. “Inflectional Morphology and Word Meaning: Orthogonal or Co-Implicative Cognitive Domains?” In Morphological Structure in Language Processing, edited by R. Harald Baayen and Robert Schreuder, 1–44. De Gruyter Mouton. https://doi.org/10.1515/9783110910186.1.\n\n\nKucera, H, and W N Francis. 1967. Computational Analysis of Present Day American English. Brown University Press Providence.\n\n\nMagueresse, Alexandre, Vincent Carles, and Evan Heetderks. 2020. “Low-Resource Languages: A Review of Past Work and Future Challenges.” arXiv. https://arxiv.org/abs/2006.07264.\n\n\nMarcus, Mitchell P, Beatrice Santorini, and Mary Ann Marcinkiewicz. 1993. “Building a Large Annotated Corpus of English: The Penn Treebank.” Computational Linguistics 19 (2): 313–30.\n\n\nNivre, Joakim, Marie-Catherine de Marneffe, Filip Ginter, Yoav Goldberg, Jan Hajič, Christopher D Manning, Ryan McDonald, et al. 2016. “Universal Dependencies V1: A Multilingual Treebank Collection.” Proceedings of the Tenth International Conference on Language Resources and Evaluation (LREC’16), 1659–66.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10). https://doi.org/10.18637/jss.v059.i10."
  },
  {
    "objectID": "understanding-data.html#footnotes",
    "href": "understanding-data.html#footnotes",
    "title": "2  Understanding data",
    "section": "",
    "text": "The Universal Dependency project is an effort to develop cross-linguistically consistent treebank annotation for many languages. The project has developed a set of annotation guidelines and a set of tools for generating linguistic annotation. The project has also developed a set of pre-trained models for many languages.↩︎"
  },
  {
    "objectID": "framing-research.html#sec-fr-frame",
    "href": "framing-research.html#sec-fr-frame",
    "title": "4  Framing research",
    "section": "\n4.1 Frame",
    "text": "4.1 Frame\nTogether a research area, problem, aim and question and the research blueprint that forms the conceptual and practical scaffolding of the project ensure from the outset that the project is solidly grounded in the main characteristics of good research. These characteristics, summarized by Cross (2006), are found in Table 4.1.\n\n\n\n\nTable 4.1: Characteristics of research (Cross, 2006).\n\n\n\n\n\nCharacteristic\nDescription\n\n\n\nPurposive\nBased on identification of an issue or problem worthy and capable of investigation\n\n\nInquisitive\nSeeking to acquire new knowledge\n\n\nInformed\nConducted from an awareness of previous, related research\n\n\nMethodical\nPlanned and carried out in a disciplined manner\n\n\nCommunicable\nGenerating and reporting results which are feasible and accessible by others\n\n\n\n\n\n\nWith these characteristics in mind, let’s get started with the first component to address –connecting with the literature."
  },
  {
    "objectID": "framing-research.html#sec-fr-connect",
    "href": "framing-research.html#sec-fr-connect",
    "title": "4  Framing research",
    "section": "\n4.2 Connect",
    "text": "4.2 Connect\n\n4.2.1 Research area\nThe first decision to make in the research process is to identify a research area. A research area is a general area of interest where a researcher wants to derive insight and make a contribution to understanding. For those with an established research trajectory in language, the area of research to address through text analysis will likely be an extension of their prior work. For others, which include new researchers or researcher’s that want to explore new areas of language research or approach an area through a language-based lens, the choice of area may be less obvious. In either case, the choice of a research area should be guided by a desire to contribute something relevant to a theoretical, social, and/ or practical matter of personal interest. Personal relevance goes a long way to developing and carrying out purposive and inquisitive research.\nSo how do we get started? The first step is to reflect on your own areas of interest and knowledge, be it academic, professional, or personal. Language is at the heart of the human experience and therefore found in some fashion anywhere one seeks to find it. But it is a big world and more often than not the general question about what area to explore language use is sometimes the most difficult. To get the ball rolling, it is helpful to peruse disciplinary encyclopedias or handbooks of linguistics and language-related an academic fields (e.g. Encyclopedia of Language and Linguistics (Brown 2005), A Practical Guide to Electronic Resources in the Humanities (Dubnjakovic and Tomlin 2010), Routledge encyclopedia of translation technology (Chan 2014))\nA more personal, less academic, approach is to consult online forums, blogs, etc. that one already frequents or can be accessed via an online search. For example, Reddit has a wide variety of active subreddits (r/LanguageTechnology, r/Linguistics, r/corpuslinguistics, r/DigitalHumanities, etc.). Twitter and Facebook also have interesting posts on linguistics and language-related fields worth following. Through one of these social media site you may find particular people that maintain a blog worth browsing. For example, I follow Julia Silge, Rachel Tatman, and Ted Underwood, inter alia. Perusing these resources can help spark ideas and highlight the kinds of questions that interest you.\nRegardless of whether your inquiry stems from academic, professional, or personal interest, try to connect these findings to academic areas of research. Academic research is highly structured and well-documented and making associations with this network will aid in subsequent steps in developing a research project.\n\n4.2.2 Research problem\nOnce you’ve made a rough-cut decision about the area of research, it is now time to take a deeper dive into the subject area and jump into the literature. This is where the rich structure of disciplinary research will provide aid to traverse the vast world of academic knowledge and identify a research problem. A research problem highlights a particular topic of debate or uncertainty in existing knowledge which is worthy of study.\nSurveying the relevant literature is key to ensuring that your research is informed, that is, connected to previous work. Identifying relevant research to consult can be a bit of a ‘chicken or the egg’ problem –some knowledge of the area is necessary to find relevant topics, some knowledge of the topics is necessary to narrow the area of research. Many times the only way forward is to jump into conducting searches. These can be world-accessible resources (e.g. Google Scholar) or limited-access resources that are provided through an academic institution (e.g. Linguistics and Language Behavior Abstracts), ERIC, PsycINFO, etc.). Some organizations and academic institutions provide research guides to help researcher’s access the primary literature.\nAnother avenue to explore are journals dedicated to areas in which linguistics and language-related research is published. In Table 4.2, Table 4.3, and Table 4.4, I’ve listed a number of highly visible journals in linguistics, digital humanities, and computational linguistics.\n\n\n\n\nTable 4.2: A list of some linguistics journals.\n\n\n\n\n\nResource\nDescription\n\n\n\nCorpora\nAn international, peer-reviewed journal of corpus linguistics focusing on the many and varied uses of corpora both in linguistics and beyond.\n\n\nCorpus Linguistics and Linguistic Theory\nCorpus Linguistics and Linguistic Theory (CLLT) is a peer-reviewed journal publishing high-quality original corpus-based research focusing on theoretically relevant issues in all core areas of linguistic research, or other recognized topic areas.\n\n\nInternational Journal of Corpus Linguistics\nThe International Journal of Corpus Linguistics (IJCL) publishes original research covering methodological, applied and theoretical work in any area of corpus linguistics.\n\n\nInternational Journal of Language Studies\nIt is a refereed international journal publishing articles and reports dealing with theoretical as well as practical issues focusing on language, communication, society and culture.\n\n\nJournal of Child Language\nA key publication in the field, Journal of Child Language publishes articles on all aspects of the scientific study of language behaviour in children, the principles which underlie it, and the theories which may account for it.\n\n\nJournal of Linguistic Geography\nThe Journal of Linguistic Geography focuses on dialect geography and the spatial distribution of language relative to questions of variation and change.\n\n\nJournal of Quantitative Linguistics\nPublishes research on the quantitative characteristics of language and text in mathematical form, introducing methods of advanced scientific disciplines.\n\n\n\n\n\n\n\n\n\n\nTable 4.3: A list of some humanities journals.\n\n\n\n\n\nResource\nDescription\n\n\n\nDigital Humanities Quarterly\nDigital Humanities Quarterly (DHQ), an open-access, peer-reviewed, digital journal covering all aspects of digital media in the humanities.\n\n\nDigital Scholarship in the Humanities\nDSH or Digital Scholarship in the Humanities is an international, peer reviewed journal which publishes original contributions on all aspects of digital scholarship in the Humanities including, but not limited to, the field of what is currently called the Digital Humanities.\n\n\nJournal of Cultural Analytics\nCultural Analytics is an open-access journal dedicated to the computational study of culture. Its aim is to promote high quality scholarship that applies computational and quantitative methods to the study of cultural objects (sound, image, text), cultural processes (reading, listening, searching, sorting, hierarchizing) and cultural agents (artists, editors, producers, composers).\n\n\n\n\n\n\n\n\n\n\nTable 4.4: A list of some computational linguistics journals.\n\n\n\n\n\nResource\nDescription\n\n\n\nComputational Linguistics\nComputational Linguistics is the longest-running publication devoted exclusively to the computational and mathematical properties of language and the design and analysis of natural language processing systems.\n\n\nLREC Conferences\nThe International Conference on Language Resources and Evaluation is organised by ELRA biennially with the support of institutions and organisations involved in HLT.\n\n\nTransactions of the Association for Computational Linguistics\nTransactions of the Association for Computational Linguistics (TACL) is an ACL-sponsored journal published by MIT Press that publishes papers in all areas of computational linguistics and natural language processing.\n\n\n\n\n\n\nTo explore research related to text analysis it is helpful to start with the (sub)discipline name(s) you identified in when selecting your research area, more specific terms that occur to you or key terms from the literature, and terms such as ‘corpus study’ or ‘corpus-based’. The results from first searches may not turn out to be sources that end up figuring explicitly in your research, but it is important to skim these results and the publications themselves to mine information that can be useful to formulate better and more targeted searches. Relevant information for honing your searches can be found throughout an academic publication (article or book). However, pay particular attention to the abstract, in articles, and the table of contents, in books, and the cited references. Abstracts and tables of contents often include discipline-specific jargon that is commonly used in the field. In some articles there is even a short list of key terms listed below the abstract which can be extremely useful to seed better and more precise search results. The references section will contain relevant and influential research. Scan these references for publications which appear to narrowing in on topic of interest and treat it like a search in its own right.\nOnce your searches begin to show promising results it is time to keep track and organize these references. Whether you plan to collect thousands of references over a lifetime of academic research or your aim is centered around one project, software such as Zotero1, Mendeley, or BibDesk provide powerful, flexible, and easy-to-use tools to collect, organize, annotate, search, and export references. Citation management software is indispensable for modern research –and often free!\nAs your list of relevant references grows, you will want to start the investigation process in earnest. Begin skimming (not reading) the contents of each of these publications, starting with the most relevant first2. Annotate these publications using highlighting features of the citation management software to identify: (1) the stated goal(s) of the research, (2) the data source(s) used, (3) the information drawn from the data source(s), (4) the analysis approach employed, and (5) the main finding(s) of the research as they pertain to the stated goal(s). Next, in your own words, summarize these five key areas in prose adding your summary to the notes feature of the citation management software. This process will allow you to efficiently gather and document references with the relevant information to guide the identification of a research problem, to guide the formation of your problem statement, and ultimately, to support the literature review that will figure in your project write-up.\nFrom your preliminary annotated summaries you will undoubtedly start to recognize overlapping and contrasting aspects in the research literature. These aspects may be topical, theoretical, methodological, or appear along other lines. Note these aspects and continue to conduct more refine searches, annotate new references, and monitor for any emerging patterns of uncertainty or debate (gaps) which align with your research interest(s). When a promising pattern takes shape, it is time to engage with a more detailed reading of those references which appear most relevant highlighting the potential gap(s) in the literature.\nAt this point you can focus energy on more nuanced aspects of a particular gap in the literature with the goal to formulate a problem statement. A problem statement directly acknowledges a gap in the literature and puts a finer point on the nature and relevance of this gap for understanding. This statement reflects your first deliberate attempt to establish a line of inquiry. It will be a targeted, but still somewhat general, statement framing the gap in the literature that will guide subsequent research design decisions."
  },
  {
    "objectID": "framing-research.html#sec-fr-define",
    "href": "framing-research.html#sec-fr-define",
    "title": "4  Framing research",
    "section": "\n4.3 Define",
    "text": "4.3 Define\n\n4.3.1 Research aim\nWith a problem statement in hand, it is now time to consider the goal(s) of the research. A research aim frames the type of inquiry to be conducted. Will the research aim to explore, examine, or explain? In other words, will the research seek to uncover novel relationships, assess the potential strength of a particular relationship, or test a particular relationship? As you can appreciate, the research aim is directly related to the analysis methods we touched upon in Chapter 3.\nTo gauge how to frame your research aim, reflect on the literature that led you to your problem statement and the nature of the problem statement itself. If the gap at the center of the problem statement is a lack of knowledge, your research aim may be exploratory. If the gap concerns a conjecture about a relationship, then your research may take a predictive approach. When the gap points to the validation of a relationship, then your research will likely be inferential in nature. Before selecting your research aim it is also helpful to consult the research aims of the primary literature that led you to your research statement.\nTypically, a problem statement addressing a subtle, specific issue tends to adopt research objectives similar to prior studies. In contrast, a statement focusing on a broader, more distinct issue is likely to have unique research goals. Yet, this is more of a guideline than a strict rule.\nIt’s crucial to understand both the existing literature and the nature of various types of analyses. Being clear about your research goals is important to ensure that your study is well-placed to produce results that add value to the current understanding in an informed manner.\n\n4.3.2 Research question\nThe next step in research design is to craft the research question. A research question is clearly defined statement which identifies an aspect of uncertainty and the particular relationships that this uncertainty concerns. The research question extends and narrows the line of inquiry established in the research statement and research aim. To craft a research question, we can use the research statment for the content and the research aim for the form.\nForm\nThe form of a research question will vary based on the research aim, which as I mentioned, is inimately connected to the analysis approach. For inferential-based research, the research question will actually be a statement, not a question. This statement makes a testable claim about the nature of a particular relationship –i.e. asserts a hypothesis.\nFor illustration, let’s return to the hypothesis (\\(H_1\\)) we previously sketched out in Chapter 3, leaving aside the implicit null hypothesis, seen in Example 4.1.\n\nExample 4.1 Women use more questions than men in spontaneous conversations.\n\nFor predictive- and exploratory-based research, the research question is in fact a question. A reframing of the example hypothesis for a predictive-based research question might take the form seen in Example 4.2.\n\nExample 4.2 Can the number of questions used in spontaneous conversations predict if a speaker is male or female?\n\nAnd a similar exploratory-based research question might take the form seen in Example 4.3.\n\nExample 4.3 Do men and women differ in terms of the number of questions they use in spontaneous conversations?\n\nThe central research interest behind these hypothetical research questions is, admittedly, quite basic. But from these simplified examples, we are able to appreciate the similarities and differences between the forms of research statements that correspond to distinct research aims.\nContent\n\nIn terms of content, the research question will make reference to two key components. First, is the unit of analysis. The unit of analysis is the entity which the research aims to investigate. For our three example research aims, the unit of analysis is the same, namely speakers. Note, however, that the current unit of analysis is somewhat vague in the example research questions. A more precise unit of analysis would include more information about the population from which the speakers are drawn (i.e. English speakers, American English speakers, American English speakers of the Southeast, etc.).\nThe second key component is the unit of observation. The unit of observation is the primary element on which the insight into the unit of analysis is derived and in this way constitutes the essential organizational unit of the dataset to be analyzed. In our examples, the unit of observation, again, is unchanged and is spontaneous conversations. Note that while the unit of observation is key to identify as it forms the organizational backbone of the research, it is very common for the research to derive variables from this unit to provide evidence to investigate the research question.\nIn examples 4.1, 4.2, and 4.3, we identified the number of conversations as part of the research question. Later in the research process it will be key to operationalize this variable. For example, will the number of conversations be the total number of conversations in the dataset or will it be the average number of conversations per speaker? These are important questions to consider as they will influence variable selection, statistical choices, and ultimately the interpretation of the results."
  },
  {
    "objectID": "framing-research.html#sec-fr-blueprint",
    "href": "framing-research.html#sec-fr-blueprint",
    "title": "4  Framing research",
    "section": "\n4.4 Blueprint",
    "text": "4.4 Blueprint\nEfforts to craft a research question are a very important aspect of developing purposive, inquisitive, and informed research (returning to Cross’s characteristics of research). Moving beyond the research question in the project means developing and laying out the research design in a way such that the research is Methodical and Communicable. In this textbook, the method to achieve these goals is through the development of a research blueprint. The blueprint includes two components: (1) laying out a conceptual plan and (2) deriving the organizational scaffolding that will support the implementation of the research.\nAs Ignatow and Mihalcea (2017) point out:\n\nResearch design is essentially concerned with the basic architecture of research projects, with designing projects as systems that allow theory, data, and research methods to interface in such a way as to maximize a project’s ability to achieve its goals […]. Research design involves a sequence of decisions that have to be taken in a project’s early stages, when one oversight or poor decision can lead to results that are ultimately trivial or untrustworthy. Thus, it is critically important to think carefully and systematically about research design before committing time and resources to acquiring texts or mastering software packages or programming languages for your text mining project.\n\nIn what follows, I will cover the main aspects of developing a research blueprint. I will start with the conceptual plan and then move on to the organizational scaffolding.\n\n4.4.1 Plan\nImportance of establishing a feasible research design from the outset and documenting the key aspects required to conduct the research cannot be understated. On the one hand this process links a conceptual plan to a tangible implementation. In doing so, a researcher is better-positioned to conduct research with a clear view of what will be entailed. On the other hand, a promising research question may present unexpected challenges once a researcher sets about to implement the research. This is not uncommon to encounter issues that require modification or reevaluation of the viability of the project. However, a well-documented research plan will help a researcher to identify and address many of these challenges at the conceptual level before expending effort on the implementation.\nLet’s now consider the main aspects of developing a research plan: identifying data source(s), key variables, and analysis methods. Before we do, however, it is important to reiterate the importance of a research question or hypothesis before moving forward in research planning. The research question or hypothesis is the central component of the research plan. It guides every step which follows from data selection to interpretation of the analysis results. Furthermore, a well-founded research question is based on a solid literature review from which can provide helpful guidance at key choice points in the research process.\n\nFirst, identify a viable data source. Viability includes the accessibility of the data, availability of the data, and the content of the data. If a purported data source is not accessible and/ or is has stringent restrictions on its use, then it is not a viable data source. If a data source is accessible and available, but does not contain the building blocks needed to address the research question, then it is not a viable data source. In the case that research is inferential in nature, the sampling frame of the corpus is of primary importance as the goal is to generalize the findings to a target population. A corpus resource should align, to the extent feasible, with this target population. For predictive and exploratory research, the goal to generalize a claim is not central and for this reason the there is some freedom in terms of how representative a corpus sample is of a target population. Ideally, a researcher will find and be able to model a language population of target interest. Since the goal, however, is not to test a hypothesis, but rather to explore particular or evaluate potential relationships, either in an exploratory or predictive fashion, the research can often continue with the stipulation that the results are interpreted in the light of the characteristics of the available corpus sample.\n\n\nThe second step is to identify the key variables need to conduct the research are and then ensure that this information can be derived from the corpus data. The research question will reference the unit of analysis and the unit of observation, but it is important at this point to then pinpoint what the key variables will be. If the unit of observation is spontaneous conversations. The question as to what aspects of these conversations will be used in the analysis. In the research questions presented in this chapter, we will want to envision what needs to be done to derive a variable which measures the number of questions in each of the conversations. In other research, their may be features that need to be extracted, recoded, and/ or generated to address the research question. Other variables of importance may be non-linguistic in nature. In cases where there the metadata is incomplete for the goals of the research, it is sometimes possible to merge metadata from other sources.\n\n\nThe third step is to identify a method of analysis to interrogate the dataset. The selection of the analysis approach that was part of the research aim (i.e. explore, predict, or infer) and then the research question goes a long way to narrowing the methods that a researcher must consider. But there are a number of factors which will make some methods more appropriate than others.\nExploratory research is the least restricted of the three types of analysis approaches. Although it may be the case that a research will not be able to specify from the outset of a project what the exact analysis methods will be, an attempt to consider what types of analysis methods will be most promising to provide results to address the research question goes a long way to steering a project in the right direction and grounding the research. As with the other analysis approaches, it is important to be aware of what the analysis methods available and what type of information they produce in light of the research question.\nFor predictive-based research, the informational value of the target variable is key to deciding whether the prediction will be a classification task or a regression task. This has downstream effects when it comes time to evaluate and interpret the results. Although the feature engineering process in predictive analyses means that the features do not need to be specified from the outset and can be tweaked and changed as needed during an analysis, it is a good idea to start with a basic sense of what features most likely will be helpful in developing a robust predictive model. Furthermore, while the number and informational values of the features (predictor variables) are not as important to selecting a prediction method (algorithm) as they are in inferential analysis methods, it is important to recognize that particular algorithms have strengths and shortcomings when working large numbers and/ or types of features (Lantz 2013).\nIn inferential research, the number and information values of the variables to be analyzed will be of key importance (Gries 2013). The informational value of the dependent variable will again narrow the search for the appropriate method. The number of predictor variables also plays an important role. For example, a study with a categorical dependent variable with a single categorical predictor variable will lead the researcher to the Chi-squared test. A study with a numeric dependent variable with multiple predictor variables will lead to linear regression. Another aspect of note for inference studies is the consideration of the distribution of numeric variables –a normal distribution will use a parametric test where a non-normal distribution will use a non-parametric test. These details need not be nailed down at this point, but it is helpful to have them on your radar to ensure that when the time comes to analyze the data, the appropriate steps are taken to test for normality and then apply the correct test.\n\nThe last of the main components of the research plan concerns the interpretation and evaluation of the results. This step brings the research plan full circle connecting the research question to the methods employed. It is important to establish from the outset what the criteria will be to evaluate the results. This is in large part a function of the relationship between the research question and the analysis method. For example, in exploratory research, the results will be evaluated qualitatively in terms of the associative patterns that emerge. Predictive and inferential research leans more heavily on quantitative metrics in particular the accuracy of the prediction or the strength of the relationship between the dependent and predictor variable(s), respectively. However, these quantitative metrics require qualitative interpretation to determine whether the results are meaningful in light of the research question.\n\n\nTo summarize these planning steps, I’ve created a checklist in Table 4.5.\n\n\nTable 4.5: Research Plan Checklist\n\n\n\n\n\nSteps\nDescription\n\n\n\nResearch Question or Hypothesis\nFormulate a research question or hypothesis based on a thorough review of existing literature including references. This will guide every subsequent step from data selection to interpretation of results.\n\n\nData Source(s)\nIdentify viable data source(s) and vet the sample data in light of the research question. Consider to what extent the goal is to generalize findings to a target population, and ensure that the corpus aligns as much as feasible with this target.\n\n\nKey Variables\nDetermine the key variables needed for the research, define how they will be operationalized, and ensure they can be derived from the corpus data. Additionally, identify any features that need to be extracted, recoded or generated.\n\n\nAnalysis Method\nChoose an appropriate method of analysis to interrogate the dataset. This choice should be in line with your research aim (e.g., exploratory, predictive, inferential). Be aware of what each method can offer and how it addresses your research question.\n\n\nInterpretation & Evaluation\nEstablish criteria to interpret and evaluate the results. This will be a function of the relationship between the research question and the analysis method.\n\n\n\n\n\nIn addition to addressing the steps outlined in Table 4.5, it is also important to document the strengths and shortcomings of the research plan including the data source(s), the information to be extracted from the data, and the analysis methods. If there are potential shortcomings, which there most often are, sketch out contingency plans to address these shortcomings. This will help buttress your research and ensure that your time and effort is well-spent.\nTogether the information collected from this process will serve to guide the research and provide a solid foundation for the research write-up. Furthermore, you may consider pre-registering your research project to ensure that your plans are well-documented and to provide a timestamp for your research. Pre-registration can also be a helpful way to get feedback on your research plan from colleagues and experts in the field. Popular pre-registration platforms include Open Science Framework and Center for Open Science.\n\n\n\n4.4.2 Scaffold\nThe next step in creating a research blueprint is to consider how to physically implement your project. This includes how to organize files and directories in a fashion that both provides the researcher a logical and predictable structure to work with but also ensures that the research is Communicable. On the one hand, communicable research includes a strong write-up of the research, but, on the other hand, it is also important that the research is reproducible. Reproducibility strategies are a benefit to the researcher (in the moment and in the future) as it leads to better work habits and to better teamwork and it makes changes to the project easier. Reproducibility is also of benefit to the scientific community as shared reproducible research enhances replicability and encourages cumulative knowledge development (Gandrud 2015).\nThere are a set of guiding principles to accomplish these goals (Gentleman and Temple Lang 2007; Marwick, Boettiger, and Mullen 2018), seen in Example 4.4.\n\nExample 4.4 Reproducible Research Principles\n\nAll files should be plain text which means they contain no formatting information other than whitespace.\nThere should be a clear separation between the data, method, and output of research. This should be apparent from the directory structure.\nA separation between original, derived, and analysis data should be made. Original data should be treated as ‘read-only’. Any changes to the original data should be justified, generated by the code, and documented (see point 6).\nEach project file (script) should represent a particular, well-defined step in the research process.\nEach project script should be modular –that is, each file should correspond to a specific goal in the analysis procedure with input and output only corresponding to this step.\nAll project scripts should be tied together by a ‘main’ script that is used to coordinate the execution of all the project steps.\nEverything should be documented. This includes data collection, data preprocessing, analysis steps, script code comments, data description in data dictionaries, information about the computing environment and packages used to conduct the analysis, and detailed instructions on how to reproduce the research. \n\n\n\nThese seven principles can be physically implemented in numerous ways. In recent years, there has been a growing number of efforts to create R packages and templates to quickly generate the scaffolding and tools to facilitate reproducible research. Some notable R packages include workflowr (Blischak, Carbonetto, and Stephens 2021), ProjectTemplate (White 2023), and targets (Landau 2023), but there are many other resources for R included on the CRAN Task View for Reproducible Research. There are many advantages to working with pre-existing frameworks for the savvy R programmer including the ability to quickly generate a project scaffold, to efficiently manage changes to the project, and to buy in to a common framework that is supported by a community of developers.\n\nOn the other hand, these frameworks can be a bit daunting for the novice R programmer. At the most basic level, a project can implement the seven principles outlined above by creating a directory structure and a set of files manually.\n\nExample 4.5 Minimal Project Framework\nproject/\n├── data/\n│   ├── analysis/\n│   ├── derived/\n│   └── original/\n├── output/\n│   ├── figures/\n│   ├── reports/\n│   ├── results/\n│   └── tables/\n├── code/\n│   └── ...\n├── _main.R\n└── README\n\nIn Example 4.5, I provide a minimal framework that aligns with the reproducible research principles. Let me now make the connections between the principles and this project structure.\nThe project/ directory is composed of three main sections: data/, output/, and code/ corresponding to the input, output, and code, respectively.\nThe data/ section is divided into three subsections:\n\n\nanalysis/ for storing data used to perform analysis\n\nderived/ for housing data produced in curation and transformation steps\n\noriginal/ for keeping the original ‘read-only’ data\n\nThe output/ section contains four subsections:\n\n\nfigures/ for visualizations produced as part of the project\n\nreports/ for the resulting reports (e.g. article, presentation, blog post, etc.)\n\nresults/ for statistical results from the analysis\n\ntables/ for summary tables\n\nThe code/ directory houses the code, with the _main.R file at the root of the project orchestrating the execution of all project steps.\nLastly, the README file provides a description of the project and instructions on how to reproduce the research.\nThe project structure in Example 4.5 meets the minimal structural requirements for reproducible research but can be augmented in more sophisticated ways to support more functionality, as we will see in Chapter 12. One enhancement that I highly recommend is the use of literate programming, in the form of Quarto documents, to serve as the main project scripts. This facilitates the combination of executable code and prose documentation for each project step in a single, modular file."
  },
  {
    "objectID": "framing-research.html#summary",
    "href": "framing-research.html#summary",
    "title": "4  Framing research",
    "section": "Summary",
    "text": "Summary\nThe aim of this chapter is to provide the key conceptual and practical points to guide the development of a viable research project. Good research is purposive, inquisitive, informed, methodological, and communicable. It is not, however, always a linear process. Exploring your area(s) of interest and connecting with existing work will help couch and refine your research. But practical considerations, such as the existence of viable data, technical skills, and/ or time constrains, sometimes pose challenges and require a researcher to rethink and/ or redirect the research in sometimes small and other times more significant ways. The process of formulating a research question and developing a viable research plan is key to supporting viable, successful, and insightful research. To ensure that the effort to derive insight from data is of most value to the researcher and the research community, the research should strive to be methodological and communicable adopting best practices for reproducible research.\n\n\n\n\nFigure 4.1: Framing research: visual summary\n\n\n\nThis chapter concludes the Foundations part of this textbook. At this stage our overview of fundamental characteristics of research are in place to move a project towards implementation, as seen in Figure 4.1. From this point forward we will integrate your conceptual knowledge and emerging R programming skills as we cover common scenarios encountered when conducting reproducible research with real-world data.\nThe next part, Preparation, aims to cover R coding strategies to acquire, curate, and transform data in preparation for analysis. These are the first steps in putting a research blueprint into action and by no coincidence the first components in the Data to Insight Hierarchy. Without further ado, let’s get started!"
  },
  {
    "objectID": "framing-research.html#activities",
    "href": "framing-research.html#activities",
    "title": "4  Framing research",
    "section": "Activities",
    "text": "Activities\n\n\n Add description of outcomes …\n\n\n\n\n\n\n\n Recipe\n\n\nWhat: Project managementHow: Read Recipe 4 and participate in the Hypothes.is online social annotation.Why:  To learn how to use … reproducible research projects.\n\n\n\n\n\n\n\n\n\n Lab\n\nWhat: Project managementHow: Clone, fork, and complete the steps in Lab 4.Why:  To … a reproducible research project."
  },
  {
    "objectID": "framing-research.html#questions",
    "href": "framing-research.html#questions",
    "title": "4  Framing research",
    "section": "Questions",
    "text": "Questions\n\n\n\n\n\n\n\nConceptual questions\n\nWhat are the key characteristics of good research as described in this chapter?\nWhat are some strategies researchers can use to identify potential research areas and problems to investigate?\nFor each strategy, describe how it contributes to research that is purposive, inquisitive, and informed.\nWhy is framing a clear, focused research question or hypothesis important? Briefly explain how the research question guides the overall research process.\nWhat is the difference between the unit of analysis and the unit of observation? How do these concepts relate to the research question?\nWhat does it mean to operationalize a variable? Why is this important?\nThe process of developing a research blueprint involves both conceptual planning and practical implementation steps. Explain how going through this process not only aids the individual researcher, but also the research community.\nDescribe the main aspects of developing a research plan.\nExplain why it is important for research to be methodological and reproducible. What are some challenges researchers may face in achieving this?\n\n\n\n\n\n\n\n\n\n\n Technical exercises\n\nMatching research questions with data sources\nMatching research questions with research plans\nPreregistering a research project (?)\nPropose a quantitative research topic (or question if possible). Support your topic with supporting literature. (?)\n…\n\n\n\n\n\n\n\n\n\nBlischak, John, Peter Carbonetto, and Matthew Stephens. 2021. Workflowr: A Framework for Reproducible and Collaborative Data Science. https://github.com/workflowr/workflowr.\n\n\nBrown, Keith. 2005. Encyclopedia of Language and Linguistics. Vol. 1. Elsevier.\n\n\nChan, Sin-wai. 2014. Routledge Encyclopedia of Translation Technology. Routledge.\n\n\nCross, Nigel. 2006. “Design as a Discipline.” Designerly Ways of Knowing, 95–103.\n\n\nDubnjakovic, Ana, and Patrick Tomlin. 2010. A Practical Guide to Electronic Resources in the Humanities. Elsevier.\n\n\nGandrud, Christopher. 2015. Reproducible Research with r and r Studio. Second edition. CRC Press.\n\n\nGentleman, Robert, and Duncan Temple Lang. 2007. “Statistical Analyses and Reproducible Research.” Journal of Computational and Graphical Statistics 16 (1): 1–23.\n\n\nGries, Stefan Th. 2013. Statistics for Linguistics with r. A Practical Introduction. 2nd revise.\n\n\nIgnatow, Gabe, and Rada Mihalcea. 2017. An Introduction to Text Mining: Research Design, Data Collection, and Analysis. Sage Publications.\n\n\nLandau, William Michael. 2023. Targets: Dynamic Function-Oriented Make-Like Declarative Pipelines. https://CRAN.R-project.org/package=targets.\n\n\nLantz, Brett. 2013. Machine Learning with r. Birmingham: Packt Publishing.\n\n\nMarwick, Ben, Carl Boettiger, and Lincoln Mullen. 2018. “Packaging Data Analytical Work Reproducibly Using r (and Friends).” The American Statistician 72 (1): 80–88.\n\n\nWhite, John Myles. 2023. ProjectTemplate: Automates the Creation of New Statistical Analysis Projects. http://projecttemplate.net."
  },
  {
    "objectID": "framing-research.html#footnotes",
    "href": "framing-research.html#footnotes",
    "title": "4  Framing research",
    "section": "",
    "text": "Zotero Guide↩︎\nOr what appears to be most relevant. This may change as you start to take a closer look.↩︎"
  },
  {
    "objectID": "preparation.html",
    "href": "preparation.html",
    "title": "Preparation",
    "section": "",
    "text": "At this point we begin our journey to implement the research blueprint. As such, the content will be more focused on the practical steps to bring a plan to fruition integrating our conceptual understanding of the research process from the previous chapters with our emerging programming skills developed in lessons, recipes, and labs.\nThis part, Preparation, will address data acquistion, curation, and transformation steps. The goal of data preparation is to create a dataset which is ready for analysis. In each of these three upcoming chapters, I will outline some of the main characteristics to consider in each of these research steps and provide authentic examples of working with R to implement these steps. In Chapter 5 this includes downloads, working with APIs, and webscraping. In Chapter 6 we turn to organize data into rectangular, or ‘tidy’, format. Depending on the data or dataset acquired for the research project, the steps necessary to shape our data into a base dataset will vary, as we will see. In Chapter 7 we will work to manipulate curated datasets to create datasets which are aligned with the research aim and research question. This often includes normalizing values, recoding variables, and generating new variables as well as and sourcing and merging information from other datasets with the dataset to be submitted for analysis.\nEach of these chapters will cover the necessary documentation to trace our steps and provide a record of the data preparation process. Documentation serves to inform the analysis and interpretation of the results and also forms the cornerstone of reproducible research."
  },
  {
    "objectID": "acquire-data.html#downloads",
    "href": "acquire-data.html#downloads",
    "title": "5  Acquire data",
    "section": "\n5.1 Downloads",
    "text": "5.1 Downloads\nThe most common and straightforward method for acquiring corpus data is through direct downloads. In a nutshell, this method involves navigating to a website, locating the data, and downloading it to your computing environment. In some cases access to the data requires manual intervention and in others the process can be implemented programmatically. The data may be contained in a single file or multiple files. The files may be compressed or uncompressed. The data may be hierarchically organized or not. Each resource will have its own unique characteristics that will influence the process of acquiring the data. In this section we will work through a few examples to demonstrate the general process of acquiring data through downloads.\n\n5.1.1 Manual\nIn contrast to the other data acquisition methods we will cover in this chapter, manual downloads require human intervention. This means that manual downloads are non-reproducible in a strict sense and require that we keep track of and document our procedure. It is a very common for research projects to acquire data through manual downloads as many data resources require some legwork before they are accessible for downloading. These can be resources that require institutional or private licensing and fees (Language Data Consortium, International Corpus of English, BYU Corpora, etc.), require authorization/ registration (The Language Archive, COW Corpora, etc.), and/ or are only accessible via resource search interfaces (Corpus of Spanish in Southern Arizona, Corpus Escrito del Español como L2 (CEDEL2), etc.).\nLet’s take a look at how to acquire data from a resource that requires manual intervention. The resource we will use is the Corpus Escrito del Español como L2 (CEDEL2) (Lozano 2009), a corpus of Spanish learner writing. It includes L2 writing from students with a variety of L1 backgrounds. For comparative puposes it also includes native writing for Spanish, English, and several other languages.\nThe CEDEL2 corpus is a freely available resource, but to access the data you must first use a search interface to select the relevant characteristics of the data of interest. Following the search/ download link you can find a search interface that allows the user to select the subcorpus and filter the results by a set of attributes, seen in Figure 5.1.\n\n\n\n\nFigure 5.1: Search and download interface for the CEDEL2 Corpus\n\n\n\nFor this example let’s assume that we want to acquire data to use in a study comparing the use of the Spanish preterite and imperfect past tense aspect in written texts by English L1 learners of Spanish to native Spanish speakers. To acquire data for such a project, we will first select the subcorpus “Learners of L2 Spanish”. We will set the results to provide full texts and filter the results to “L1 English - L2 Spanish”. Additionally, we will set the medium to “Written”. This will provide us with a set of texts for the L2 learners that we can use for our study. The search parameters and results are shown in Figure 5.2.\n\n\n\n\nFigure 5.2: Search results for the CEDEL2 Corpus\n\n\n\nThe ‘Download’ link now appears for this search criteria. Following this link will provide the user a form to fill out. This particular resource allows for access to different formats to download (Texts only, Texts with metadata, CSV (Excel), CSV (Others)). I will select the ‘CSV (Others)’ option so that the data is structured for easier processing downstream when we work to curate the data in our next processing step. Then I will choose to save the CSV in the data/original/ directory of my project and create a sub-directory named cedel2/, as seen in Example 5.1.\n\nExample 5.1 Download CEDEL2 L2 Spanish Learners data\ndata/\n├── analysis/\n├── derived/\n└── original/\n    └── cedel2/\n       └── cedel2-l1-english-learners.csv\n\nNote that the file is named cedel2-l1-english-learners.csv to reflect the search criteria used to acquire the data. In combination with other data documentation, this will help us to maintain transparency.\nNow, after downloading the L2 learner and the native speaker data into the appropriate directory, we move on to the next processing step, right? Not so fast! Imagine we are working on a project with a collaborator. How will they know where the data came from? What if we need to come back to this data in the future? How will we know what characteristics we used to filter the data? The directory and filenames may not be enough. To address these questions we need to document the origin of the data, and in the case of data acquired through manual downloads, we need to document the procedures we took to acquire the data to the best of our ability.\nAs discussed in Section 2.3.1, all acquired data should be accompanied by a data origin file. The majority of this information can typically be identified on the resource’s website and/ or the resource’s documentation. In the case of the CEDEL2 corpus, the corpus homepage provides most of the information we need.\nStructurally, data documentation files should be stored close to the data they describe. So for our data origin file this means adding it to the data/original/ directory. Naming the file in a transparent way is also important. I’ve named the file cedel2_do.csv to reflect the name of the corpus, the meaning of the file as data origin with *_do, and the file extension .csv* to reflect the file format. CSV files reflect tabular content. It is not required that data origin files are tabular, but it makes it easier to read and display them in literate programming documents.\n\n\n\n\n\n\n Tip\nThere are many ways to create and edit CSV files. You can use a spreadsheet program like MS Excel or Google Sheets, a text editor like Notepad or TextEdit, or a code editor like RStudio or VS Code. The qtalrkit package provides a convenient function, create_data_origin() to create a CSV file with the data origin boilerplate structure. This CSV file then can be edited to add the relevant information in any of the above mentioned programs.\nUsing a spreadsheet program is the easiest method for editing tabular data. The key is to save the file as a CSV file, and not as an Excel file, to maintain our adherence to the principle of using open formats for reproducible research.\n\n\n\nIn Table 5.1, I’ve created a data origin file for the CEDEL2 corpus.\n\n\n\n\nTable 5.1: Data origin file for the CEDEL2 corpus\n\n\n\n\n\nattribute\ndescription\n\n\n\nResource name\nCEDEL2: Corpus Escrito del Español como L2.\n\n\nData source\nhttp://cedel2.learnercorpora.com/, https://doi.org/10.1177/02676583211050522\n\n\nData sampling frame\nCorpus that contains samples of the language produced from learners of Spanish as a second language. For comparative purposes, it also contains a native control subcorpus of the language produced by native speakers of Spanish from different varieties (peninsular Spanish and all varieties of Latin American Spanish), so it can be used as a native corpus in its own right.\n\n\nData collection date(s)\n2006-2020.\n\n\nData format\nCSV file. Each row corresponds to a writing sample. Each column is an attribute of the writing sample.\n\n\nData schema\nA CSV file for L2 learners and a CSV file for native speakers.\n\n\nLicense\nCC BY-NC-ND 3.0 ES\n\n\nAttribution\nLozano, C. (2022). CEDEL2: Design, compilation and web interface of an online corpus for L2 Spanish acquisition research. Second Language Research, 38(4), 965-983. https://doi.org/10.1177/02676583211050522.\n\n\n\n\n\n\nGiven this is a manual download we also need to document the procedure used to retrieve the data in prose. The script in the code/ directory that is typically used to acquire the data is not used to programmatically retrieve data in this case. However, to keep things predictable we will use this file to document the download procedure. I’ve created a Quarto file named 1_acquire_data.qmd in the code/ directory of my project.\nA glimpse at the directory structure of the project at this point is seen in Example 5.2.\n\nExample 5.2 Project structure for the CEDEL2 corpus data acquisition\nproject/\n├── code/\n│   ├── 1_acquire_data.qmd\n│   └── ...\n├── data/\n│   ├── analysis/\n│   ├── derived/\n│   └── original/\n│       ├── cedel2_do.csv\n│       └── cedel2/\n|           ├── cedel2-l1-english-learners.csv\n|           └── cedel2-native-spanish-speakers.csv\n├── output/\n│   ├── figures/\n│   ├── reports/\n│   ├── results/\n│   └── tables/\n├── README.md\n└── _main.R\n\nIn the 1_acquire_data.qmd file I’ve added example sections to display the data origin CSV file as a table and to document the data download procedures, as seen in File 5.1.\n\nFile 5.1: Acquire data file\n\n1-acquire-data.qmd\n\n---\ntitle: \"Acquire data\"\nformat: html\n---\n\n## Overview\n\nThe goal of this script is to acquire and document data for this project from the CEDEL2 corpus. The acquired data will be stored in the `data/original/cedel2/` directory.\n\n## Data origin\n\nTo document the origin of the data we created a file named `cedel2_do.csv` in the `data/original/` directory. This file contains the following information: \n\n```{r}\n#| label: tbl-cedel2-data-origin\n#| tbl-cap: \"Data origin file for the CEDEL2 corpus\"\n#| echo: false\n\n# Display data origin file\nreadr::read_csv(\"../data/original/cedel2_do.csv\") |&gt; \n  knitr::kable()\n```\n\n## Download procedures\n\nThe process to acquire data from the CEDEL2 corpus involved the following steps:\n\nL2 Spanish Learners:\n\n1. Navigate to the [CEDEL2 Corpus](http://cedel2.learnercorpora.com/search) search interface\n2. Select the subcorpus \"Learners of L2 Spanish\"\n3. Set the results to provide full texts\n4. Filter the results to \"L1 English - L2 Spanish\"\n5. Set the medium to \"Written\"\n6. Download the data in CSV format\n7. Save the CSV file to the `data/original/cedel2/` directory as `cedel2-l1-english-learners.csv`\n\nSpanish natives: \n\nThe output from 1_acquire_data.qmd will contain a table displaying the data origin file and a prose section documenting the data acquisition process. This will provide a transparent record of the data acquisition process for future reference.\nManually downloading other resources will inevitably include unique processes for obtaining the data, but in the end the data should be archived in the research structure in the data/original/ directory and documented in the appropriate places. The acquired data is treated as ‘read-only’, meaning it is not modified in any way. This gives us a transparent starting point for subsequent steps in the data preparation process.\n\n5.1.2 Programmatic\n\nThere are many resources that provide corpus data that is directly accessible for which programmatic downloads can be applied. A programmatic download is a download in which the process can be automated through code. Thus, this is a reproducible process. The data can be acquired by anyone with access to the necessary code.\nIn this case, and subsquent data acquisition procedures in this chapter, we use the 1_acquire_data.qmd Quarto file to its full potential intermingling prose, code, and code comments to execute and document the download procedure. In File 5.2, I’ve added example sections to display example boilerplate structure for a programmatic data acquisition and documentation.\n\n\nFile 5.2: Acquire data file\n\n1-acquire-data.qmd\n\n---\ntitle: \"Acquire data\"\nformat: html\n---\n\n## Overview\n\nThe goal of this script is to ...\n\n## Data origin\n\nTo document the origin of the data we created a file named ...\n\n## Download procedures\n\n```{r}\n#| label: setup\n\n# Load libraries\nlibrary(tidyverse)\n```\n\n```{r}\n# .. additional code here to acquire data ...\n```\n\n... and so on\n\nTo illustrate how this works to conduct a programmatic download, we will work with the Switchboard Dialog Act Corpus (SWDA) (University of Colorado Boulder 2008). The version that we will use is found on the Linguistic Data Consortium under the Switchboard-1 Release 2 Corpus. The corpus and related documentation are linked on the catalog page https://catalog.ldc.upenn.edu/docs/LDC97S62/.\nFrom the documentation we learn that the corpus contains transcripts for 1155 5-minute two-way telephone conversations among English speakers for all areas of the United States. The speakers were given a topic to discuss and the conversations were recorded. The corpus metadata and annotations for sociolinguistic and discourse features.\nThe SWDA was referred to in Section 3.2.3 to support our toy hypothesis that men and women differ in the frequency of the use of questions in spontaneous conversations. This corpus, as you can image, could support a wide range of interesting reseach questions. Let’s assume we are following research conducted by Tottie (2011) to explore the use of filled pauses such as “um” and “uh” and traditional sociolinguistic variables such as sex, age, and education in spontaneous speech by American English speakers.\nWith this goal in mind, let’s get started writing the code to download and organize the data in our project directory. First we need to identify the URL (Uniform Resource Locator) for the data that we want to download. More often than not this file will be some type of compressed archive file with an extension such as .zip (Zipped file), .tar (Tarball file), or tar.gz (Gzipped tarball file), which is the case for the SWDA corpus. Compressed files make downloading multiple files easy by grouping files and directories into one file.\n\n\n\n\n\n\n Consider this\nYou may be wondering what the difference betwen .zip, .tar, and .tar.gz files are. The .zip file format is the most common. It groups file and directories into one file (archives) and compresses them to reduce the size of the file in one step when the file is created.\nThe .tar file format is used archive files and folders, it does not perform compression. Gzipping peforms the compression to the .tar file resulting in a file with the .tar.gz extension. Notably the .gz compression is highly efficient for large files. Take the swda.tar.gz file for example. It has a compressed file size of 4.6 MB, but when uncompressed it is 16.9 MB. This is a 73% reduction in file size.\n\n\n\nIn R we can use the download.file() function from base R. The download.file() function minimally requires two arguments: url and destfile. These correspond to the file to download and the location where it is to be saved to disk. To break out the process a bit, I will assign the URL and destination file path to variables and then use the download.file() function to download the file.\n\nExample 5.3  \n\n# URL to SWDA corpus compressed file\nfile_url &lt;- \n  \"https://catalog.ldc.upenn.edu/docs/LDC97S62/swb1_dialogact_annot.tar.gz\"\n\n# Relative path to project/data/original directory\nfile_path &lt;- \"../data/original/swda.tar.gz\"\n\n# Download SWDA corpus compressed file\ndownload.file(url = file_url, destfile = file_path)\n\n\n\n\n\n\n\n\n Warning\nNote that the file_path variable in Example 5.3 is a relative path to the data/original/ directory. This is because the 1_acquire_data.qmd file that we are using for this code is located in the code/ directory and the data/ directory is a sibling directory to the code/ directory.\nIt is also possible to use an absolute path to the data/original/ directory. I will have more to say about the advantages and disadvantages of relative and absolute paths in reproducible research in Chapter 12.\n\n\n\nAs we can see looking at the directory structure, in Example 5.4, the swda.tar.zip file has been added to the data/original/ directory.\n\nExample 5.4 Downloaded SWDA corpus compressed file\ndata/\n├── analysis/\n├── derived/\n└── original/\n    └── swda.tar.zip\n\nOnce an compressed file is downloaded, however, the file needs to be ‘decompressed’ to reveal the directory structure and files. To decompress this .tar.gz file we use the untar() function with the arguments tarfile pointing to the .tar.gz file and exdir specifying the directory where we want the files to be extracted to. Again, I will assign the arguments to variables. Then we can decompress the file using the untar() function.\n\nExample 5.5  \n\n# Relative path to the compressed file\ntar_file &lt;- \"../data/original/swda.tar.gz\"\n\n# Relative path to the directory to extract to\nextract_to_dir &lt;- \"../data/original/swda/\"\n\n# Decompress .zip file and extract to our target directory\nuntar(tar_file, extract_to_dir)\n\n\nThe directory structure of data/ in Example 5.6 now shows the swda.tar.gz file and the swda directory that contains the decompressed directories and files.\n\nExample 5.6  \ndata/\n├── analysis/\n├── derived/\n└── original/\n    ├── swda/\n    │   ├── README\n    │   ├── doc/\n    │   ├── sw00utt/\n    │   ├── sw01utt/\n    │   ├── sw02utt/\n    │   ├── sw03utt/\n    │   ├── sw04utt/\n    │   ├── sw05utt/\n    │   ├── sw06utt/\n    │   ├── sw07utt/\n    │   ├── sw08utt/\n    │   ├── sw09utt/\n    │   ├── sw10utt/\n    │   ├── sw11utt/\n    │   ├── sw12utt/\n    │   └── sw13utt/\n    └── swda.tar.gz\n\nAt this point we have acquired the data programmatically and with this code as part of our workflow anyone could run this code and reproduce the same results. The code as it is, however, is not ideally efficient. Firstly the swda.tar.gz file is not strictly needed after we decompress it and it occupies disk space if we keep it. And second, each time we run this code the file will be downloaded from the remote server. This leads to unnecessary data transfer and server traffic and will overwrite the data if it already exists in our project directory which could be problematic if the data changes on the remote server. Let’s tackle each of these issues in turn.\nTo avoid writing the swda.tar.gz file to disk (long-term) we can use the tempfile() function to open a temporary holding space for the file in the computing environment. This space can then be used to store the file, decompress it, and then the temporary file will automatically be deleted. We assign the temporary space to an R object we will name temp_file with the tempfile() function. This object can now be used as the value of the argument destfile in the download.file() function.\n\nExample 5.7  \n\n# URL to SWDA corpus compressed file\nfile_url &lt;- \n  \"https://catalog.ldc.upenn.edu/docs/LDC97S62/swb1_dialogact_annot.tar.gz\"\n\n# Create a temporary file space for our .tar.gz file\ntemp_file &lt;- tempfile()\n\n# Download SWDA corpus compressed file\ndownload.file(file_url, temp_file)\n\n\n\n\n\n\n\n\n Tip\nIn Example 5.7, I’ve used the values stored in the objects file_url and temp_file in the download.file() function without specifying the argument names –only providing the names of the objects. R will assume that values of a function map to the ordering of the arguments. If your values do not map to ordering of the arguments you are required to specify the argument name and the value. To view the ordering of objects hit tab after entering the function name or consult the function documentation by prefixing the function name with ? and hitting enter.\n\n\n\nAt this point our downloaded file is stored temporarily on disk and can be accessed and decompressed to our target directory using temp_file as the value for the argument tarfile from the untar() function. I’ve assigned our target directory path to extract_to_dir and used it as the value for the argument exdir.\n\n\nExample 5.8  \n\n# Assign our target directory to `extract_to_dir`\nextract_to_dir &lt;- \"../data/original/swda/\"\n\n# Decompress .tar.gz file and extract to our target directory\nuntar(tarfile = temp_file, exdir = target_dir)\n\n\nOur directory structure in Example 5.8 is the same as in Example 5.6, minus the swda.tar.gz file.\nThe second issue I raised concerns the fact that running this code as part of our project will repeat the download each time. Since we would like to be good citizens and avoid unnecessary traffic on the web and avoid potential issues in overwriting data, it would be nice if our code checked to see if we already have the data on disk and if it exists, then skip the download, if not then download it.\nThe desired functionality we’ve described can be implemented using the if() function. The if() function is one of a class of functions known as control statements. Control statments allow us to control the flow of our code by evaluating logical statements and processing subsequent code based on the logical value it is passed as an argument.\nSo in this case we want to evaluate whether the data directory exists on disk. If it does then skip the download, if not, proceed with the download. In combination with else which provides the ‘if not’ part of the statement, we have the following logical flow in Example 5.9.\n\nExample 5.9  \nif (DIRECTORY_EXISTS) {\n  # Do nothing\n} else {\n  # Download data\n}\n\nWe can simplify this statement by using the ! operator which negates the logical value of the statement it precedes. So if the directory exists, !DIRECTORY_EXISTS will return FALSE and if the directory does not exist, !DIRECTORY_EXISTS will return TRUE. In other words, if the directory does not exist, download the data. This is shown in Example 5.10.\n\nExample 5.10  \nif (!DIRECTORY_EXISTS) {\n  # Download data\n}\n\nNow, to determine if a directory exists in our project directory we will turn to the fs package (Hester, Wickham, and Csárdi 2023). The fs package provides a set of functions for interacting with the file system, including dir_exists(). dir_exists() takes a path to a directory as an argument and returns the logical value, TRUE, if that directory exists, and FALSE if it does not.\nWe can use this function to evaluate whether the directory exists and then use the if() function to process the subsequent code based on the logical flow we set out in Example 5.10. Applied to our project, the code will look like Example 5.11.\n\nExample 5.11  \n\n# Load the `fs` package\nlibrary(fs)\n\n# URL to SWDA corpus compressed file\nfile_url &lt;- \n  \"https://catalog.ldc.upenn.edu/docs/LDC97S62/swb1_dialogact_annot.tar.gz\"\n\n# Create a temporary file space for our .tar.gz file\ntemp_file &lt;- tempfile()\n\n# Assign our target directory to `extract_to_dir`\nextract_to_dir &lt;- \"../data/original/swda/\"\n\n# Check if our target directory exists\n# If it does not exist, download the file and extract it\nif (!dir_exists(extract_to_dir)) {\n  # Download SWDA corpus compressed file\n  download.file(file_url, temp_file)\n  \n  # Decompress .tar.gz file and extract to our target directory\n  untar(tarfile = temp_file, exdir = extract_to_dir)\n}\n\n\nThe code in Example 5.11 is added to the 1_acquire_data.qmd file we introduced in File 5.2. When this file is run, the SWDA corpus data will be downloaded and extracted to our project directory. If the data already exists, the download will be skipped, just as we wanted.\nBefore we move on, we need to make sure to create and add the appropriate information to the data origin file. To make this easier, the qtalrkit package includes a function, create_data_origin(), to create a data origin file template in CSV format. This function takes the path for the desired file. In the SWDA Corpus case, this might be something like: ../data/original/swda_do.csv. The function only needs to be run once and does not need to be part of the reproducible workflow.\nRunning the code in Example 5.12 at the console will create the file. Open it in your preferred text or spreadsheet editor to add the appropriate information.\n\nExample 5.12  \n\n# Load the `qtalrkit` package\nlibrary(qtalrkit)\n\n# Create a data origin file template\ncreate_data_origin(\"../data/original/swda_do.csv\")\n\n\nOur complete project structure for the SWDA corpus data acquisition is shown in Example 5.13.\n\nExample 5.13 Project structure for the SWDA corpus data acquisition\nproject/\n├── code/\n│   ├── 1_acquire_data.qmd\n│   └── ...\n├── data/\n│   ├── analysis/\n│   ├── derived/\n│   └── original/\n│       ├── swda_do.csv\n│       └── swda/\n│          ├── README\n│          ├── doc/\n│          ├── sw00utt/\n│          ├── sw01utt/\n│          ├── sw02utt/\n│          ├── sw03utt/\n│          ├── sw04utt/\n│          ├── sw05utt/\n│          ├── sw06utt/\n│          ├── sw07utt/\n│          ├── sw08utt/\n│          ├── sw09utt/\n│          ├── sw10utt/\n│          ├── sw11utt/\n│          ├── sw12utt/\n│          └── sw13utt/\n├── output/\n│   ├── figures/\n│   ├── reports/\n│   ├── results/\n│   └── tables/\n├── README.md\n└── _main.R\n\nGreat, we’ve successfully acquired and documented the SWDA Corpus data. We’ve leveraged R to automate the download and extraction of the data, depending on the existence of the data in our project directory. But you may be asking yourself, “Can’t I just navigate to the corpus page and download the data manually myself?” The simple answer is, “Yes, you can.” The more nuanced answer is, “Yes, but consider the trade-offs.”\nThe following scenarios highlight the some advantages to automating the process. If you are acquiring data from multiple files, it can become tedious to document the manual process for each file such that it is reproducible. It’s possible, but it’s error prone. Now, if you are collaborating with others, you will want to share this data with them. It is very common to find data that has limited restrictions for use in academic projects, but the most common limitation is redistribution. This means that you can use the data for your own research, but you cannot share it with others. If you plan on publishing your project to a repository, like GitHub, to share the data as part of your reproducible project, you would be violating the terms of use for the data. By including the programmatic download in your project, you can ensure that your collaborators can easily and effectively acquire the data themselves and that you are not violating the terms of use."
  },
  {
    "objectID": "acquire-data.html#sec-apis",
    "href": "acquire-data.html#sec-apis",
    "title": "5  Acquire data",
    "section": "\n5.2 APIs",
    "text": "5.2 APIs\nA convenient alternative method for acquiring data in R is through package interfaces to web services. These interfaces are built using R code to make connections with resources on the web through Application Programming Interfaces (APIs). Websites such as Project Gutenberg, Twitter, Facebook, and many others provide APIs to allow access to their data under certain conditions, some more limiting for data collection than others. Programmers (like you!) in the R community take up the task of wrapping calls to an API with R code to make accessing that data from R convenient, and of course reproducible.\n\n\n\n\n\n\n Dive deeper\nMany, many web services provide API access. These APIs span all kinds of data, from text to images to video to audio. Visit the Public APIs website to explore the diversity of APIs available. ROpenSci maintains a curated list of R packages that provide access to data from web services. Visit the ROpenSci website to explore the packages available.\n\n\n\n\nExamples of APIs that provide access to text data include the Project Gutenberg API, the Twitter API, and the Facebook API. In this section, we will explore the TalkBank API, which provides access to a large collection of spoken language corpora. We will use the [TBDBr](\n\n\nPick up here\n\nIntroduce CABANK and TalkBank\n\nUseful for a study aiming to research spoken British English, either in isoloation or in comparison to American English (SWDA).\n\n\nIntroduce TBDBr package.\n\nShow available functions in the package. ls(getNamespace(\"TBDBr\"))\n\nBasic arguments for get*() functions: corpusName and corpora\n\nSame for these function, demonstrate. So, ideally we could use one function to get all the data we need.\n\nWrite custom function to download all resources for a TalkBank API resource.\n\n\n\n\n\n\n\nWhere to add the function.\n\n\nIn the relevant script, 1_acquire_data.qmd in this case.\n\nIn a separate file, functions.R in this case.\n\n\nIf you have multiple functions, it is good practice to put them in a separate file. Cleans up the main script and makes it easier to find the functions you need and reuse them in other scripts, if needed.\n\n\n\n\n\n\nExample 5.14  \nproject/\n├── code/\n│   ├── 1_acquire_data.qmd\n│   ├── ...\n│   └── functions.R\n├── data/\n│   ├── analysis/\n│   ├── derived/\n│   └── original/\n├── output/\n│   ├── figures/\n│   ├── reports/\n│   ├── results/\n│   └── tables/\n├── README.md\n└── _main.R\n\n\n\n\n\n\n\n Tip\nNote that that the functions.R file is an R script, not a Quarto document. Therefore code blocks that are used in .qmd files are not used, only the R code and code comments.\n\n\n\nWe then use the source() function to read that function into our current script to make it available to use as needed. It is good practice to source your functions early on a script so that it is available for use throughout the script.\n(note relative path to functions.R)\n\nExample 5.15  \n\n# Load custom functions for this project\nsource(file = \"functions.R\")\n\n\n…\n\n\n\n\n\n\n Dive deeper\nWriting functions is a great way to make your code more reproducible. If you find yourself repeating the same code over and over again, it is a good candidate for a function. Functions can be used to automate repetitive tasks, but they can also be used to make your code more readable. If you find yourself writing code that is difficult to understand, it is a good candidate for a function. Functions can be used to make your code more readable by abstracting away the details of the code and providing a name that describes what the code does. This is especially useful when you are writing code that will be used by others. If you are interested in learning more about writing functions, check out the Writing Functions chapter in the R for Data Science book.\nIf you find yourself writing functions that are useful for multiple projects, you may want to consider creating an R package. R packages are a great way to share your code with others. If you are interested in learning more about creating R packages, check out the R Packages book by Hadley Wickham and Jenny Bryan."
  },
  {
    "objectID": "acquire-data.html#sec-web-scraping",
    "href": "acquire-data.html#sec-web-scraping",
    "title": "5  Acquire data",
    "section": "\n5.3 Web scraping",
    "text": "5.3 Web scraping\n\n\nAdd example of rvest::read_html()\n\n\n? Add example of httr::GET() with httr::content().\n\nxml2::write_html()\n\n\nFederalist papers\n\nExample of scraping a single page\nExample of scraping multiple pages\n\nPulling out links from single page and then scraping those pages\n\n\n\n\nPrevious material:\n\n5.3.1 APIs\nA convenient alternative method for acquiring data in R is through package interfaces to web services. These interfaces are built using R code to make connections with resources on the web through Application Programming Interfaces (APIs). Websites such as Project Gutenberg, Twitter, Facebook, and many others provide APIs to allow access to their data under certain conditions, some more limiting for data collection than others. Programmers (like you!) in the R community take up the task of wrapping calls to an API with R code to make accessing that data from R possible. For example, gutenbergr provides access to Project Gutenberg, rtweet to Twitter, and Rfacebook to Facebook.1\n\n\n\nAdd discussion about APIs.\n\n\nOpen access and authentication-based\n\nAPI documentation\n\nR interface packages\n\n\nExamples: gutenbergr, rtweet, rtoot, rwhatsapp, etc.\n\n\n\n\n\nIntroduce TalkBank repository, API, and TBDBr package.\n\n\nFunctions\n\n\n\nUsing R package interfaces, however, often requires some more knowledge about R objects and functions. Let’s take a look at how to access data from Project Gutenberg through the gutenbergr package. Along the way we will touch upon various functions and concepts that are key to working with the R data types vectors and data frames including filtering and writing tabular data to disk in plain-text format.\nTo get started let’s install and/ or load the gutenbergr package. If a package is not part of the R base library, we cannot assume that the user will have the package in their library. The standard approach for installing and then loading a package is by using the install.packages() function and then calling library().\n\ninstall.packages(\"gutenbergr\") # install `gutenbergr` package\nlibrary(gutenbergr) # load the `gutenbergr` package\n\nThis approach works just fine, but luck has it that there is an R package for installing and loading packages! The pacman package includes a set of functions for managing packages. A very useful one is p_load() which will look for a package on a system, load it if it is found, and install and then load it if it is not found. This helps potentially avoid using unnecessary bandwidth to install packages that may already exist on a user’s system. But, to use pacman we need to include the code to install and load it with the functions install.packages() and library(). I’ve included some code that will mimic the behavior of p_load() for installing pacman itself, but as you can see it is not elegant, luckily it’s only used once as we add it to the SETUP section of our master file, _pipeline.R.\n\n# Load `pacman`. If not installed, install then load.\nif (!require(\"pacman\", character.only = TRUE)) {\n  install.packages(\"pacman\")\n  library(\"pacman\", character.only = TRUE)\n}\n\nAt this point we have data and could move on to processing this dataset in preparation for analysis. However, we are aiming for a reproducible workflow and this code does not conform to our principle of modularity: each subsequent step in our analysis will depend on running this code first. Furthermore, running this code as it is creates issues with bandwidth, as in our previous examples from direct downloads. To address modularity we will write the dataset to disk in plain-text format. In this way each subsequent step in our analysis can access the dataset locally. To address bandwidth concerns, we will devise a method for checking to see if the dataset is already downloaded and skip the download, if possible, to avoid accessing the Project Gutenberg server unnecessarily.\nTo write our data frame to disk we will export it into a standard plain-text format for two-dimensional datasets: a CSV file (comma-separated value). The CSV structure for this dataset will look like this:\n\nworks_pr |&gt;\n  head() |&gt;\n  format_csv() |&gt;\n  cat()\n\nThe first line contains the names of the columns and subsequent lines the observations. Data points that contain commas themselves (e.g. “Shaw, Bernard”) are quoted to avoid misinterpreting these commas a deliminators in our data. To write this dataset to disk we will use the reader::write_csv() function.\n\nwrite_csv(works_pr, file = \"../data/original/gutenberg_works_pr.csv\")\n\n\n5.3.2 Web scraping\nThere are many resources available through manual and direct downloads from repositories and individual sites and R package interfaces to web resources with APIs, but these resources are relatively limited to the amount of public-facing textual data recorded on the web. In the case that you want to acquire data from webpages, R can be used to access the web programmatically through a process known as web scraping. The complexity of web scrapes can vary but in general it requires more advanced knowledge of R as well as the structure of the language of the web: HTML (Hypertext Markup Language).\nA toy example\nHTML is a cousin of XML (eXtensible Markup Language) and as such organizes web documents in a hierarchical format that is read by your browser as you navigate the web. Take for example the toy webpage I created as a demonstration in Figure 5.3.\n\n\n\n\nFigure 5.3: Example web page.\n\n\n\nThe file accessed by my browser to render this webpage is test.html and in plain-text format looks like this:\n\n\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My website&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"intro\"&gt;\n      &lt;p&gt;Welcome!&lt;/p&gt;\n      &lt;p&gt;This is my first website. &lt;/p&gt;\n    &lt;/div&gt;\n    &lt;table&gt;\n      &lt;tr&gt;\n        &lt;td&gt;Contact me:&lt;/td&gt;\n        &lt;td&gt;\n          &lt;a href=\"mailto:francojc@wfu.edu\"&gt;francojc@wfu.edu&lt;/a&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;div class=\"conc\"&gt;\n      &lt;p&gt;Good-bye!&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\nEach element in this file is delineated by an opening and closing tag, &lt;head&gt;&lt;/head&gt;. Tags are nested within other tags to create the structural hierarchy. Tags can take class and id labels to distinguish them from other tags and often contain other attributes that dictate how the tag is to behave when rendered visually by a browser. For example, there are two &lt;div&gt; tags in our toy example: one has the label class = \"intro\" and the other class = \"conc\". &lt;div&gt; tags are often used to separate sections of a webpage that may require special visual formatting. The &lt;a&gt; tag, on the other hand, creates a web link. As part of this tag’s function, it requires the attribute href= and a web protocol –in this case it is a link to an email address mailto:francojc@wfu.edu. More often than not, however, the href= contains a URL (Uniform Resource Locator). A working example might look like this: &lt;a href=\"https://francojc.github.io/\"&gt;My homepage&lt;/a&gt;.\nThe aim of a web scrape is to download the HTML file, parse the document structure, and extract the elements containing the relevant information we wish to capture. Let’s attempt to extract some information from our toy example. To do this we will need the rvest(Wickham 2022) package. First, install/load the package, then, read and parse the HTML from the character vector named web_file assigning the result to html.\n\npacman::p_load(rvest) # install/ load `rvest`\n\nhtml &lt;- read_html(web_file) # read raw html and parse to xml\nhtml\n\n&gt; {html_document}\n&gt; &lt;html&gt;\n&gt; [1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n&gt; [2] &lt;body&gt;\\n    &lt;div class=\"intro\"&gt;\\n      &lt;p&gt;Welcome!&lt;/p&gt;\\n      &lt;p&gt;This is  ...\n\n\nread_html() parses the raw HTML into an object of class xml_document. The summary output above shows that tags the HTML structure have been parsed into ‘elements’. The tag elements can be accessed by using the html_elements() function by specifying the tag to isolate.\n\nhtml |&gt;\n  html_elements(\"div\")\n\n&gt; {xml_nodeset (2)}\n&gt; [1] &lt;div class=\"intro\"&gt;\\n      &lt;p&gt;Welcome!&lt;/p&gt;\\n      &lt;p&gt;This is my first web ...\n&gt; [2] &lt;div class=\"conc\"&gt;\\n      &lt;p&gt;Good-bye!&lt;/p&gt;\\n    &lt;/div&gt;\n\n\nNotice that html_elements(\"div\") has returned both div tags. To isolate one of tags by its class, we add the class name to the tag separating it with a ..\n\nhtml |&gt;\n  html_elements(\"div.intro\")\n\n&gt; {xml_nodeset (1)}\n&gt; [1] &lt;div class=\"intro\"&gt;\\n      &lt;p&gt;Welcome!&lt;/p&gt;\\n      &lt;p&gt;This is my first web ...\n\n\nGreat. Now say we want to drill down and isolate the subordinate &lt;p&gt; nodes. We can add p to our node filter.\n\nhtml |&gt;\n  html_elements(\"div.intro p\")\n\n&gt; {xml_nodeset (2)}\n&gt; [1] &lt;p&gt;Welcome!&lt;/p&gt;\n&gt; [2] &lt;p&gt;This is my first website. &lt;/p&gt;\n\n\nTo extract the text contained within a node we use the html_text() function.\n\nhtml |&gt;\n  html_elements(\"div.intro p\") |&gt;\n  html_text()\n\n&gt; [1] \"Welcome!\"                   \"This is my first website. \"\n\n\nThe result is a character vector with two elements corresponding to the text contained in each &lt;p&gt; tag. If you were paying close attention you might have noticed that the second element in our vector includes extra whitespace after the period. To trim leading and trailing whitespace from text we can add the trim = TRUE argument to html_text().\n\nhtml |&gt;\n  html_elements(\"div.intro p\") |&gt;\n  html_text(trim = TRUE)\n\n&gt; [1] \"Welcome!\"                  \"This is my first website.\"\n\n\nFrom here we would then work to organize the text into a format we want to store it in and write the results to disk. Let’s leave writing data to disk for later in the chapter. For now keep our focus on working with rvest to acquire data from html documents working with a more practical example.\nA practical example\n\n\nWith some basic understanding of HTML and how to use the rvest package, let’s turn to a realistic example.\nSay we want to acquire … . The first step in any web scrape is to investigate the site and page(s) we want to scrape to ascertain if there any licensing restrictions. Many, but not all websites, will include a plain text file robots.txt at the root of the main URL. This file is declares which webpages a ‘robot’ (including web scraping scripts) can and cannot access. We can use the robotstxt package to find out which URLs are accessible 2.\n\n\npacman::p_load(robotstxt) # load/ install `robotstxt`\n\n# paths_allowed(paths = \"https://www.last.fm/\") # check permissions\n\n\nThe next step includes identifying the URL we want to target and exploring the structure of the HTML document. Take the following webpage I have identified, seen in ?fig-ad-example-lyrics-page-lastfm.\nAs in our toy example, first we want to feed the HTML web address to the read_html() function to parse the tags into elements. We will then assign the result to html.\n\n\n\n# read and parse html as an xml object\nlyrics_url &lt;- \"https://www.last.fm/music/Radiohead/_/Karma+Police/+lyrics\"\nhtml &lt;- read_html(lyrics_url) # read raw html and parse to xml\nhtml\n\n\n\n\n&gt; {html_document}\n&gt; &lt;html lang=\"en\" class=\"\n&gt;         no-js\n&gt;         playbar-masthead-release-shim\n&gt;         youtube-provider-not-ready\n&gt;     \"&gt;\n&gt; [1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n&gt; [2] &lt;body&gt;\\n&lt;div id=\"initial-tealium-data\" data-require=\"tracking/tealium-uta ...\n\n\nAt this point we have captured and parsed the raw HTML assigning it to the object named html. The next step is to identify the html elements that contain the information we want to extract from the page. To do this it is helpful to use a browser to inspect specific elements of the webpage. Your browser will be equipped with a command that you can enable by hovering your mouse over the element of the page you want to target and using a right click to select “Inspect” (Chrome) or “Inspect Element” (Safari, Brave). This will split your browser window vertical or horizontally showing you the raw HTML underlying the webpage.\n\nFrom ?fig-ad-inspect-element-artist-lastfm we see that the element we want to target is contained within an &lt;a&gt;&lt;/a&gt; tag. Now this tag is common and we don’t want to extract every a so we use the class header-new-crumb to specify we only want the artist name. Using the convention described in our toy example, we can isolate the artist of the lyrics page.\n\n\nhtml |&gt;\n  html_element(\"a.header-new-crumb\")\n\nWe can then extract the text with html_text().\n\nartist &lt;-\n  html |&gt;\n  html_element(\"a.header-new-crumb\") |&gt;\n  html_text()\nartist\n\nLet’s extract the song title in the same way.\n\n\nsong &lt;-\n  html |&gt;\n  html_element(\"h1.header-new-title\") |&gt;\n  html_text()\nsong\n\nNow if we inspect the HTML of the lyrics page, we will notice that the lyrics are contained in &lt;p&gt;&lt;/p&gt; tags with the class lyrics-paragraph.\nSince there are multiple elements that we want to extract, we will need to use the html_elements() function instead of the html_element() which only targets one element.\n\nlyrics &lt;-\n  html |&gt;\n  html_elements(\"p.lyrics-paragraph\") |&gt;\n  html_text()\nlyrics\n\nAt this point, we have isolated and extracted the artist, song, and lyrics from the webpage. Each of these elements are stored in character vectors in our R session. To complete our task we need to write this data to disk as plain text. With an eye towards a tidy dataset, an ideal format to store the data is in a CSV file where each column corresponds to one of the elements from our scrape and each row an observation. A CSV file is a tabular format and so before we can write the data to disk let’s coerce the data that we have into tabular format. We will use the tibble() function here to streamline our data frame creation. 3 Feeding each of the vectors artist, song, and lyrics as arguments to tibble() creates the tabular format we are looking for.\n\ntibble(artist, song, lyrics) |&gt;\n  glimpse()\n\nNotice that there are seven rows in this data frame, one corresponding to each paragraph in lyrics. R has a bias towards working with vectors of the same length. As such each of the other vectors (artist, and song) are replicated, or recycled, until they are the same length as the longest vector lyrics, which a length of seven.\nFor good documentation let’s add our object lyrics_url to the data frame, which contains the actual web link to this page, and assign the result to song_lyrics.\n\nsong_lyrics &lt;- tibble(artist, song, lyrics, lyrics_url)\n\nThe final step is to write this data to disk. To do this we will use the write_csv() function.\n\n\nwrite_csv(x = song_lyrics, path = \"../data/original/lyrics.csv\")\n\nScaling up\nAt this point you may be think, ‘Great, I can download data from a single page, but what about downloading multiple pages?’ Good question. That’s really where the strength of a programming approach takes hold. Extracting information from multiple pages is not fundamentally different than working with a single page. However, it does require more sophisticated understanding of the web and R coding strategies, in particular iteration.\nBefore we get to iteration, let’s first create a couple functions to make it possible to efficiently reuse the code we have developed so far:\n\nthe get_lyrics function wraps the code for scraping a single lyrics webpage from last.fm.\n\n\nget_lyrics &lt;- function(lyrics_url) {\n  # Function: Scrape last.fm lyrics page for: artist, song, \n  # and lyrics from a provided content link. \n  # Return as a tibble/data.frame\n  \n  cat(\"Scraping song lyrics from:\", lyrics_url, \"\\n\")\n  \n  pacman::p_load(tidyverse, rvest) # install/ load package(s)\n  \n  url &lt;- url(lyrics_url, \"rb\") # open url connection \n  html &lt;- read_html(url) # read and parse html as an xml object\n  close(url) # close url connection\n  \n  artist &lt;- \n    html |&gt; \n    html_element(\"a.header-new-crumb\") |&gt; \n    html_text()\n  \n  song &lt;- \n    html |&gt; \n    html_element(\"h1.header-new-title\") |&gt; \n    html_text()\n  \n  lyrics &lt;- \n    html |&gt; \n    html_elements(\"p.lyrics-paragraph\") |&gt; \n    html_text()\n  \n  cat(\"...one moment \")\n  \n  Sys.sleep(1) # sleep for 1 second to reduce server load\n  \n  song_lyrics &lt;- tibble(artist, song, lyrics, lyrics_url)\n  \n  cat(\"... done! \\n\")\n  \n  return(song_lyrics)\n}\n\n\n\n\n\n\n\nWarning\n\n\n\nTip\nThe get_lyrics function includes all of the code developed previously, but also includes: (1) output messages (cat()), (2) a processing pause (Sys.sleep()), and (3) code to manage opening and closing web connections (url() and close()).\nPoints (1) and (2) will be useful when we iterate over this function to provide status messages and to reduce server load when processing multiple webpages from a web domain. (3) will be necessary to manage webpages that are non-existent. As we will see, we will generate url link to multiple song lyrics some of which will not be valid. To avoid errors that will stop the processing these steps have been incorporated here.\n\n\n\nthe write_content writes the webscraped data to our local machine, including functionality to create the necessary directory structure of the target file path we choose.\n\n\nwrite_content &lt;- function(content, target_file) {\n  # Function: Write the tibble content to disk. Create the directory if\n  # it does not already exist.\n  \n  pacman::p_load(tidyverse) # install/ load packages\n  \n  target_dir &lt;- dirname(target_file) # identify target file directory structure\n  dir.create(path = target_dir, recursive = TRUE, showWarnings = FALSE) # create directory\n  write_csv(content, target_file) # write csv file to target location\n  \n  cat(\"Content written to disk!\\n\")\n}\n\nWith just these two functions, we can take a lyrics URL from last.fm and scrape and write the data to disk like this.\n\nlyrics_url &lt;- \"https://www.last.fm/music/Pixies/_/Where+Is+My+Mind%3F/+lyrics\"\n\nlyrics_url |&gt;\n  get_lyrics() |&gt;\n  write_content(target_file = \"../data/original/lastfm/lyrics.csv\")\n\ndata/original/lastfm/\n└── lyrics.csv\nNow we could manually search and copy URLs and run this function pipeline. This would be fine if we had just a few particular URLs that we wanted to scrape. But if we want to, say, scrape a set of lyrics grouped by genre. We would probably want a more programmatic approach. The good news is we can leverage our understanding of webscraping to scrape last.fm to harvest the information needed to create and store links to songs by genre. We can then pass these links to a pipeline, similar to the previous one, to scrape lyrics for many songs and store the results in files grouped by genre.\nLast.fm provides a genres page where some of the top genres are listed and can be further explored.\nDiving into a a particular genre, ‘rock’ for example, you will get a listing of the top tracks in that genre.\nIf we inspect the HTML elements for the track names in ?fig-ad-genre-tracks-list-lastfm, we can see that a relative URL is found for the track. In this case, I have ‘Smells Like Teen Spirit’ by Nirvana highlighted in the inspector. If we follow this link to the track page and then to the lyrics for the track, you will notice that the relative URL on the track listings page has all the unique information. Only the web domain https://www.last.fm and the post-pended /+lyrics is missing.\nSo with this we can put together a function which gets the track listing for a last.fm genre, scrapes the relative URLs for each of the tracks, and creates a full absolute URL to the lyrics page.\n\nget_genre_lyrics_urls &lt;- function(last_fm_genre) {\n  # Function: Scrapes a given last.fm genre title for top tracks in\n  # that genre and then creates links to the lyrics pages for these tracks\n  \n  cat(\"Scraping top songs from:\", last_fm_genre, \"genre: \\n\")\n  \n  pacman::p_load(tidyverse, rvest) # install/ load packages\n  \n  # create web url for the genre listing page\n  genre_listing_url &lt;- \n    paste0(\"https://www.last.fm/tag/\", last_fm_genre, \"/tracks\") \n  \n  genre_lyrics_urls &lt;- \n    read_html(genre_listing_url) |&gt; # read raw html and parse to xml\n    html_elements(\"td.chartlist-name a\") |&gt; # isolate the track elements\n    html_attr(\"href\") |&gt; # extract the href attribute\n    paste0(\"https://www.last.fm\", ., \"/+lyrics\") # join the domain, relative artist path, and the post-pended /+lyrics to create an absolute URL\n  \n  return(genre_lyrics_urls)\n}\n\nWith this function, all we need is to identify the verbatim way last.fm lists the genres. For Rock, it is rock but for Hip Hop, it is hip+hop.\n\nget_genre_lyrics_urls(\"hip+hop\") |&gt; # get urls for top hip hop tracks\n  head(n = 10) # only display 10 tracks\n\nSo now we have a method to scrape URLs by genre and list them in a vector. Our approach, then, could be to pass these lyrics URLs to our existing pipeline which downloads the lyrics (get_lyrics()) and then writes them to disk (write_content()).\n\n# Note: will not run\nget_genre_lyrics_urls(\"hip+hop\") |&gt; # get lyrics urls for specific genre\n  get_lyrics() |&gt; # scrape lyrics url\n  write_content(target_file = \"../data/original/lastfm/hip_hop.csv\") # write to disk\n\nThis approach, however, has a couple of problems. (1) our get_lyrics() function only takes one URL at a time, but the result of get_genre_lyrics_urls() will produce many URLs. We will be able to solve this with iteration using the purrr package, specifically the map() function which will iteratively map each URL output from get_genre_lyrics_urls() to get_lyrics() in turn. (2) the output from our iterative application of get_lyrics() will produce a tibble for each URL, which then sets up a problem with writing the tibbles to disk with the write_content() function. To avoid this we will want to combine the tibbles into one single tibble and then send it to be written to disk. The bind_rows() function will do just this.\n\n# Note: will run, but with occasional errors\nget_genre_lyrics_urls(\"hip+hop\") |&gt; # get lyrics urls for specific genre\n  map(get_lyrics) |&gt; # scrape lyrics url\n  bind_rows() |&gt; # combine tibbles into one\n  write_content(target_file = \"../data/original/lastfm/hip_hop.csv\") # write to disk\n\nThis preceding pipeline conceptually will work. However, on my testing, it turns out that some of the URLs that are generated in the get_genre_lyrics_urls() do not exist on the site. That is, the song is listed but no lyrics have been added to the song site. This will mean that when the URL is sent to the get_lyrics() function, there will be an error when attempting to download and parse the page with read_html() which will halt the entire process. To avoid this error, we can wrap the get_lyrics() function in a function designed to attempt to download and parse the URL (tryCatch()), but if there is an error, it will skip it and move on to the next URL without stopping the processing. This approach is reflected in the get_lyrics_catch() function below.\n\n# Wrap the `get_lyrics()` function with `tryCatch()` to \n# skip URLs that have no lyrics\n\nget_lyrics_catch &lt;- function(lyrics_url) {\n  tryCatch(get_lyrics(lyrics_url), \n           error = function(e) return(NULL)) # no, URL, return(NULL)/ skip\n}\n\nUpdating the pipeline with the get_lyrics_catch() function would look like this:\n\n# Note: will run, but we can do better\nget_genre_lyrics_urls(\"hip+hop\") |&gt; # get lyrics urls for specific genre\n  map(get_lyrics_catch) |&gt; # scrape lyrics url\n  bind_rows() |&gt; # combine tibbles into one\n  write_content(target_file = \"../data/original/lastfm/hip_hop.csv\") # write to disk\n\nThis will work, but as we have discussed before one of this goals we have we acquiring data for a reproducible research project is to make sure that we are developing efficient code that will not burden site’s server we are scraping from. In this case, we would like to check to see if the data is already downloaded. If not, then the script should run. If so, then the script does not run. Of course this is a perfect use of a conditional statement. To make this a single function we can call, I’ve wrapped the functions we created for getting lyric URLs from last.fm, scraping the URLs, and writing the results to disk in the download_lastfm_lyrics() function below. I also added a line to add a last_fm_genre column to the combined tibble to store the name of the genre we scraped (i.e. mutate(genre = last_fm_genre).\n\ndownload_lastfm_lyrics &lt;- function(last_fm_genre, target_file) {\n  # Function: get last.fm lyric urls by genre and write them to disk\n  \n  if(!file.exists(target_file)) {\n    \n    cat(\"Downloading data.\\n\")\n    \n    get_genre_lyrics_urls(last_fm_genre) |&gt; \n      map(get_lyrics_catch) |&gt; \n      bind_rows() |&gt; \n      mutate(genre = last_fm_genre) |&gt; \n      write_content(target_file)\n    \n  } else {\n    cat(\"Data already downloaded!\\n\")\n  }\n}\n\nNow we can call this function on any genre on the last.fm site and download the top 50 song lyrics for that genre (provided they all have lyrics pages).\n\n# Scrape lyrics for 'pop'\ndownload_lastfm_lyrics(last_fm_genre = \"pop\", target_file = \"../data/original/lastfm/pop.csv\")\n\n# Scrape lyrics for 'rock'\ndownload_lastfm_lyrics(last_fm_genre = \"rock\", target_file = \"../data/original/lastfm/rock.csv\")\n\n# Scrape lyrics for 'hip hop'\ndownload_lastfm_lyrics(last_fm_genre = \"hip+hop\", target_file = \"../data/original/lastfm/hip_hop.csv\")\n\n# Scrape lyrics for 'metal'\ndownload_lastfm_lyrics(last_fm_genre = \"metal\", target_file = \"../data/original/lastfm/metal.csv\")\n\nNow we can see that our web scrape data is organized in a similar fashion to the other data we acquired in this chapter.\ndata/\n├── derived/\n└── original/\n    ├── cedel2/\n    │   └── texts.csv\n    ├── gutenberg/\n    │   ├── works_pq.csv\n    │   └── works_pr.csv\n    ├── lastfm/\n    │   ├── country.csv\n    │   ├── hip_hop.csv\n    │   ├── lyrics.csv\n    │   ├── metal.csv\n    │   ├── pop.csv\n    │   └── rock.csv\n    ├── sbc/\n    │   ├── meta-data/\n    │   └── transcriptions/\n    ├── scs/\n    │   ├── README\n    │   ├── discourse\n    │   ├── disfluency\n    │   ├── documentation/\n    │   ├── tagged\n    │   ├── timed-transcript\n    │   └── transcript\n    └── twitter/\n        └── rt_latinx.csv\nAgain, it is important to add these custom functions to our acquire_functions.R script in the functions/ directory so we can access them in our scripts more efficiently and make our analysis steps more succinct and legible.\nIn this section we covered scraping language data from the web. The rvest package provides a host of functions for downloading and parsing HTML. We first looked at a toy example to get a basic understanding of how HTML works and then moved to applying this knowledge to a practical example. To maintain a reproducible workflow, the code developed in this example was grouped into task-oriented functions which were in turn joined and wrapped into a function that provided convenient access to our workflow and avoided unnecessary downloads (in the case the data already exists on disk).\nHere we have built on previously introduced R coding concepts and demonstrated various others. Web scraping often requires more knowledge of and familiarity with R as well as other web technologies. Rest assured, however, practice will increase confidence in your abilities. I encourage you to practice on your own with other websites. You will encounter problems. Consult the R documentation in RStudio or online and lean on the R community on the web at sites such as Stack Overflow inter alia.\n\n5.3.3 Documentation\nAs part of the data acquisition process it is important include documentation that describes the data resource(s) that will serve as the base for a research project. For all resources the data should include as much information possible that outlines the sampling frame of the data (Ädel 2020). For a corpus sample acquired from a repository will often include documentation which will outline the sampling frame –this most likely will be the very information which leads a researcher to select this resource for the project at hand. It is important to include this documentation (HTML or PDF file) or reference to the documentation (article citation or link4) within the reproducible project’s directory structure.\nIn other cases where the data acquisition process is formulated and conducted by the researcher for the specific aims of the research (i.e. API and web scraping approaches), the researcher should make an effort to document those aspects which are key for the study, but that may also be of interest to other researchers for similar research questions. This will may include language characteristics such as modality, register, genre, etc., speaker/ writer characteristics such as demographics, time period(s), context of the linguistic communication, etc. and process characteristics such as the source of the data, the process of acquisition, date of acquisition, etc. However, it is important to recognize that each language sample and the resource from which it is drawn is unique. As a general rule of thumb, a researcher should document the resource as if this were a resource they were to encounter for the first time. To archive this information, it is standard practice to include a README file in the relevant directory where the data is stored.\ndata/\n├── derived/\n└── original/\n    ├── cedel2/\n    │   ├── documentation/\n    │   └── texts.csv\n    ├── gutenberg/\n    │   ├── README.md\n    │   ├── works_pq.csv\n    │   └── works_pr.csv\n    ├── lastfm/\n    │   ├── README.md\n    │   ├── country.csv\n    │   ├── hip_hop.csv\n    │   ├── lyrics.csv\n    │   ├── metal.csv\n    │   ├── pop.csv\n    │   └── rock.csv\n    ├── sbc/\n    │   ├── meta-data/\n    │   └── transcriptions/\n    ├── scs/\n    │   ├── README\n    │   ├── discourse\n    │   ├── disfluency\n    │   ├── documentation/\n    │   ├── tagged\n    │   ├── timed-transcript\n    │   └── transcript\n    └── twitter/\n        ├── README.md\n        └── rt_latinx.csv\nFor both existing corpora and data samples acquired by the researcher it is also important to signal if there are conditions and/ or licensing restrictions that one should heed when using and potentially sharing the data. In some cases existing corpus data come with restrictions on data sharing. These can be quite restrictive and ultimately require that the corpus data not be included in publically available reproducible project or data can only be shared in a derived format. If this the case, it is important to document the steps to legally acquire the data so that a researcher can acquire their own license and take full advantage of your reproducible project.\nIn the case of data from APIs or web scraping, there too may be stipulations on sharing data. A growing number of data sources apply one of the available Creative Common Licenses. Check the source of your data for more information and if you are a member of a research institution you will likely have a specialist on Copyright and Fair Use."
  },
  {
    "objectID": "acquire-data.html#summary",
    "href": "acquire-data.html#summary",
    "title": "5  Acquire data",
    "section": "Summary",
    "text": "Summary\nIn this chapter we have covered a lot of ground. On the surface we have discussed three methods for acquiring corpus data for use in text analysis. In the process we have delved into various aspects of the R programming language. Some key concepts include writing custom functions and working with those function in an iterative manner. We have also considered topics that are more general in nature and concern interacting with data found on the internet.\nEach of these methods should be approached in a way that is transparent to the researcher and to would-be collaborators and the general research community. For this reason the documentation of the steps taken to acquire data are key both in the code and in human-facing documentation.\nAt this point you have both a bird’s eye view of the data available on the web and strategies on how to access a great majority of it. It is now time to turn to the next step in our data analysis project: data curation. In the next posts I will cover how to wrangle your raw data into a tidy dataset. This will include working with and incorporating meta-data as well as augmenting a dataset with linguistic annotations."
  },
  {
    "objectID": "acquire-data.html#activities",
    "href": "acquire-data.html#activities",
    "title": "5  Acquire data",
    "section": "Activities",
    "text": "Activities\n\n\nAdd description of outcomes\n\n\n\n\n\n\n\n Recipe\n\n\n\nupdate\n\nWhat: Control statements, custom functions, and iterationHow: Read Recipe 6 and participate in the Hypothes.is online social annotation.Why: To increase your ability to produce effective, concise, and reproducible code. The three main areas we will cover are working with control statements, writing custom functions, and leveraging iteration. These programming strategies are often useful for acquiring data but, as we will see, they are powerful concepts that can be used throughout a reproducible research project.\n\n\n\n\n\n\n\n\n\n Lab\n\n\n\nupdate\n\nWhat: Control statements, custom functions, and iterationHow: Clone, fork, and complete the steps in Lab 6.Why: To gain experience working with coding strategies such as control statements, custom functions, and iteration, practice working with direct downloads and API interfaces to acquire data, and implement organizational strategies for organizing data in reproducible fashion."
  },
  {
    "objectID": "acquire-data.html#questions",
    "href": "acquire-data.html#questions",
    "title": "5  Acquire data",
    "section": "Questions",
    "text": "Questions\n\n\n\n\n\n\nConceptual questions\n\n…\nFor many resources, information to describe the data origin is found on the resource’s website. Visit the XXX resource and complete the data origin information.\n\n\n\n\n\n\n\n\n\n\nTechnical exercises\n\n…\n…\n\n\n\n\n\n\n\n\nÄdel, Annelie. 2020. “Corpus Compilation.” In A Practical Handbook of Corpus Linguistics, edited by Magali Paquot and Stefan Th. Gries, 3–24. Switzerland: Springer.\n\n\nHester, Jim, Hadley Wickham, and Gábor Csárdi. 2023. Fs: Cross-Platform File System Operations Based on Libuv. https://CRAN.R-project.org/package=fs.\n\n\nLozano, Cristóbal. 2009. “CEDEL2: Corpus Escrito Del Español L2.” Applied Linguistics Now: Understanding Language and Mind/La Lingüística Aplicada Hoy: Comprendiendo El Lenguaje y La Mente. Almería: Universidad de Almería, 197–212.\n\n\nTottie, Gunnel. 2011. “Uh and Um as Sociolinguistic Markers in British English.” International Journal of Corpus Linguistics 16 (2): 173–97.\n\n\nUniversity of Colorado Boulder. 2008. “Switchboard Dialog Act Corpus. Web Download.” Linguistic Data Consortium.\n\n\nWickham, Hadley. 2022. Rvest: Easily Harvest (Scrape) Web Pages. https://CRAN.R-project.org/package=rvest."
  },
  {
    "objectID": "acquire-data.html#footnotes",
    "href": "acquire-data.html#footnotes",
    "title": "5  Acquire data",
    "section": "",
    "text": "See Section @ref(sources) for a list of some other API packages.↩︎\nIt is important to check the paths of sub-domains as some website allow access in some areas and not in others↩︎\ntibble objects are data.frame objects with some added extra bells and whistles that we won’t get into here.↩︎\nNote that web links can change and it is often best to safeguard the documentation by downloading the HTML documentation page instead of linking↩︎"
  },
  {
    "objectID": "curate-datasets.html",
    "href": "curate-datasets.html",
    "title": "6  Curate datasets",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "transform-datasets.html",
    "href": "transform-datasets.html",
    "title": "7  Transform datasets",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "In this section we turn to the analysis of datasets, the evaluation of results, and the interpretation of the findings. We will outline the three main types of statistical analyses: Exploratory Data Analysis (EDA), Predictive Data Analysis (PDA), and Inferential Data Analysis (IDA). Each of these analysis types have distinct, non-overlapping aims and therefore should be determined from the outset of the research project and included as part of the research blueprint. The aim of this section is to establish a clearer picture of the goals, methods, and value of each of these approaches."
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "8  Exploration",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "prediction.html",
    "href": "prediction.html",
    "title": "9  Prediction",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "inference.html",
    "href": "inference.html",
    "title": "10  Inference",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "communication.html",
    "href": "communication.html",
    "title": "Communication",
    "section": "",
    "text": "In this section I cover the steps in presenting the findings of the research both as a research document and as a reproducible research project. Both research documents and reproducible projects are fundamental components of modern scientific inquiry. On the one hand a research document provides readers a detailed summary of the main import of the research study. On the other hand making the research project available to interested readers ensures that the scientific community can gain insight into the process implemented in the research and thus enables researchers to vet and extend this research to build a more robust and verifiable research base."
  },
  {
    "objectID": "reporting.html",
    "href": "reporting.html",
    "title": "11  Reports",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "collaboration.html",
    "href": "collaboration.html",
    "title": "12  Collaboration",
    "section": "",
    "text": "Caution\n\n\n\nUnder development."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Ackoff, Russell L. 1989. “From Data to Wisdom.” Journal\nof Applied Systems Analysis 16 (1): 3–9.\n\n\nÄdel, Annelie. 2020. “Corpus Compilation.” In A\nPractical Handbook of Corpus Linguistics, edited by Magali Paquot\nand Stefan Th. Gries, 3–24. Switzerland: Springer.\n\n\nAllaire, JJ. 2022. Quarto: R Interface to Quarto Markdown Publishing\nSystem. https://github.com/quarto-dev/quarto-r.\n\n\nAllaire, JJ, Yihui Xie, Christophe Dervieux, Jonathan McPherson, Javier\nLuraschi, Kevin Ushey, Aron Atkins, et al. 2023. Rmarkdown: Dynamic\nDocuments for r. https://CRAN.R-project.org/package=rmarkdown.\n\n\nBaayen, R. Harald, L. B. Feldman, and R. Schreuder. 2006.\n“Morphological Influences on the Recognition of Monosyllabic\nMonomorphemic Words.” Journal of Memory and Language 55:\n290–313. https://doi.org/10.1016/j.jml.2006.03.008.\n\n\nBao, Wang, Ning Lianju, and Kong Yue. 2019. “Integration of\nUnsupervised and Supervised Machine Learning Algorithms for Credit Risk\nAssessment.” Expert Systems with Applications 128\n(August): 301–15. https://doi.org/10.1016/j.eswa.2019.02.033.\n\n\nBenoit, Kenneth. 2020. Quanteda.corpora: A Collection of Corpora for\nQuanteda. http://github.com/quanteda/quanteda.corpora.\n\n\nBenoit, Kenneth, David Muhr, and Kohei Watanabe. 2021. Stopwords:\nMultilingual Stopword Lists. https://github.com/quanteda/stopwords.\n\n\nBlischak, John, Peter Carbonetto, and Matthew Stephens. 2021.\nWorkflowr: A Framework for Reproducible and Collaborative Data\nScience. https://github.com/workflowr/workflowr.\n\n\nBresnan, Joan. 2007. “A Few Lessons from Typology.”\nLinguistic Typology 11 (1): 297–306.\n\n\nBrown, Keith. 2005. Encyclopedia of Language and Linguistics.\nVol. 1. Elsevier.\n\n\nBuckheit, Jonathan B., and David L. Donoho. 1995. “Wavelab and\nReproducible Research.” In Wavelets and Statistics,\n55–81. Springer.\n\n\nBychkovska, Tetyana, and Joseph J. Lee. 2017. “At the Same Time:\nLexical Bundles in L1 and L2 University Student Argumentative\nWriting.” Journal of English for Academic Purposes 30\n(November): 38–52. https://doi.org/10.1016/j.jeap.2017.10.008.\n\n\nCampbell, Lyle. 2001. “The History of Linguistics.” In\nThe Handbook of Linguistics, edited by Mark Aronoff and Janie\nRees-Miller, 81–104. Blackwell Handbooks in Linguistics. Blackwell\nPublishers.\n\n\nCarmi, Elinor, Simeon J. Yates, Eleanor Lockley, and Alicja Pawluczuk.\n2020. “Data Citizenship: Rethinking Data Literacy in the Age of\nDisinformation, Misinformation, and Malinformation.” Internet\nPolicy Review 9 (2).\n\n\nChambers, John M. 2020. “S, r, and Data Science.”\nProceedings of the ACM on Programming Languages 4 (HOPL): 1–17.\nhttps://doi.org/10.1145/3386334.\n\n\nChan, Sin-wai. 2014. Routledge Encyclopedia of Translation\nTechnology. Routledge.\n\n\nConway, Lucian Gideon, Laura Janelle Gornick, Chelsea Burfeind, Paul\nMandella, Andrea Kuenzli, Shannon C. Houck, and Deven Theresa Fullerton.\n2012. “Does Complex or Simple Rhetoric Win Elections? An\nIntegrative Complexity Analysis of u.s. Presidential Campaigns.”\nPolitical Psychology 33 (5): 599–618. https://doi.org/10.1111/j.1467-9221.2012.00910.x.\n\n\nCross, Nigel. 2006. “Design as a Discipline.”\nDesignerly Ways of Knowing, 95–103.\n\n\n“Data Never Sleeps 7.0 Infographic.” 2019.\nhttps://www.domo.com/learn/infographic/data-never-sleeps-7.\n\n\nDesjardins, Jeff. 2019. “How Much Data Is Generated Each\nDay?” Visual Capitalist.\n\n\nDonoho, David. 2017. “50 Years of Data Science.”\nJournal of Computational and Graphical Statistics 26 (4):\n745–66. https://doi.org/10.1080/10618600.2017.1384734.\n\n\nDubnjakovic, Ana, and Patrick Tomlin. 2010. A Practical Guide to\nElectronic Resources in the Humanities. Elsevier.\n\n\nEisenstein, Jacob, Brendan O’Connor, Noah A Smith, and Eric P Xing.\n2012. “Mapping the Geographical Diffusion of New Words.”\nComputation and Language, 1–13. https://doi.org/10.1371/journal.pone.0113114.\n\n\nFrancom, Jerid. 2022. “Corpus Studies of Syntax.” In\nThe Cambridge Handbook of Experimental Syntax, edited by Grant\nGoodall, 687–713. Cambridge Handbooks in Language and Linguistics.\nCambridge University Press.\n\n\n———. 2023. Qtalrkit: Quantitative Text Analysis for Linguists\nResource Kit.\n\n\nGandrud, Christopher. 2015. Reproducible\nResearch with r and r Studio. Second edition. CRC Press.\n\n\nGentleman, Robert, and Duncan Temple Lang. 2007. “Statistical\nAnalyses and Reproducible Research.” Journal of Computational\nand Graphical Statistics 16 (1): 1–23.\n\n\nGilquin, Gaëtanelle, and Stefan Th Gries. 2009. “Corpora and\nExperimental Methods: A State-of-the-Art Review.” Corpus\nLinguistics and Linguistic Theory 5 (1): 1–26. https://doi.org/10.1515/CLLT.2009.001.\n\n\nGomez-Uribe, Carlos A., and Neil Hunt. 2015. “The Netflix\nRecommender System: Algorithms, Business Value, and Innovation.”\nACM Transactions on Management Information Systems (TMIS) 6\n(4): 1–19.\n\n\nGries, Stefan Th. 2021. Statistics for Linguistics with r. De\nGruyter Mouton.\n\n\nGries, Stefan Th. 2013. Statistics for Linguistics with r. A\nPractical Introduction. 2nd revise.\n\n\nGrieve, Jack, Andrea Nini, and Diansheng Guo. 2018. “Mapping\nLexical Innovation on American Social Media.” Journal of\nEnglish Linguistics 46 (4): 293–319.\n\n\nHay, Jennifer. 2002. “From Speech Perception to Morphology: Affix\nOrdering Revisited.” Language 78 (3): 527–55.\n\n\nHester, Jim, Hadley Wickham, and Gábor Csárdi. 2023. Fs:\nCross-Platform File System Operations Based on Libuv. https://CRAN.R-project.org/package=fs.\n\n\nHicks, Stephanie C., and Roger D. Peng. 2019. “Elements and\nPrinciples for Characterizing Variation Between Data Analyses.”\narXiv. https://doi.org/10.48550/arXiv.1903.07639.\n\n\nIde, Nancy, Collin Baker, Christiane Fellbaum, Charles Fillmore, and\nRebecca Passonneau. 2008. “MASC: The Manually Annotated Sub-Corpus\nof American English.” In 6th International Conference on\nLanguage Resources and Evaluation, LREC 2008, 2455–60. European\nLanguage Resources Association (ELRA).\n\n\nIgnatow, Gabe, and Rada Mihalcea. 2017. An Introduction to Text\nMining: Research Design, Data Collection, and Analysis. Sage\nPublications.\n\n\nJaeger, T Florian, and Neal Snider. 2007. “Implicit Learning and\nSyntactic Persistence: Surprisal and Cumulativity.”\nUniversity of Rochester Working Papers in the Language Sciences\n3 (1).\n\n\nKaur, Jashanjot, and P. Kaur Buttar. 2018. “A Systematic Review on\nStopword Removal Algorithms.” International Journal on Future\nRevolution in Computer Science & Communication Engineering 4\n(4): 207–10.\n\n\nKloumann, IM, CM Danforth, KD Harris, and CA Bliss. 2012.\n“Positivity of the English Language.” PloS One.\n\n\nKostić, Aleksandar, Tanja Marković, and Aleksandar Baucal. 2003.\n“Inflectional Morphology and Word Meaning: Orthogonal or\nCo-Implicative Cognitive Domains?” In Morphological Structure\nin Language Processing, edited by R. Harald Baayen and Robert\nSchreuder, 1–44. De Gruyter Mouton. https://doi.org/10.1515/9783110910186.1.\n\n\nKrathwohl, David R. 2002. “A Revision of Bloom’s Taxonomy: An\nOverview.” Theory into Practice 41 (4): 212–18.\n\n\nKross, Sean, Nick Carchedi, Bill Bauer, and Gina Grdina. 2020.\nSwirl: Learn r, in r. http://swirlstats.com.\n\n\nKucera, H, and W N Francis. 1967. Computational Analysis of Present\nDay American English. Brown University Press Providence.\n\n\nLandau, William Michael. 2023. Targets: Dynamic Function-Oriented\nMake-Like Declarative Pipelines. https://CRAN.R-project.org/package=targets.\n\n\nLantz, Brett. 2013. Machine Learning with r. Birmingham: Packt\nPublishing.\n\n\nLewis, Michael. 2004. Moneyball: The Art of Winning an Unfair\nGame. WW Norton & Company.\n\n\nLozano, Cristóbal. 2009. “CEDEL2: Corpus Escrito Del Español\nL2.” Applied Linguistics Now: Understanding Language and\nMind/La Lingüística Aplicada Hoy: Comprendiendo El Lenguaje y La Mente.\nAlmería: Universidad de Almería, 197–212.\n\n\nMagueresse, Alexandre, Vincent Carles, and Evan Heetderks. 2020.\n“Low-Resource Languages: A Review of Past Work and Future\nChallenges.” arXiv. https://arxiv.org/abs/2006.07264.\n\n\nManning, Christopher. 2003. “Probabilistic Syntax.” In\nProbabilistic Linguistics, edited by Bod, Jennifer Hay, and\nJannedy, 289–341. Cambridge, MA: MIT Press.\n\n\nMarcus, Mitchell P, Beatrice Santorini, and Mary Ann Marcinkiewicz.\n1993. “Building a Large Annotated Corpus of English: The Penn\nTreebank.” Computational Linguistics 19 (2): 313–30.\n\n\nMarwick, Ben, Carl Boettiger, and Lincoln Mullen. 2018. “Packaging\nData Analytical Work Reproducibly Using r (and Friends).” The\nAmerican Statistician 72 (1): 80–88.\n\n\nMosteller, Frederick, and David L Wallace. 1963. “Inference in an\nAuthorship Problem.” Journal of the American Statistical\nAssociation 58 (302): 275–309. https://www.jstor.org/stable/2283270.\n\n\nMuñoz, Carmen, ed. 2006. Age and the Rate of Foreign Language\nLearning. 1st ed. Vol. 19. Second Language Acquisition Series.\nClevedon: Multilingual Matters.\n\n\nNisioi, Sergiu, Ella Rabinovich, Liviu P. Dinu, and Shuly Wintner.\n23-28, 2016-05. “A Corpus of Native, Non-Native and Translated\nTexts.” In Proceedings of the Tenth International Conference\non Language Resources and Evaluation (LREC 2016).\nPortoroz̆, Slovenia: European Language Resources Association\n(ELRA).\n\n\nNivre, Joakim, Marie-Catherine de Marneffe, Filip Ginter, Yoav Goldberg,\nJan Hajič, Christopher D Manning, Ryan McDonald, et al. 2016.\n“Universal Dependencies V1: A Multilingual Treebank\nCollection.” Proceedings of the Tenth International\nConference on Language Resources and Evaluation (LREC’16), 1659–66.\n\n\nOlohan, Maeve. 2008. “Leave It Out! Using a Comparable Corpus to\nInvestigate Aspects of Explicitation in Translation.”\nCadernos de Tradução, 153–69.\n\n\nPaquot, Magali, and Stefan Th. Gries, eds. 2020. A Practical\nHandbook of Corpus Linguistics. Switzerland: Springer.\n\n\nRiehemann, Susanne Z. 2001. “A Constructional Approach to Idioms\nand Word Formation.” PhD thesis, Stanford.\n\n\nRoediger, H. L. L, and K. B. B McDermott. 2000. “Distortions of\nMemory.” The Oxford Handbook of Memory, 149–62.\n\n\nRowley, Jennifer. 2007. “The Wisdom Hierarchy: Representations of\nthe DIKW Hierarchy.” Journal of Information Science 33\n(2): 163–80. https://doi.org/10.1177/0165551506070706.\n\n\nSaxena, Shweta, and Manasi Gyanchandani. 2020. “Machine Learning\nMethods for Computer-Aided Breast Cancer Diagnosis Using Histopathology:\nA Narrative Review.” Journal of Medical Imaging and Radiation\nSciences 51 (1): 182–93.\n\n\nTalarico, Jennifer M., and David C. Rubin. 2003. “Confidence, Not\nConsistency, Characterizes Flashbulb Memories.” Psychological\nScience 14 (5): 455–61. https://doi.org/10.1111/1467-9280.02453.\n\n\nTottie, Gunnel. 2011. “Uh and Um as Sociolinguistic Markers in\nBritish English.” International Journal of Corpus\nLinguistics 16 (2): 173–97.\n\n\nUniversity of Colorado Boulder. 2008. “Switchboard Dialog Act\nCorpus. Web Download.” Linguistic Data Consortium.\n\n\nVoigt, Rob, Nicholas P. Camp, Vinodkumar Prabhakaran, William L.\nHamilton, Rebecca C. Hetey, Camilla M. Griffiths, David Jurgens, Dan\nJurafsky, and Jennifer L. Eberhardt. 2017. “Language from Police\nBody Camera Footage Shows Racial Disparities in Officer Respect.”\nProceedings of the National Academy of Sciences 114 (25):\n6521–26.\n\n\nWhite, John Myles. 2023. ProjectTemplate: Automates the Creation of\nNew Statistical Analysis Projects. http://projecttemplate.net.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of\nStatistical Software 59 (10). https://doi.org/10.18637/jss.v059.i10.\n\n\n———. 2022. Rvest: Easily Harvest (Scrape) Web Pages. https://CRAN.R-project.org/package=rvest.\n\n\n———. 2023. Tidyverse: Easily Install and Load the Tidyverse. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Jennifer Bryan, Malcolm Barrett, and Andy Teucher.\n2023. Usethis: Automate Package and Project Setup. https://CRAN.R-project.org/package=usethis.\n\n\nWickham, Hadley, Jim Hester, Winston Chang, and Jennifer Bryan. 2022.\nDevtools: Tools to Make Developing r Packages Easier. https://CRAN.R-project.org/package=devtools.\n\n\nWulff, S, A Stefanowitsch, and Stefan Th. Gries. 2007. “Brutal\nBrits and Persuasive Americans.” Aspects of Meaning.\n\n\nXie, Yihui. 2023. Tinytex: Helper Functions to Install and Maintain\nTeX Live, and Compile LaTeX Documents. https://github.com/rstudio/tinytex."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Appendix A — Data",
    "section": "",
    "text": "…"
  },
  {
    "objectID": "feedback.html",
    "href": "feedback.html",
    "title": "Appendix B — Feedback ",
    "section": "",
    "text": "Thank you for taking the time to read through this book 🫶🏻. I really value your opinion and I would love to hear your thoughts as I continue to make progress.\n\nWhere to review\nChapters that are ready for feedback will appear with the following callout.\n\n\n\n\n\n\nDraft\n\n\n\nReady for review.\n\n\nThose that are not ready will appear with the following callout.\n\n\n\n\n\n\nCaution\n\n\n\nUnder development.\n\n\nIn a few cases a chapter will be ready for review, but I’ll still be working on the exercises, callouts, etc. In those cases, the items that are still under development will be marked with the  icon.\n\n\nWhat to look for\nAs you read over the draft, I’d appreciate your feedback in the following areas:\n\nClarity and Comprehensibility\nI’d love to know if you think the content is clear and easy to understand. Do you think the concepts are broken down enough? Are the examples helpful? If anything seems too jargon-y or confusing, definitely let me know.\nConsistency\nIt’s pretty important to keep things smooth. So, keep an eye out for any inconsistent writing styles, terminology, or layout. If something seems off, I’d appreciate it if you point it out.\nRelevance\nDoes the material match the current standards and knowledge? Will it the topics and questions be of interest to linguists? If something feels outdated or irrelevant, don’t hesitate to mention it.\nEngagement\n​I​’m not looking to drop a boring read on people. So, as you’re going through it, think about whether it holds your interest. Maybe ​the prose needs more life, the examples need to be more diverse, or the exercises could be more or less challenging. If you have any ideas, I’m all ears.\n\n\n\nHow to submit feedback\nDepending on your preference, you can submit feedback in one of three ways:\n\nhypothes.is\nThis is the easiest way to submit feedback. Join the “qtal_feedback” annotation group and just highlight the text you want to comment on and click the “Annotate” button. You can also add comments to the right sidebar.\nGitHub issues\nThis book is hosted on GitHub, so you can submit feedback directly through the issues page for the repository. Just click the “New issue” button and fill out the form. You’ll need a GitHub account to do this.\nEmail me at francojc@wfu.edu\nIf you’d rather not use the other options, you can always email me directly. Just make sure to try to include references to the specific parts of the book you’re referring to. A link or section number will do.\n\n\n\nThank yous!\nI want to thank you beforehand for your willingness to help me out. I really appreciate it. I also want to thank you in print. Please give me the name you would like to appear in the Acknowledgements section. If you’d rather not be acknowledged in the final version of the book, please let me know."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Quantitative Text Analysis for Linguistics",
    "section": "Welcome",
    "text": "Welcome\nThe goal of this textbook is to provide readers with foundational knowledge and practical skills in quantitative text analysis using the R programming language.\nBy the end of this textbook, readers will be able to identify, interpret and evaluate data analysis procedures and results to support research questions within language science. Additionally, readers will gain experience in designing and implementing research projects that involve processing and analyzing textual data employing modern programming strategies. This textbook aims to instill a strong sense of reproducible research practices, which are critical for promoting transparency, verification, and sharing of research findings.\n\nThis textbook is geared towards advanced undergraduates, graduate students, and researchers looking to expand their methodological toolbox. It assumes no prior knowledge of programming or quantitative methods and prioritizes practical application and intuitive understanding over technical details.\n\n\n\n\n\n\n Under development\nFeedback is welcome and can be provided:\n\nthrough the hypothes.is service. A toolbar interface to this service is located on the right sidebar of this site. To register for a free account and join the “qtal_feedback” annotation group follow this link,\nby filing an issue at https://github.com/qtalr/book/issues,\nor by sending an email to francojc@wfu.edu.\n\nTo help guide your feedback, please consider the questions found in the Feedback guide.\nSuggestions and changes will be acknowledged in the printed publication by Routledge Press (Spring 2024).\n\n\n\nAbout the author\nDr. Jerid Francom is Associate Professor of Spanish and Linguistics at Wake Forest University. His research focuses on the use of language corpora from a variety of sources (news, social media, and other internet sources) to better understand the linguistic and cultural similarities and differences between language varieties for both scholarly and pedagogical projects. He has published on topics including the development, annotation, and evaluation of linguistic corpora and analyzed corpora through corpus, psycholinguistic, and computational methodologies. He also has experience working with and teaching statistical programming with R."
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Quantitative Text Analysis for Linguistics",
    "section": "License",
    "text": "License\nThis work by Jerid C. Francom is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License."
  },
  {
    "objectID": "index.html#credits",
    "href": "index.html#credits",
    "title": "Quantitative Text Analysis for Linguistics",
    "section": "Credits",
    "text": "Credits\n\nFont Awesome Icons are SIL OFL 1.1 Licensed"
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Quantitative Text Analysis for Linguistics",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThe development of this book has benefited from the generous feedback from the following people: Andrea Bowling, Caroline Brady, Declan Golsen, Asya Little, Claudia Valdez, (add your name here!). As always, any errors or omissions are my own."
  },
  {
    "objectID": "index.html#build-information",
    "href": "index.html#build-information",
    "title": "Quantitative Text Analysis for Linguistics",
    "section": "Build information",
    "text": "Build information\nThis textbook was built with the quarto package (Allaire 2022) and the bookdown package (Xie 2023) for R. The source code for this book is available on GitHub.\n\nThis version of the textbook was built with R version 4.3.1 (2023-06-16) on macOS Ventura 13.4.1 with the following packages:\n\n\n\n\n\n\n\n\npackage\nversion\nsource\n\n\n\ndplyr\n1.1.2\nCRAN (R 4.3.0)\n\n\nforcats\n1.0.0\nCRAN (R 4.3.0)\n\n\nggplot2\n3.4.2\nCRAN (R 4.3.0)\n\n\nhere\n1.0.1\nCRAN (R 4.3.0)\n\n\nknitr\n1.43\nCRAN (R 4.3.0)\n\n\nlubridate\n1.9.2\nCRAN (R 4.3.0)\n\n\npurrr\n1.0.1\nCRAN (R 4.3.0)\n\n\nqtalrkit\n0.0.1.9400\nGithub (qtalr/qtalrkit@f644a93f0ae719b2155f418c679642bcef12696b)\n\n\nreadr\n2.1.4\nCRAN (R 4.3.0)\n\n\nreadtext\n0.90\nCRAN (R 4.3.0)\n\n\nrmarkdown\n2.23\nCRAN (R 4.3.1)\n\n\nstringr\n1.5.0\nCRAN (R 4.3.0)\n\n\ntadr\n0.1.2\nlocal (/Users/francojc/Documents/Academic/Research/Projects/1Active/tad/tadr)\n\n\ntibble\n3.2.1\nCRAN (R 4.3.0)\n\n\ntidyr\n1.3.0\nCRAN (R 4.3.0)\n\n\ntidytext\n0.4.1\nCRAN (R 4.3.0)\n\n\ntidyverse\n2.0.0\nCRAN (R 4.3.0)\n\n\nwebshot\n0.5.5\nCRAN (R 4.3.1)\n\n\n\n\n\n\n\n\nAllaire, JJ. 2022. Quarto: R Interface to Quarto Markdown Publishing System. https://github.com/quarto-dev/quarto-r.\n\n\nXie, Yihui. 2023. Bookdown: Authoring Books and Technical Documents with r Markdown. https://CRAN.R-project.org/package=bookdown."
  },
  {
    "objectID": "text-analysis.html#text-making-sense-of-a-complex-world",
    "href": "text-analysis.html#text-making-sense-of-a-complex-world",
    "title": "1  Text analysis in context",
    "section": "\n1.1 Making sense of a complex world",
    "text": "1.1 Making sense of a complex world\n\n\n1.1.1 Heuristic Understanding\n\nThe world around us is full of actions and interactions so numerous that it is difficult to really comprehend. As each individual sees and experiences this world, we gain knowledge and build up heuristic understanding about how it works and how we can interact with it. This happens regardless of your educational background. As humans we are built for this. Our minds process countless sensory inputs. They underlie skills and abilities that we take for granted like being able to predict what will happen if you see someone about to knock a wine glass off a table and onto a concrete floor. You’ve never seen this object before and this is the first time you’ve been to this winery, but somehow and from somewhere you ‘instinctively’ make an effort to warn the would-be-glass-breaker before it is too late. You most likely have not stopped to consider where this predictive knowledge comes from, or if you have, you may have just chalked it up to ‘common sense’. As common as it may be, it is an incredible display of the brain’s capacity to monitor your environment, relate the events and observations that take place, and store that information all the time not making a big fuss to tell your conscious mind what it’s up to.\nSo wait, this is a textbook on text analysis, right? So what does all this have to do with that? Well, there are two points to make that are relevant for framing our journey: (1) the world is constantly churning out data in real-time at a scale that is daunting and (2) for all the power of the brain that works so efficiently behind the scene making sense of the world, we are one individual living one life that has a limited view of the world at large. Let me expand on these two points a little more.\nFirst let’s be clear. There is no way for anyone to experience all things at all times. But even extremely reduced slices of reality are still vastly outside of our experiential capacity, at least in real-time. One can make the point that since the inception of the internet an individual’s ability to experience larger slices of the world has increased. But could you imagine reading, watching, and listening to every file that is currently accessible on the web? Or has been? (See the Wayback Machine.) Scale this down even further; let’s take Wikipedia, the world’s largest encyclopedia. Can you imagine reading every wiki entry? As large as a resource such as Wikipedia is 1, it is still a small fragment of the written language that is produced on the web, just the web 2. Consider that for a moment.\nTo my second framing point, which is actually two points in one. I underscored the efficiency of our brain’s capacity to make sense of the world. That efficiency comes from some clever evolutionary twists that lead our brain to take in the world but it makes some shortcuts that compress the raw experience into heuristic understanding. What that means is that the brain is not a supercomputer. It does not store every experience in raw form, we do not have access to the records of our experience like we would imagine a computer would have access to the records logged in a database. Where our brains do excel is in making associations and predictions that help us (most of the time) navigate the complex world we inhabit. This point is key –our brains are doing some amazing work, but that work can give us the impression that we understand the world in more detail that we actually do. Let’s do a little thought experiment. Close your eyes and think about the last time you saw your best friend. What were they wearing? Can you remember the colors? If your like me, or any other human, you probably will have a pretty confident feeling that you know the answers to these questions and there is a chance you a right. But it has been demonstrated in numerous experiments on human memory that our confidence does not correlate with accuracy (Talarico and Rubin 2003; Roediger and McDermott 2000). You’ve experienced an event, but there is no real reason that we should bet our lives on what we experienced. It’s a little bit scary, for sure, but the magic is that it works ‘good enough’ for practical purposes.\nSo here’s the deal: as humans we are (1) clearly unable to experience large swaths of experience by the simple fact that we are individuals living individual lives and (2) the experiences we do live are not recorded in memory with perfect precision and therefore we cannot ‘trust’ our intuitions, at least not in an absolute sense.\n\n\n\n\n\n\n Consider this\nHow might your own experiences and biases influence your understanding of the world? What are some ways that you can mitigate these biases? Is ever possible to be completely objective? How might biases influence the way you approach text analysis?\n\n\n\n\n1.1.2 Science to advance understanding\n\nWhat does that mean for our human curiosity about the world around us and our ability to reliably make sense of it? In short it means that we need to approach understanding our world with the tools of science. Science starts with a question, identifies and collects data, careful selected slices of the complex world, submits this data to analysis through clearly defined and reproducible procedures, and reports the results for others to evaluate. This process is repeated, modifying, and manipulating the procedures, asking new questions and positing new explanations, all in an effort to make inroads to bring the complex into tangible view.\nIn essence what science does is attempt to subvert our inherent limitations in understanding by drawing on carefully and purposefully collected slices of observable experience and letting the analysis of these observations speak, even if it goes against our intuitions (those powerful but sometime spurious heuristics that our brains use to make sense of the world)."
  },
  {
    "objectID": "text-analysis.html#data-analysis",
    "href": "text-analysis.html#data-analysis",
    "title": "1  Text analysis in context",
    "section": "\n1.2 Data analysis",
    "text": "1.2 Data analysis\n\n\n1.2.1 Emergence of data science\n\nAt this point I’ve sketched an outline strengths and limitations of humans’ ability to make sense of the world and why science is used to address these limitations. This science I’ve described is the one you are familiar with and it has been an indispensable tool to make sense of the world. If you are like me, this description of science may be associated with visions of white coats, labs, and petri dishes. While science’s foundation still stands strong in the 21st century, a series of intellectual and technological events mid-20th century set in motion changes that have changed aspects about how science is done, not why it is done. We could call this Science 2.0, but let’s use the more popularized term data science. The recognized beginnings of data science are attributed to work in the “Statistics and Data Analysis Research” department at Bell Labs during the 1960s. Although primarily conceptual and theoretic at the time, a framework for quantitative data analysis took shape that would anticipate what would come: sizable datasets which would “[…] require advanced statistical and computational techniques […] and the software to implement them.” (Chambers 2020) This framework emphasized both the inference-based research of traditional science, but also embraced exploratory research and recognized the need to address practical considerations that would arise when working with and deriving insight from an abundance of machine-readable data.\nFast-forward to the 21st century a world in which machine-readable data is truly in abundance. With increased computing power, the emergence of the world wide web, and wide adoption of mobile devices electronic communication skyrocketed around the globe. To put this in perspective, in 2019 it was estimated that every minute 511 thousand tweets were posted, 18.1 million text messages were sent, and 188 million emails were sent (“Data Never Sleeps 7.0 Infographic” 2019). The data flood has not been limited to language, there are more sensors and recording devices than ever before which capture evermore swaths of the world we live in (Desjardins 2019). Where increased computing power gave rise to the influx of data, it is also one of the primary methods for gathering, preparing, transforming, analyzing, and communicating insight derived from this data (Donoho 2017). The vision laid out in the 1960s at Bell Labs had come to fruition.\n\n1.2.2 Computing skills, statistical knowledge, and domain knowledge\n\nData science is not predicated on data alone. Turning data into insight takes computing skills (i.e. programming), statistical knowledge, and domain expertise. This triad has been popularly represented as a Venn diagram such as in Figure 1.1.\n\n\n\n\nFigure 1.1: Data Science Venn Diagram adapted from Drew Conway.\n\n\n\nThe computing skills component of data science is the ability to write code to perform the data analysis process. This is the primary approach for working with data at scale. The statistical knowledge component of data science is the ability to apply statistical methods to data to derive insight. Domain expertise provides researchers insight at key junctures in the development of a research project and aid researchers in evaluating results.\nThis triad of skills in combination with reproducible research practices is the foundational toolbelt of data science (Hicks and Peng 2019). Reproducible research entails the use of computational tools to automate the process of data analysis. This automation is achieved by writing code that can be executed to replicate the data analysis. This code can then be shared through code sharing repositories, such as GitHub, where it can be viewed, downloaded, and executed by others. This adds transparency to the process and allows others to build on previous work. This is in contrast to traditional approaches where data analysis is performed (semi-)manually, results are reported in a static document such as a report or journal article, and the data analysis process is not shared. This approach is not reproducible because the data analysis process is not transparent and cannot be replicated. This is problematic because it is difficult to evaluate the results and build on previous work. Reproducible research practices are a key component of data science and are emphasized throughout this book.\n\n1.2.3 Applications of data science\nEquipped with the data science toolbelt, the interest in deriving insight from the available data is now almost ubiquitous. The science of data has now reached deep into all aspects of life where making sense of the world is sought. Predicting whether a loan applicant will get a loan (Bao, Lianju, and Yue 2019), whether a lump is cancerous (Saxena and Gyanchandani 2020), what films to recommend based on your previous viewing history (Gomez-Uribe and Hunt 2015), what players a sports team should sign (Lewis 2004) all now incorporate a common set of data analysis tools.\nThe data science toolbelt also underlies well-known public-facing language applications. From the language-capable chat applications, plagiarism detection software, machine translation algorithms, and search engines, tangible results of quantitative approaches to language are becoming standard fixtures in our lives, as seen in Figure 1.2.\n\n\n\n\n\nFigure 1.2: Well-known public-facing language applications\n\n\n\nThe spread of quantitative data analysis too has taken root in academia. Even in areas that on first blush don’t appear readily approachable in a quantitative manner, such as fields in the social sciences and humanities, data science is making important and sometimes disciplinary changes to the way that academic research is conducted. This textbook focuses in on a domain that cuts across many of these fields; namely language. At this point let’s turn to quantitative approaches to language analysis as we work closer to contextualizing text analysis."
  },
  {
    "objectID": "text-analysis.html#language-analysis",
    "href": "text-analysis.html#language-analysis",
    "title": "1  Text analysis in context",
    "section": "\n1.3 Language analysis",
    "text": "1.3 Language analysis\nLanguage is a defining characteristic of our species. Since antiquity, language has attracted interest across disciplines and schools of thought. In the early 20th century, the development of the rigorous approach to study of language as a field in its own right took root (Campbell 2001), yet a plurality of theoretical views and methodological approaches remained. Contemporary linguistics bares this complex history and is far from theoretically and methodologically unified.\nEither based on the tenets of theoretical frameworks and/or the objects of study of particular fields, approaches to language research vary. On the one hand some language research commonly applies qualitative assessment of language structure and/ or use. Qualitative approaches describe and account for characteristics, or “qualities”, that can be observed, but not measured (e.g. introspective methods, ethnographic methods, etc.)\nOn the other hand other language research programs employ quantitative research methods either out of necessity given the object of study (phonetics, psycholinguistics, etc.) or based on theoretical principles (Cognitive Linguistics, Connectionism, etc.). Quantitative approaches involve measurements of properties of language that can be observed and measured (e.g. frequency of use, reaction time, etc.).\nThese latter research areas and theoretical paradigms employ methods that share much of the common data analysis toolbox described in the previous section. In effect, this establishes a common methodological language between other language research fields but also with research outside of linguistics.\nHowever, there is never a one-size-fits all approach to anything –much less data analysis. And even in quantitative language analysis there is a key methodological distinction that has downstream effects in terms of procedure but also in terms of interpretation. The key distinction that we need to make at this point, which will provide context for our introduction to quantitative text analysis, comes down to the approach to collecting language data and the nature of that data. This distinction is between experimental data and observational data.\nExperimental approaches start with a intentionally designed hypothesis and lay out a research methodology with appropriate instruments and a plan to collect data that shows promise for shedding light on the validity of the hypothesis. Experimental approaches are conducted under controlled contexts, usually a lab environment, in which participants are recruited to perform a language related task with stimuli that have been carefully curated by researchers to elicit some aspect of language behavior of interest. Experimental approaches to language research are heavily influenced by procedures adapted from psychology. This link is logical as language is a central area of study in cognitive psychology. This approach looks much like the white-coat science that we made reference to earlier but, as in most quantitative research, has now taken advantage of the data analysis toolbelt to collect and organize much larger quantities of data and conduct statistically more robust analysis procedures and communicate findings more efficiently.\nObservational approaches are a bit more of a mixed bag in terms of the rationale for the study; they may either start with a testable hypothesis or in other cases may start with a more open-ended research question to explore. But a more fundamental distinction between the two is drawn in the amount of control the researcher has on contexts and conditions in which the language behavior data to be collected is produced. Observational approaches seek out records of language behavior that is produced by language speakers for communicative purposes in natural(istic) contexts. This may take place in labs (language development, language disorders, etc.), but more often than not, language is collected from sources where speakers are performing language as part of their daily lives –whether that be posting on social media, speaking on the telephone, making political speeches, writing class essays, reporting the latest news for a newspaper, or crafting the next novel destined to be a New York Times best-seller. What is more, data collected from the ‘wild’ varies more in structure relative to data collected in experimental approaches and requires a number of steps to prepare the data to sync up with the data analysis toolbelt.\nI liken this distinction between experimental and observational data collection to the difference between farming and foraging. Experimental approaches are like farming; the groundwork for a research plan is designed, much as a field is prepared for seeding, then the researcher performs as series of tasks to produce data, just as a farmer waters and cares for the crops, the results of the process bear fruit, data in our case, and this data is harvested. Observational approaches are like foraging; the researcher scans the available environmental landscape for viable sources of data from all the naturally existing sources, these sources are assessed as to their usefulness and value to address the research question, the most viable is selected, and then the data is collected.\nThe data acquired from both of these approaches have their trade-offs, just as farming and foraging. Experimental approaches directly elicit language behavior in highly controlled conditions. This directness and level of control has the benefit of allowing researchers to precisely track how particular experimental conditions effect language behavior. As these conditions are an explicit part of the design and therefore the resulting language behavior can be more precisely attributed to the experimental manipulation. The primary shortcoming of experimental approaches is that there is a level of artificialness to this directness and control. Whether it is the language materials used in the task, the task itself, or the fact that the procedure takes place under supervision the language behavior elicited can diverge quite significantly from language behavior performed in natural communicative settings. Observational approaches show complementary strengths and shortcomings.\nWhereas experimental approaches may diverge from natural language use, observational approaches strive to identify and collected language behavior data in natural, uncontrolled, and unmonitored contexts, as seen in Figure 1.3. In this way observational approaches do not have to question to what extent the language behavior data is or is not performed as a natural communicative act. On the flipside, the contexts in which natural language communication take place are complex relative to experimental contexts. Language collected from natural contexts are nested within the complex workings of a complex world and as such inevitably include a host of factors and conditions which can prove challenging to disentangle from the language phenomenon of interest but must be addressed in order to draw reliable associations and conclusions.\n\n\n\n\nFigure 1.3: Trade-offs between experimental and observational data collection methods.\n\n\n\nThe upshot, then, is twofold: (1) data collection methods matter for research design and interpretation and (2) there is no single best approach to data collection, each have their strengths and shortcomings. In the ideal, a robust science of language will include insight from both experimental and observational approaches (Gilquin and Gries 2009). And evermore there is greater appreciation for the complementary nature of experimental and observational approaches and a growing body of research which highlights this recognition.\n\n\n\n\n\n\n Case study \nManning (2003) discusses the use of probabilistic models in syntax to account for the variability in language usage and the presence of both hard and soft constraints in grammar. The paper touches on the statistical methods in text analysis, the importance of distinguishing between external and internal language, and the limitations of Generative Grammar. Overall, the paper suggests that usage-based and formal syntax can learn from each other to better understand language variation and change.\n\n\n\nGiven their particular trade-offs observational data is often used as an exploratory starting point to help build insight and form predictions that can then be submitted to experimental conditions. In this way, studies based on observational data serve as an exploratory tool to gather a better and more externally valid view of language use which can then serve to make prediction that can be explored with more precision in an experimental paradigm. However, this is not always the case; observational data is also often used in hypothesis-testing contexts as well. And furthermore, some in some language-related fields, a hypothesis-testing is not the approach for deriving knowledge and insight."
  },
  {
    "objectID": "text-analysis.html#text-analysis",
    "href": "text-analysis.html#text-analysis",
    "title": "1  Text analysis in context",
    "section": "\n1.4 Text analysis",
    "text": "1.4 Text analysis\nIn a nutshell, text analysis is the process of leveraging the data science toolbelt to derive insight from textual data collected through observational methods. In the next subsections, I will unpack this definition and discuss the primary components that make up text analysis including research appoaches and technical implementation, as well as practical applications.\n\n1.4.1 Approaches\nText analysis is a multifacited research methodology. It can be used use facilitate the qualitative exploration of smaller, human-digestable textual information, but is more often employed quantitatively to bring to the surface patterns and relationships in large samples of textual data that would be otherwise difficult, if not impossible, to identify manually.\nText being text, there are a series of data prepration steps that must be taken to ready the data for analysis. In addition to collecting the data, the data must be organized, cleaned, and transformed into a format that is amenable to statistical analysis.\nThe statistical and evaluative approach employed in the analysis is dependent on the aim of the research. For research aimed at exploring and uncovering patterns and relationships in a data-driven manner, Exploratory Data Analysis (EDA) is employed. EDA combines descriptive statistics, visualizations, and statistical learning methods in an iterative and interactive way to provide the researcher the ability to identify patterns and relationships and to evaluate whether and why they are meaningful.\nPredictive Data Analysis (PDA), applied in research for outcome prediction, is a supervised machine learning task. It uses feature sets to predict an outcome variable. Its primary evaluation metric is the prediction accuracy on new data. However, for many text analysis tasks, human interpretation is crucial to provide context and assess the significance of the results.\nResearch aimed at explaining relationships between variables and the population from which the sample was drawn will adopt an Inferential Data Analysis (IDA) approach. IDA is a theory-driven process that employs statistical models for hypothesis testing. The extent to which the results can be confidently generalized to the population is the primary evaluation metric.\nAs we see, text analysis can be used for a variety of purposes; from data-driven exploration and discovery to hypothesis testing and generalization.\n\n1.4.2 Implementation\nTo ensure that the results of text analysis projects are replicable and transparent, programming strategies play an integral role at each stage of the implementation of a research project. While there are a number of programming languages that can be used for text analysis, R widely adopted in linguistics research. R is a free and open-source programming language that is specifically designed for statistical computing and graphics. It has a large and active community of users and developers, and a robust ecosystem of packages which make it a powerful and flexible language that is well-suited for core text analysis tasks: data collection, organization, transformation, analysis, and visualization. When combined with Quarto for literate programming and GitHub for version control and collaboration, R provides a robust and reproducible workflow for text analysis.\n\n1.4.3 Applications\nSo what are some applications of text analysis? Most public facing applications stem from Computational Linguistic research, often known as Natural Language Processing (NLP) by practitioners. Whether it be using search engines, online translators, submitting your paper to plagiarism detection software, etc. many of the text analysis methods we will cover are at play.\n\n\n\n\n\n\n\n Consider this\nWhat are some other public facing applications of text analysis that you are aware of?\n\n\n\nIn academia the use of quantitative text analysis is even more widespread, despite the lack of public fanfare. In linguistics, text analysis is applied to a wide range of topics and research questions in both theoretical and applied subfields, as seen in Example 1.1 and Example 1.2.\n\nExample 1.1 Theoretical linguistics\n\n\nHay (2002) use a corpus study to investigate the role of frequency and phonotatics in affix ordering in English.\n\nRiehemann (2001) explores the extent to which idiomatic expressions (e.g. ‘raise hell’) are lexical or syntactic units.\n\nBresnan (2007) investigate the claim that possessed deverbal nouns in English (e.g. ‘the city’s destruction’) are subject to a syntactic constraint that requires the possessor to be affected by the action denoted by the deverbal noun.\n\n\n\nExample 1.2 Applied linguistics\n\n\n\nWulff, Stefanowitsch, and Gries (2007) explore differences between British and American English at the lexico-syntactic level in the into-causative construction (e.g. ‘He tricked me into employing him.’). \n\n\nEisenstein et al. (2012) track the geographic spread of neologisms (e.g. ‘bruh’, ‘af’, ’-__-’) from city to city in the United States using Twitter data collected between 6/2009 and 5/2011. \n\n\nBychkovska and Lee (2017) investigates possible differences between L1-English and L1-Chinese undergraduate students’ use of lexical bundles, multiword sequences which are extended collocations (e.g. ‘as the result of’), in argumentative essays. \n\n\nJaeger and Snider (2007) use a corpus study to investigate the phenomenon of syntactic persistence, the increased tendency for speakers to use a particular syntactic form over an alternate when the syntactic form has been recently processed. \n\n\nVoigt et al. (2017) explore potential racial disparities in officer respect in police body camera footage. \n\n\nOlohan (2008) investigate the extent to which translated texts differ from native texts do to ‘explicitation’.\n\n\nSo too, text analysis is used in a variety of other fields where insight from language is sought, as seen in Example 1.3.\n\nExample 1.3 Language-related fields\n\n\n\nKloumann et al. (2012) explore the extent to which languages are positively, neutrally, or negatively biased. \n\n\nMosteller and Wallace (1963) provide a method for solving the authorship debate surrounding The Federalist papers. \n\n\nConway et al. (2012) investigate whether the established drop in language complexity of rhetoric in election seasons is associated with election outcomes.\n\n\n\n\n\n\n\n\n Consider this\nLanguage is a key component of human communication and interaction. What are some other areas of research in and outside linguistics that you think could be explored using text analysis methods?\n\n\n\nThese studies in Examples 1.1, 1.2, and 1.3 are just a few illustrations of the contributions of text analysis as the primary method to gain a deeper understanding of language structure, function, variation, and acquisition. As a method, however, text analysis can also be used to support other research methods. For example, text analysis can be used collect data, generate authentic materials, provide linguistic annotation, to generate hypotheses, for either qualitative and/ or quantitative approaches. Together these efforts contribute to a more robust language science by incorporating externally valid data and providing methodological triangulation (Francom 2022).\nIn sum, the applications highlighted in this section underscore the versatility of text analysis as a research method. Whether it be in the public sphere or in academia, text analysis methods furnish a set of powerful tools for gaining insight from language data."
  },
  {
    "objectID": "text-analysis.html#summary",
    "href": "text-analysis.html#summary",
    "title": "1  Text analysis in context",
    "section": "Summary",
    "text": "Summary\nIn this chapter I started with some general observations about the difficulty of making sense of a complex world. The standard approach to overcoming inherent human limitations in sense making is science. In the 21st century the toolbelt for doing scientific research and exploration has grown in terms of the amount of data available, the statistical methods for analyzing the data, and the computational power to manage, store, and share the data, methods, and results from quantitative research. The methods and tools for deriving insight from data have made significant inroads in and outside academia, and increasingly figure in the quantitative investigation of language. Text analysis is a particular branch of this enterprise based on observational data from real-world language and is used in a wide variety of fields.\nIn the end I hope that you enjoy this exploration into text analysis. Although the learning curve at times may seem steep –the experience you will gain will not only improve your data literacy, research skills, and programmings skills but also enhance your appreciation for the richness of human language and its important role in our everyday lives."
  },
  {
    "objectID": "text-analysis.html#actitivies",
    "href": "text-analysis.html#actitivies",
    "title": "1  Text analysis in context",
    "section": "Actitivies",
    "text": "Actitivies\nThe following activities build on your introduction to R and Quarto in the previous chapter. In these activities you will uncover more features offered by Quarto which will enhance your ability to produce comprehensive reproducible research documents. You will apply the capabilities of Quarto in a practical context conveying the objectives and key discoveries from a primary research article.\n\n\n\n\n\n\n Recipe\n\nWhat: Literate programming IIHow: Read Recipe 1 and participate in the Hypothes.is online social annotation.Why: To explore additional functionality in Quarto: numbered sections, table of contents, in-line citations and a document-final references list, and cross-referenced tables and figures.\n\n\n\n\n\n\n\n\n\n Lab\n\nWhat: Literate programming IIHow: Clone, fork, and complete the steps in Lab 1.Why: To put into practice Quarto functionality to communicate the aim(s) and main finding(s) from a primary research article and to interpret a related plot."
  },
  {
    "objectID": "text-analysis.html#questions",
    "href": "text-analysis.html#questions",
    "title": "1  Text analysis in context",
    "section": "Questions",
    "text": "Questions\n\n\n\n\n\n\n\nConceptual questions\n\nHow has scientific research and exploration changed in the 21st century?\nWhat are the three basic skill sets that make up the data science toolbelt?\nWhat are the benefits of reproducible research in data science?\nExplain the trade-offs between experimental and observational data collection methods.\nWhat is text analysis and how is it used in various fields?\nIdentify research in an area of interest in linguistics that has taken a quantitative approach to text analysis.\nIn your own words, define literate programming?\nWhat are the benefits of literate programming?\nWhat are the benefits of using R and Quarto for literate programming?\n\n\n\n\n\n\n\n\n\n\nTechnical exercises\n\nCreate a literate programming document in Quarto. Edit the yaml header to reflect details of the work and add your work with the data types in R to code chunks. Add, commit, and push the project to GitHub.\nIn the Quarto document, explore using R to create vectors and explore their properties.\nExplore the following resources and with the goal to identify a quantitative text analysis project. Rpubs, GitHub, DataCamp, Kaggle, R-bloggers.\n\n … more to come …\n\n\n\n\n\n\n\n\n\n\nBao, Wang, Ning Lianju, and Kong Yue. 2019. “Integration of Unsupervised and Supervised Machine Learning Algorithms for Credit Risk Assessment.” Expert Systems with Applications 128 (August): 301–15. https://doi.org/10.1016/j.eswa.2019.02.033.\n\n\nBresnan, Joan. 2007. “A Few Lessons from Typology.” Linguistic Typology 11 (1): 297–306.\n\n\nBychkovska, Tetyana, and Joseph J. Lee. 2017. “At the Same Time: Lexical Bundles in L1 and L2 University Student Argumentative Writing.” Journal of English for Academic Purposes 30 (November): 38–52. https://doi.org/10.1016/j.jeap.2017.10.008.\n\n\nCampbell, Lyle. 2001. “The History of Linguistics.” In The Handbook of Linguistics, edited by Mark Aronoff and Janie Rees-Miller, 81–104. Blackwell Handbooks in Linguistics. Blackwell Publishers.\n\n\nChambers, John M. 2020. “S, r, and Data Science.” Proceedings of the ACM on Programming Languages 4 (HOPL): 1–17. https://doi.org/10.1145/3386334.\n\n\nConway, Lucian Gideon, Laura Janelle Gornick, Chelsea Burfeind, Paul Mandella, Andrea Kuenzli, Shannon C. Houck, and Deven Theresa Fullerton. 2012. “Does Complex or Simple Rhetoric Win Elections? An Integrative Complexity Analysis of u.s. Presidential Campaigns.” Political Psychology 33 (5): 599–618. https://doi.org/10.1111/j.1467-9221.2012.00910.x.\n\n\n“Data Never Sleeps 7.0 Infographic.” 2019. https://www.domo.com/learn/infographic/data-never-sleeps-7.\n\n\nDesjardins, Jeff. 2019. “How Much Data Is Generated Each Day?” Visual Capitalist.\n\n\nDonoho, David. 2017. “50 Years of Data Science.” Journal of Computational and Graphical Statistics 26 (4): 745–66. https://doi.org/10.1080/10618600.2017.1384734.\n\n\nEisenstein, Jacob, Brendan O’Connor, Noah A Smith, and Eric P Xing. 2012. “Mapping the Geographical Diffusion of New Words.” Computation and Language, 1–13. https://doi.org/10.1371/journal.pone.0113114.\n\n\nFrancom, Jerid. 2022. “Corpus Studies of Syntax.” In The Cambridge Handbook of Experimental Syntax, edited by Grant Goodall, 687–713. Cambridge Handbooks in Language and Linguistics. Cambridge University Press.\n\n\nGilquin, Gaëtanelle, and Stefan Th Gries. 2009. “Corpora and Experimental Methods: A State-of-the-Art Review.” Corpus Linguistics and Linguistic Theory 5 (1): 1–26. https://doi.org/10.1515/CLLT.2009.001.\n\n\nGomez-Uribe, Carlos A., and Neil Hunt. 2015. “The Netflix Recommender System: Algorithms, Business Value, and Innovation.” ACM Transactions on Management Information Systems (TMIS) 6 (4): 1–19.\n\n\nHay, Jennifer. 2002. “From Speech Perception to Morphology: Affix Ordering Revisited.” Language 78 (3): 527–55.\n\n\nHicks, Stephanie C., and Roger D. Peng. 2019. “Elements and Principles for Characterizing Variation Between Data Analyses.” arXiv. https://doi.org/10.48550/arXiv.1903.07639.\n\n\nJaeger, T Florian, and Neal Snider. 2007. “Implicit Learning and Syntactic Persistence: Surprisal and Cumulativity.” University of Rochester Working Papers in the Language Sciences 3 (1).\n\n\nKloumann, IM, CM Danforth, KD Harris, and CA Bliss. 2012. “Positivity of the English Language.” PloS One.\n\n\nLewis, Michael. 2004. Moneyball: The Art of Winning an Unfair Game. WW Norton & Company.\n\n\nManning, Christopher. 2003. “Probabilistic Syntax.” In Probabilistic Linguistics, edited by Bod, Jennifer Hay, and Jannedy, 289–341. Cambridge, MA: MIT Press.\n\n\nMosteller, Frederick, and David L Wallace. 1963. “Inference in an Authorship Problem.” Journal of the American Statistical Association 58 (302): 275–309. https://www.jstor.org/stable/2283270.\n\n\nOlohan, Maeve. 2008. “Leave It Out! Using a Comparable Corpus to Investigate Aspects of Explicitation in Translation.” Cadernos de Tradução, 153–69.\n\n\nRiehemann, Susanne Z. 2001. “A Constructional Approach to Idioms and Word Formation.” PhD thesis, Stanford.\n\n\nRoediger, H. L. L, and K. B. B McDermott. 2000. “Distortions of Memory.” The Oxford Handbook of Memory, 149–62.\n\n\nSaxena, Shweta, and Manasi Gyanchandani. 2020. “Machine Learning Methods for Computer-Aided Breast Cancer Diagnosis Using Histopathology: A Narrative Review.” Journal of Medical Imaging and Radiation Sciences 51 (1): 182–93.\n\n\nTalarico, Jennifer M., and David C. Rubin. 2003. “Confidence, Not Consistency, Characterizes Flashbulb Memories.” Psychological Science 14 (5): 455–61. https://doi.org/10.1111/1467-9280.02453.\n\n\nVoigt, Rob, Nicholas P. Camp, Vinodkumar Prabhakaran, William L. Hamilton, Rebecca C. Hetey, Camilla M. Griffiths, David Jurgens, Dan Jurafsky, and Jennifer L. Eberhardt. 2017. “Language from Police Body Camera Footage Shows Racial Disparities in Officer Respect.” Proceedings of the National Academy of Sciences 114 (25): 6521–26.\n\n\nWulff, S, A Stefanowitsch, and Stefan Th. Gries. 2007. “Brutal Brits and Persuasive Americans.” Aspects of Meaning."
  },
  {
    "objectID": "text-analysis.html#footnotes",
    "href": "text-analysis.html#footnotes",
    "title": "1  Text analysis in context",
    "section": "",
    "text": "As of 22 July 2021, there are 6,341,359 articles in the English Wikipedia containing over 3.9 billion words occupying around 19 gigabytes of information.↩︎\nFor reference, Common Crawl has millions of gigabytes collected since 2008.↩︎"
  }
]