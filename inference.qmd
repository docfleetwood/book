---
execute: 
  echo: true
---

# Inference {#sec-inference}

```{r}
#| label: setup-options
#| child: "_common.qmd"
#| cache: false
```

::: {.callout-caution title="Caution"}
Under development.
:::

<!--

Content:

Exercises:

- [ ] add concept questions to Activities
- [ ] add exercises to Activities
- [ ] add thought questions/ case studies to prose sections

Formatting:

-->

> People generally see what they look for, and hear what they listen for.
>
> --- Harper Lee, To Kill a Mockingbird


- [ ] {{< fa wrench >}} update outcomes

::: {.callout}
**{{< fa regular list-alt >}} Outcomes**

<!-- Remember and understand verbs: https://tips.uark.edu/blooms-taxonomy-verb-chart/ -->


- what are the three main types of inferential analysis approaches?
- how does the informational value of the dependent variable relate to the statistical approach adopted?
- how to descriptive, statistical, and evaluative steps work together to produce the reliable results?
:::

```{r}
#| label: inference-data-packages
#| echo: false
#| message: false
# Packages

pacman::p_load(broom, effectsize, report, janitor, skimr, languageR)
```

In this chapter we consider approaches to deriving knowledge from information which can be generalized to the population from which the data is sampled. This process is known as statistical inference. The discussion here implements descriptive assessments, statistical tests, and model evaluation procedures for a series of contexts which are common in the analysis of corpus-based data. The chapter is structured into three main sections which correspond to the number of variables included in the statistical procedure. Each of these sections includes a subsection dedicated to the informational value of the dependent variable; the variable whose variation is to be explained.

<!-- 
- [ ] Add Bresnan citation for questions to interrogate `dative`?
- [ ] Add Tottie citation for questions to interrogate `sdac_disfluencies`?

-->

::: {.callout}
**{{< fa terminal >}} Lessons**

<!-- Remember and understand verbs: https://tips.uark.edu/blooms-taxonomy-verb-chart/ -->

<!-- 
- [ ] Update lesson name, 
- [ ] update lesson purpose
-->

**What**: {{< fa wrench >}} TBD \
**How**: In the R Console pane load `swirl`, run `swirl()`, and follow prompts to select the lesson.\
**Why**: {{< fa wrench >}} TBD
:::

## Orientation {#sec-ida-orientation}

The aim of this section is to provide an overview of inferential data analysis (IDA) and to introduce the three main types of inferential analysis approaches that are most common in text analysis research. 

... overview of this section ... 

### Research goal {#sec-ida-research-goal}

The goal of IDA is to detect, explain, and generalize. The relationship to detect is predtermined by the hypothesis. In this situation the researcher will have identified an outcome variable (often known as a dependent variable) and often a predictor or set of predictor variables (independent variables) that are directly linked to the hypothesis in a way that the results of the statistical analysis allows to either confirm that null hypothesis or reject it. Explaining the results of the statistical analysis is key to summarizing the findings and how they relate to the hypothesis. To the extent that the text sample used is representative of the population from which the data is sampled, the results can be generalized to the population. IDA is not an exploratory endeavor and as such that anlysis is performed on the data in a much more conservative manner than is the case in exploratory data analysis (EDA) or predictive data analysis (PDA).

### Approach {#sec-ida-approach}

<!-- Note:  
This section should cover the following:
- Workflow: Identify, Inspect, Interrogate, Interpret
  - Add a few words on the common aspects with other research approaches
  - And point out the differences (use of data, results, interpretation, etc.)
-->

- The dependent variable and predictor variables are fixed (tied to hypothesis)
- Descriptive statistics and visualizations (plots or tables) are used to summarize the data and provide a preliminary assessment of the data
- Inferential statistics are used to test the hypothesis

<!-- Workflow -->

| Step | Name | Description |
|:-----|:-----|:------------|
| 1 | Identify | Identify the informational value of the dependent and independent variable(s). |
| 2 | Inspect | Assess the distribution of the independent and dependent variables with the appropriate descriptive statistics and visualizations. |
| 3 | Interrogate | Apply the appropriate statistical test to the data. |
| 4 | Interpret | Review the results of the statistical test and interpret the results in the context of the hypothesis. |

: Workflow for inferential data analysis {#tbl-ida-workflow tbl-colwidths="[10, 20, 70]" .striped}

... description of the workflow ...

<!-- 

**Excerpts from Approaching Analysis:**

Statistical power and informational value

In most cases it is preferred to use the highest informational of a variable. Simplifying data results in a loss of information --which will result in a loss of information and hence statistical power which may lead to results that obscure meaningful patterns in the data [@Baayen2004].

Key methodological restrictions: hypothesis formulation and sample data alignment 

Given the fact that this approach aims at making claims that can be generalized to the larger population, the IDA approach has the most rigorous set of methodological restrictions. First and foremost of these is the fact that a testable hypothesis must be formulated *before* research begins. The hypothesis guides the collection of data, the organization of the data into a dataset and the transformation, selection of the variables to be used to address the hypothesis, and the interpretation of the results. To conduct an analysis and then draw a hypothesis which conforms to the results is known as "Hypothesis After Result is Known" (HARKing) [@Kerr1998] and this practice violates the principles of significance testing. A second key stipulation is that the reliability of the sample data, the corpus in text analysis, to provide evidence to test the hypothesis must be representative of the population. A corpus used in a study which is misaligned with the hypothesis undermines the ability of the researcher to make valid claims about the population. In essence, IDA is only as good as the primary data is is based on.

Use of data: p-hacking

In contrast to the other two analysis methods we will cover, the data in IDA is only used once. That is to say, that the entire dataset is used a single time to statistically interrogate the relationship(s) of interest. The resulting confidence metrics (p-values, etc.) are evaluated and the findings are interpreted. The practice of running multiple tests until a statistically significant result is found is called "p-hacking" [@Head2015] and like HARKing (described earlier) violates statistical hypothesis testing practice. For this reason it is vital to identify your statistical approach from the outset of your research project.

P-values: interpretation and problems

Now let's consider how to approach interpreting the results from a statistical test. As I have now made reference to multiple times, the results of statistical procedure in hypothesis testing will result in a confidence metric. The most standard and widely used of these confidence metrics is the p-value. The p-value provides a probability that the results of our statistical test could be explained by the null hypothesis. When this probability crosses above the threshold of .05, the result is considered statistically significant, otherwise we have a 'null result' (i.e. non-significant). However, this sets up a binary distinction that can be problematic. On the one hand what is one to do if a test returns a p-value of .051 or something 'marginally significant'? According to standard practice these results would not be statistically significant. But it is important to note that a p-value is sensitive to the sample size. A small sample may return a non-significant result, but a larger sample size with the same underlying characteristics may very well return a significant result. On the other hand, if we get a statistically significant result, do we move on --case closed? As I just pointed out the sample size plays a role in finding statistically significant results, but that does not mean that the results are 'important' for even small effects in large samples can return a significant p-value.

Type I and Type II error

It is important to underscore that the purpose of IDA is to draw conclusions from a dataset which are generalizable to the population. These conclusions require that there are rigorous measures to ensure that the results of the analysis do not overgeneralize (suggest there is a relationship when there is not one) and balance that with the fact that we don't want to undergeneralize (miss the fact that there is an relationship in the population, but our analysis was not capable of detecting it). Overgeneralization is known as **Type I error** or false positive and undergeneralization is a **Type II error** or false negative.

Uncertainty measures: effect size and CIs

For these reasons it is important to calculate the size and magnitude of the result to gauge the uncertainty of our result in standardized, sample size-independent way. This is performed by analyzing the **effect size** and reporting a **confidence interval (CI)** for the results. The wider the CI the more uncertainty surrounds our statistical result, and therefore the more likely that our significant p-value could be the result of Type I error. A non-significant p-value and large effect size could be the result of Type II error. In addition to vetting our p-value, the CI and effect size can help determine if a significant result is reliable and 'important'. Together effect size and CIs aid in our ability to realistically interpret confidence metrics in statistical hypothesis testing.

Recap and introduction to the structure of the analysis subsection. 

- Categorical dependent variable
  - Categorical/ continuous independent variable(s)
    - Descriptive assessment
      - 0-1 categorical independent variable: Tables summary statistics (contingency table)
      - Continuous independent variable(s): Plots and summary statistics (boxplots, histograms, etc.)
    - Statistical interrogation
      - Chi-square (dependent and one independent variable)
      - Logistic regression (dependent and one or more independent variables)
    - Evaluation of results
      - p-value
      - Confidence intervals
      - Effect size
- Continuous dependent variable
  - Continuous/ categorical independent variable(s)
    - Descriptive assessment
      - Tables, plots, and summary statistics
    - Statistical interrogation
      - Correlation
      - Linear regression
    - Evaluation of results
      - p-value
      - Confidence intervals
      - Effect size

-->

The type of analysis that is performed depends most heavily on the informational value of the dependent variable. The informational value of the dependent variable is determined by the type of data that is collected. Secondly, the number and informational types of the independent variables (predictor variables) also play a role in determining the type of analysis that is performed. 

- Categorical dependent variable
    - Descriptive statistics
        - Frequency
        - Proportion
        - Confidence intervals
    - Inferential statistics
        - Chi-square
        - Logistic regression
- Continuous dependent variable
    - Descriptive statistics
        - Mean
        - Standard deviation
        - Confidence intervals
    - Inferential statistics
        - Correlation
        - Linear regression

Prerequisites:
- A testable hypothesis (covering the outcome space, i.e. null and alternative hypotheses).
- A data set that aligns with the population targeted to generalize to. 
- A operationalized dependent and independent variable(s) that are tied to the hypothesis. 

<!--- Move the sections above (Approaching analysis)/ Keep the sections below -->

- Identify the informational value of the dependent and independent variable(s).
- Assess the distribution of the independent and dependent variables with the appropriate descriptive statistics and visualizations.
- Choose an appropriate statistical test based on the informational value and distribution of the dependent and independent variables.
- Apply transformations to the data as needed to meet the assumptions of the statistical tests.

- Apply the appropriate statistical test to the data:
  - Categorical dependent variable
    - Chi-square (dependent and one independent variable)
    - Logistic regression (dependent and one or more independent variables)
  - Continuous dependent variable
    - Correlation (dependent and one independent variable)
    - Linear regression (dependent and one or more independent variables)
- Assess the results of the statistical test (p-value, confidence intervals, effect size)

Review the results of the statistical test and interpret the results in the context of the hypothesis.

## Analysis {#sec-ida-analysis}

<!-- Goals of this section -->


<!-- Research questions -->

<!-- Approach -->

`infer` package. 

| Scenario | Dependent variable | Independent variable(s) | Statistical test |
|:---------|:-------------------|:------------------------|:-----------------|
| Univariate | Categorical | None | Difference in proportions |
| Bivariate | Categorical | Categorical | Difference in proportions |
| Bivariate | Categorical (3+) | Categorical (3+) | Chi-square |
| Multivariate | Categorical | Categorical or Numeric (2+) | Logistic regression |
| Univariate | Numeric | None | Mean |
| Bivariate | Numeric | Numeric | Correlation |
| Bivariate | Numeric | Categorical | Difference in means |
| Multivariate | Numeric | Numeric or Categorical (2+) | Linear regression |

: Statistical tests for inferential data analysis {#tbl-ida-statistical-tests tbl-colwidths="[10, 30, 30, 20]" .striped}


<!-- Datasets -->

> For this discussion two datasets will be used as the base to pose various questions to submit for interrogation. It is of note that the questions in the subsequent sections are posited to highlight various descriptive, statistic, and evaluation procedures and do not reflect the standard approach to hypothesis testing which assumes that the null and alternative hypotheses are developed at the outset of the research project.

- `dative` [@R-languageR]
  - dataset contains 3,263 observations and 15 columns. 
  - more information `?languageR::dative`
- `fillers` [@SWDA2008]
  - dataset contains X observations and X columns.

> The process for each inferential data analysis in this section will include three steps: (1) descriptive assessment, (2) statistical interrogation, and (3) evaluation of the results.

<!-- Setup: packages/ options/ data -->

### Categorical {#sec-ida-categorical}

<!-- The goal of this ....
set up the analysis questions, hypotheses, and datasets 
-->

In the IDA, I will need to demonstrate various statistical designs and analyses. The `dative_ida` dataset is a subset of the `dative` dataset. 

The response variable is the `realization_of_rcp` which has two levels NP and PP. PP refers to when the recipient of a ditranstive verb appears in the canonical position for English dative constructions. The NP is when the recipient appears as an NP . 

For a bit more context, a dative is the phrase which reflects the entity that takes the recipient role in a ditransitive clause. In English, the recipient (dative) can be realized as either a prepositional phrase (PP) as seen in (1) or as a noun phrase (NP) as seen in (2) below. 

Example utterances: 

1. John gave the book [to Mary ~PP~].
2. John gave [Mary ~NP~] the book.

Together these two syntactic options are known as the Dative Alternation.

The predictor variables I have included in this dataset are:

- `modality`: either written or spoken
- `length_of_rcp`: the length of the recipient clause (in words)
- `length_of_thm`: the length of the theme clause (in words)

It will allow me to demonstrate the following statistical designs and analyses:

- Univariate analysis
  - Difference in proportion
    - `realization_of_rcp` ~ NULL
- Bivariate analysis
  - Difference in proportions
    - `realization_of_rcp` ~ `modality`
- Multivariate analysis
  - Logistic regression
    - `realization_of_rcp` ~ `modality` + `length_ratio`*

\* `length_ratio` is the ratio of the length of the recipient clause to the length of the theme clause.

I will use a simulation-based approach to demonstrate the statistical designs and analyses using the `infer` package. The `infer` package is a tidyverse-friendly framework for statistical inference. The advantage of using simulation-based inference over theory-based inference is that it is more intuitive, easier to implement, and provides a better conceptual understanding of the statistical designs and analyses.

I'll start by loading the `dative_ida` dataset and the libraries and then go through each of the statistical designs and analyses. In @exm-ida-cat-setup, we see the code. 

::: {#exm-ida-cat-setup}
```{r}
#| label: ida-cat-setup-show
#| eval: false

# Load packages
library(infer)      # for statistical inference
library(effectsize) # for effect size interpretation
library(janitor)    # for cross-tabulation
library(skimr)      # for descriptive statistics

# Load dataset
dative_df <- 
  read_csv("../data/derived/dative.csv") |> 
  # Convert to factors all character variables 
  mutate(across(where(is.character), factor))

# Preview
dative_df |> glimpse()
```

```{r}
#| label: ida-cat-setup-run
#| echo: false
#| message: false

# Load packages
library(infer)      # for statistical inference
library(effectsize) # for effect size interpretation
library(janitor)    # for cross-tabulation
library(skimr)      # for descriptive statistics

# Load dataset
dative_df <- 
  read_csv("data/dative_ida.csv") |> 
  # Convert to factors all character variables 
  mutate(across(where(is.character), factor))

# Preview
dative_df |> glimpse()
```
:::

The data dictionary for this dataset can be seen in @tbl-ida-cat-dictionary.

```{r}
#| label: tbl-ida-cat-dictionary
#| tbl-cap: "Data dictionary for the `dative_ida` dataset."
#| echo: false
#| message: false

read_csv("data/dative_ida_dd.csv") |> 
  kable() |> 
  kable_styling()
```

- [ ] Add descriptive assessment? `skim()`?



#### Univariate analysis {#sec-ida-cat-univariate}

The univariate analysis is the simplest statistical design and analysis. It includes only one variable. The goal is to describe the distribution of the levles of the variable. The `realization_of_rcp` variable has two levels: NP and PP. A potential research question is: 

- Is there a difference in the proportion of NP and PP realizations of the recipient clause?

This question can be answered using a difference in proportions test. The null hypothesis is that there is no difference in the proportion of NP and PP realizations of the recipient clause. The alternative hypothesis is that there is a difference in the proportion of NP and PP realizations of the recipient clause.

Before we get into statistical analysis, it is always a good idea to cross-tabulate or visualize the question, depending on the complexity of the relationship. In @exm-ida-cat-univariate-tbl, we see the code the shows the distribution of the levels of the `realization_of_rcp` variable.

::: {#exm-ida-cat-univariate-tbl}
```{r}
#| label: tbl-ida-cat-univariate
#| tbl-cap: "Distribution of the levels of the `realization_of_rcp` variable."

# Cross-tabulation of `realization_of_rcp`
dative_df |> 
  tabyl(realization_of_rcp) |> 
  adorn_pct_formatting(digits = 2) |>
  kable() |>
  kable_styling()
```
:::

From @tbl-ida-cat-univariate, we see that the proportion of NP realizations of the recipient clause is higher than the proportion of PP realizations of the recipient clause. However, we cannot conclude that there is a difference in the proportion of NP and PP realizations of the recipient clause. We need to conduct a statistical test to determine if the difference is statistically significant.

To determine if the distribution of the levels of the `realization_of_rcp` variable is different from what we would expect if the null hypothesis were true, we need to calculate the difference observed in the sample and compare it to the differences observed in many samples where the null hypothesis is true. 

First, let's calculate the proportion of NP and PP realizations of the recipient clause in the sample. We turn to the `specify()` function from the `infer` package to specify the variable of interest. In this case, we only have the response variable. Furthermore, the argument `success` specifies the level of the response variable that we will use as the 'success'. The term 'success' is used because the `specify()` function was designed for binomial variables where the levels are 'success' and 'failure', as seen in @exm-ida-cat-specify.

::: {#exm-ida-cat-specify}
```{r}
#| label: ida-cat-specify

# Specify the variable of interest
dative_spec <- 
  dative_df |> 
  specify(
    response = realization_of_rcp,
    success = "NP"
  )

dative_spec
```
:::

The `dative_spec` is a data frame with attributes which are used by the `infer` package to maintain information about the statistical design for the analysis. In this case, we only have information about what the response variable is. 

The next step to calculating the observed proportion is to calculate the proportion statistic. The `calculate()` function from the `infer` package is used to calculate the proportion statistic. The `calculate()` function takes the `dative_spec` data frame as an argument. The `calculate()` function returns a data frame with the proportion statistic in the `stat` column, as seen in @exm-ida-cat-calculate.

::: {#exm-ida-cat-calculate}
```{r}
#| label: ida-cat-calculate

# Calculate the proportion statistic
dative_obs <- 
  dative_spec |> 
  calculate(stat = "prop")

dative_obs
```
:::

Note, that the observed statistic, proportion, is the same as the proportion we calculated in @tbl-ida-cat-univariate. In such a simple example, the summary statistic and the observed statistic are the same. But this simple example shows how choosing the 'success' level of the response variable is important. If we had chosen the 'PP' level as the 'success' level, then the observed statistic would be the proportion of PP realizations of the recipient clause. There is nothing wrong with choosing the 'PP' level as the 'success' level, but it would change the interpretation of the observed statistic.

Now that we have the observed statistic, our goal will be to determine if the observed statistic is different from what we would expect if the null hypothesis were true. To do this, we need to simulate many samples where the null hypothesis is true. Simulation means that we will randomly sample from the `dative_df` data frame many times. The only addition decision we need to make is how the sampling takes place. Since `realization_of_rcp` is a binomial variable, we need to hypothesize that the null hypothesis is that there is no difference in the proportion of NP and PP realizations of the recipient clause. This means that the proportion of NP realizations of the recipient clause is the same as the proportion of PP realizations of the recipient clause. In other words, we are expecting the proportion of NP realizations of the recipient clause to be 0.5. Then we will sample from the `dative_df` data frame many times and calculate the proportion statistic for each sample. The pipline for generating this null hypothesis distribution is seen in @exm-ida-cat-null-hypothesis.

::: {#exm-ida-cat-null-hypothesis}
```{r}
#| label: ida-cat-null-hypothesis

# Generate the null hypothesis distribution
dative_null <-
  dative_spec |> 
  hypothesize(null = "point", p = 0.5) |>
  generate(reps = 1000, type = "draw") |>
  calculate(stat = "prop")

dative_null
```
:::

The result of @exm-ida-cat-null-hypothesis is a data frame with as many rows as there are samples. Each row contains the proportion statistic for each sample drawn from the hypothesized distribution that the proportion of NP realizations of the recipient clause is 0.5.

To appreciate the null hypothesis distribution, we can visualize it using a histogram. The `infer` package provides a convenient `visualize()` function for visualizing distributions, as seen in @exm-ida-cat-null-hypothesis.

::: {#exm-ida-cat-null-hypothesis}
```{r}
#| label: fig-ida-cat-null-hypothesis
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause."
#| fig-height: 4

# Visualize the null hypothesis distribution
dative_null |> 
  visualize()
```
:::

On the x-axis is the proportion statistic of NP realizations of the recipient clause that we would expect if the null hypothesis were true. For the 1,000 samples, the proportion statistic ranges from `r round(range(dative_null$stat), 2)`. Importantly we can appreciate that the most of the proportion statistics are around 0.5, which is what we would expect if the null hypothesis were true. But there is variation, as we would also expect. 

Why would we expect variation? Consider the following analogy. If we were to flip a fair coin 10 times, we would expect to get 5 heads and 5 tails. But this doesn't always happen. Sometimes we get 6 heads and 4 tails. Sometimes we get 7 heads and 3 tails, and so on. As the number of flips increases, however, we would expect the proportion of heads to be closer to 0.5, but there would still be variation. The same is true for the null hypothesis distribution. As the number of samples increases, we would expect the proportion of NP realizations of the recipient clause to be closer to 0.5, but there would still be variation. The question is whether the observed statistic we obtained from our data, in @exm-ida-cat-calculate, is within some level of variation that we would expect if the null hypothesis were true.

Let's visualize the observed statistic on the null hypothesis distribution, as seen in @fig-ida-cat-null-hypothesis-obs, to gauge whether the observed statistic is within some level of variation that we would expect if the null hypothesis were true.

::: {#exm-ida-cat-null-hypothesis-obs}
```{r}
#| label: fig-ida-cat-null-hypothesis-obs
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause with the observed statistic."
#| fig-height: 4

# Visualize the null hypothesis distribution with the observed statistic
dative_null |> 
  visualize() + # note we are adding a visual layer `+`
  geom_vline(
    data = dative_obs,      # the data is the observed statistic
    aes(xintercept = stat), # the x-axis is the proportion statistic
    color = "red",          # the color of the line is red
    linewidth = 2           # the size of the line is 2
  )
```
:::

Just from a visual inspection, we can see that the observed statistic lies far away from the null distribution, far right of the right tail. This suggests that the observed statistic is not within some level of variation that we would expect if the null hypothesis were true. 

But we need to quantify this. We need to calculate the probability of observing the observed statistic or a more extreme statistic if the null hypothesis were true. This is called the p-value. The p-value is calculated by counting the number of samples in the null hypothesis distribution that are more extreme than expected within some level of uncertainty. 95% is the most common level of uncertainty, which is called the alpha level. The alpha level is the probability of rejecting the null hypothesis when it is true. The alpha level is typically set to 0.05 in the social sciences. This means that if the p-value is less than 0.05, then we reject the null hypothesis. If the p-value is greater than 0.05, then we fail to reject the null hypothesis.

The `shade_p_value()` function from the `infer` package will plot our observed statistic and shade the sample statistics that fall within the alpha level, as seen in @exm-ida-cat-null-hypothesis-obs-pval.

::: {#exm-ida-cat-null-hypothesis-obs-pval}
```{r}
#| label: fig-ida-cat-null-hypothesis-obs-pval
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause with the observed statistic and p-value."
#| fig-height: 4

# Visualize the null hypothesis distribution with the observed statistic and p-value

dative_null |> 
  visualize() + 
  shade_p_value(
    dative_obs, # the observed statistic
    direction = "two-sided", # the direction of the alternative hypothesis
  )
```
:::

The two plots we've generated look identical, we cannot appreciate the shading of the p-value range, as our statistic is so far away from the null hypothesis distribution. But if we were to change the observed statistic, to say $0.51$, we would see the shading, as seen in @exm-ida-cat-null-hypothesis-obs-pval-alpha.

::: {#exm-ida-cat-null-hypothesis-obs-pval-alpha}
```{r}
#| label: fig-ida-cat-null-hypothesis-obs-pval-alpha
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause with the observed statistic and p-value with alpha level of 0.1."
#| fig-height: 4

# Visualize the null hypothesis distribution with the observed statistic and p-value
dative_null |> 
  visualize() + 
  shade_p_value(
    obs_stat = 0.51, # the observed statistic
    direction = "two-sided", # the direction of the alternative hypothesis
  )
```
:::

Now we can appreciate the shading of the p-value range. We can now talk about the "two-sided" direction we used. The direction of the alternative hypothesis is important because it determines the p-value range. The "two-sided" direction means that we are interested in the proportion of NP realizations of the recipient clause being different from 0.5. If we were only interested in the proportion of NP realizations of the recipient clause being greater than 0.5, then we would use the "greater" direction. If we were only interested in the proportion of NP realizations of the recipient clause being less than 0.5, then we would use the "less" direction.

Let's visualize our hypothetical observed statistic of 0.51 on the null hypothesis distribution were the alternative hypothesis is that the proportion of NP realizations of the recipient clause is greater than 0.5, as seen in @exm-ida-cat-null-hypothesis-obs-pval-greater.

::: {#exm-ida-cat-null-hypothesis-obs-pval-greater}
```{r}
#| label: fig-ida-cat-null-hypothesis-obs-pval-greater
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause with the observed statistic and p-value with alpha level of 0.1 and alternative hypothesis that the proportion of NP realizations of the recipient clause is greater than 0.5."
#| fig-height: 4

# Visualize the null hypothesis distribution with the observed statistic and p-value
dative_null |> 
  visualize() + 
  shade_p_value(
    0.51, # the observed statistic
    direction = "greater", # the direction of the alternative hypothesis
  )
```
::: 

As you can now see, the p-value range is dependent on the null hypothesis distribution and the direction of the alternative hypothesis as well as the number of samples. The more samples we have, the more precise the p-value range will likely be.

With `infer` we can calculate the p-value using the `get_p_value()` function. Let's calculate the p-value for our observed statistic and the hypothetical observed statistic of 0.51, as seen in @exm-ida-cat-p-value.

::: {#exm-ida-cat-p-value}
```{r}
#| label: ida-cat-p-value

# Calculate the p-value (observed statistic)
dative_null |> 
  get_p_value(
    dative_obs, # the observed statistic
    direction = "two-sided" # the direction of the alternative hypothesis
  )

# Calculate the p-value (hypothetical observed statistic)
dative_null |> 
  get_p_value(
    0.51, # the observed statistic
    direction = "two-sided" # the direction of the alternative hypothesis
  )
```
:::

The p-value for our observed statistic is reported as $0$, with a warning that the p-value estimate is contingent on the number of samples we generate in the null distribution. 1,000 is a reasonable number of samples, so we likely have a statistically significant result at the alpha level of 0.05. 

The p-value for our hypothetical observed statistic of 0.51 is reported as larger than $0.05$, which provides evidence that our hypothetical observed statistic is not sufficiently different from the variation expected in the null distribution to reject the null hypothesis, i.e. we would not have a significant result at the alpha level of 0.05.

The p-value is one, traditionally very common, estimate of uncertainty. Another estimate of uncertainty is the confidence interval. The confidence interval is the range of values for our test statistic that we would expect the true statistic value to fall within some level of uncertainty. Again, 95% is the most common level of uncertainty. The upper and lower bounds of this range are called the confidence limits for the test statistic. The confidence interval is calculated by calculating the confidence limits for the test statistic for many samples from the observed data. But instead of generating a null hypothesis distribution, we generate a distribution based on resampling from the observed data. This is called the bootstrap distribution. The bootstrap distribution is generated by resampling from the observed data, with replacement, many times. This simulates the process of sampling from the population many times. Each time the test statistic is generated for each sample. The confidence limits are the 2.5th and 97.5th percentiles of the bootstrap distribution. The confidence interval is the range between the confidence limits.

In @exm-ida-cat-confidence-interval, we see the code for calculating the confidence interval for our observed statistic.

::: {#exm-ida-cat-confidence-interval}
```{r}
#| label: ida-cat-confidence-interval

# Generate boostrap distribution
dative_boot <- 
  dative_spec |> 
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "prop")

dative_ci <- 
  dative_boot |> 
  get_confidence_interval(level = 0.95) # 95% confidence interval

dative_ci 
```
:::

Let's visualize the confidence interval for our bootstrapped samples, as seen in @exm-ida-cat-confidence-interval-visualize.

::: {#exm-ida-cat-confidence-interval-visualize}
```{r}
#| label: fig-ida-cat-confidence-interval-visualize
#| fig-cap: "Bootstrap distribution of the proportion of NP realizations of the recipient clause with the confidence interval."
#| fig-height: 4

# Visualize the bootstrap distribution with the confidence interval
dative_boot |> 
  visualize() +
  shade_confidence_interval(
    dative_ci # the confidence interval
  )
```
:::

The confidence level is the probability that the confidence interval contains the true value. The confidence level is typically set to 0.95 in the social sciences. This means that if the confidence interval contains the null hypothesis value, then we fail to reject the null hypothesis. If the confidence interval does not contain the null hypothesis value, then we reject the null hypothesis.

Our stat is `r dative_obs$stat` and the confidence interval is `r dative_ci$lower_ci` to `r dative_ci$upper_ci`. The confidence interval does not contain the null hypothesis value of 0.5, which provides evidence that the proportion of NP realizations of the recipient clause is different from 0.5.

Confidence intervals are often misinterpreted. Confidence intervals are not the probability that the true value is within the range. The true value is either within the range or not. The confidence interval is the probability that the range contains the true value. This is a subtle but important distinction.

Interpreted correctly confidence intervals can enhance our understanding of the uncertainty of our test statistic and reduces the interpretation of p-values (which are based on a relatively arbitrary alpha level) as a binary decision, significant or not significant. Instead, confidence intervals encourage us to think about the uncertainty of our test statistic as a range of values that we would expect the true value to fall within some level of uncertainty.

- [ ] Add note on effect size for proportion statistic?
  - Effect size measures for proportion is the difference in proportions?

#### Bivariate analysis {#sec-ida-cat-bivariate}

The univarite case is not very interesting or common in statistical inference, but it is a good place to start to understand the process and the logic of statistical inference. The bivariate case, on the other hand, is much more common and interesting. The bivariate case includes two variables. The goal is to describe the relationship between the two variables. 

In the `dative_df` dataset, we can imagine asking the question: 

- Is there a difference in the proportion of NP and PP realizations of the recipient clause by modality?

This question can be answered using a difference in proportions test, as both variables are binomial (have two levels). The null hypothesis is that there is no difference in the proportion of NP and PP realizations of the recipient clause by modality. The alternative hypothesis is that there is a difference in the proportion of NP and PP realizations of the recipient clause by modality.

We can cross-tabulate or visualize, but let's visualize this relationship in this case. In @exm-ida-cat-bivariate-vis, we see the code the shows the distribution of the levels of the `realization_of_rcp` variable by the levels of the `modality` variable.

::: {#exm-ida-cat-bivariate-vis}
```{r}
#| label: fig-ida-cat-bivariate
#| fig-cap: "Distribution of the levels of the `realization_of_rcp` variable by the levels of the `modality` variable."
#| fig-height: 4

# Visualize the relationship between `realization_of_rcp` and `modality`
dative_df |> 
  ggplot(aes(x = realization_of_rcp, fill = modality)) +
  geom_bar(position = "fill") +
  labs(
    x = "Realization of recipient clause",
    y = "Proportion",
    fill = "Modality"
  )
```
:::

From our visualization, we can see that the proportion of NP realizations of the recipient clause is higher in both modalities, as we might expect from our univariate analysis. However, the proportion appears to be different with the spoken modality having a higher proportion of NP realizations of the recipient clause than the written modality. But we cannot conclude that there is a difference in the proportion of NP and PP realizations of the recipient clause by modality. We need to conduct a statistical test to determine if the difference is statistically significant.

::: {#exm-ida-cat-bivariate-tbl}
```{r}
#| label: tbl-ida-cat-bivariate
#| tbl-cap: "Contingency table for `realization_of_rcp` and `modality`."

dative_df |> 
  tabyl(realization_of_rcp, modality) |> # cross-tabulate
  adorn_totals(c("row", "col")) |> # provide row and column totals
  adorn_percentages("col") |> # add percentages to the columns
  adorn_pct_formatting(rounding = "half up", digits = 0) |> # round the digits
  adorn_ns() |> # add observation number
  adorn_title("combined") |> # add a header title
  kable(booktabs = TRUE) |>  # pretty table)
  kable_styling()
```
:::

To determine if the distribution of the levels of the `realization_of_rcp` variable by the levels of the `modality` variable is different from what we would expect if the null hypothesis were true, we need to calculate the difference observed in the sample and compare it to the differences observed in many samples where the null hypothesis is true.

The `infer` package provides a pipeline which maintains a consistent workflow for statistical inference. As such, the procedure is very similar to the univarite analysis we performed, with some adjustments. Let's focus on the adjustments. First, our `specify()` call needs to include the relationship between two variables: `realization_of_rcp` and `modality`. The `response` argument is the response variable, which is `realization_of_rcp`. The `explanatory` argument is the explanatory variable, which is `modality`. 

There are two approaches to specifying the relationship between the response and explanatory variables. The first approach is to specify the response variable and the explanatory variable separately as values of the arguments `response` and `explanatory`. The second approach is to specify the response variable and the explanatory variable as a formula using the `~` operator. The formula approach is more flexible and allows for more complex relationships between the response and explanatory variables. In @exm-ida-cat-specify-bivariate, we see the code for the `specify()` call using the formula approach.

::: {.callout}
**{{< fa regular hand-point-up >}} Tip**

The formula syntax `y ~ x` can be read as 'y' as a function of 'x'. 
:::

::: {#exm-ida-cat-specify-bivariate}
```{r}
#| label: ida-cat-specify-bivariate

# Specify the relationship between the response and explanatory variables
dative_spec <- 
  dative_df |> 
  specify(
    realization_of_rcp ~ modality,
    success = "NP"
  )

dative_spec
```
:::

The `dative_spec` now contains attributes about the response and explanatory variables encoded into the data frame. 

We now calculate the observed statistic with `calculate()`, as seen in @exm-ida-cat-calculate-bivariate.

::: {#exm-ida-cat-calculate-bivariate}
```{r}
#| label: ida-cat-calculate-bivariate

# Calculate the observed statistic
dative_obs <- 
  dative_spec |> 
  calculate(stat = "diff in props", order = c("spoken", "written"))

dative_obs
```
:::

Two differences are that our statistic is now a difference in proportions and that we are asked to specify the ordere of the levels of `modality`. The statistic is clear, we are investigating whether the proportion of NP realizations of the recipient clause is different between the spoken and written modalities. The order of the levels of `modality` is important because it determines the direction of the alternative hypothesis, specifically how the statistic is calculated (the order of the subtraction). 

So our observed statistic `r round(dative_obs$stat, 2)` is the proportion of NP realizations of the recipient clause in the spoken modality minus the proportion of NP realizations of the recipient clause in the written modality, so the NP realization appears `r round(dative_obs$stat * 100, 0)`% more in the spoken modality compared to the written modality.

The question remains, is this difference statistically significant? To answer this question, we generate the null hypothesis distribution, visualize the p-value range, and calculate the p-value, as seen in @exm-ida-cat-null-hypothesis-bivariate.

::: {#exm-ida-cat-null-hypothesis-bivariate}
```{r}
#| label: fig-ida-cat-null-hypothesis-bivariate
#| fig-cap: "Null hypothesis distribution of the difference in proportions of NP realizations of the recipient clause by modality with the observed statistic and p-value."
#| message: false
#| fig-height: 4

# Generate the null hypothesis distribution
dative_null <- 
  dative_spec |> 
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in props", order = c("spoken", "written"))

# Visualize the null hypothesis distribution with the observed statistic and p-value
dative_null |> 
  visualize() + 
  shade_p_value(
    dative_obs, # the observed statistic
    direction = "two-sided", # the direction of the alternative hypothesis
  )

# Calculate the p-value
dative_null |> 
  get_p_value(
    dative_obs, # the observed statistic
    direction = "two-sided" # the direction of the alternative hypothesis
  )
```
::: 

Note when generating the null hypothesis distribution, we use the `hypothesize()` function with the `null` argument set to "independence". This is because we are interested in the relationship between the response and explanatory variables. The null hypothesis is that there is no relationship between the response and explanatory variables. When generating the samples, we use the permutation approach, which randomly shuffles the response variable values for each sample. This simulates the null hypothesis that there is no relationship between the response and explanatory variables.

When we plot the null distribution, we see that the statistic values cluster around $0$, which is what we expect if there is no difference. We also see that our observed statistic is far away from the null distribution, which suggests that there is a difference in the proportion of NP realizations of the recipient clause by modality.

The p-value underscores this apparent difference. The p-value is reported as $0$. To provide some context, we will generate a confidence interval for our observed statistic using the bootstrap method, as seen in @exm-ida-cat-confidence-interval-bivariate.

::: {#exm-ida-cat-confidence-interval-bivariate}
```{r}
#| label: fig-ida-cat-confidence-interval-bivariate
#| fig-cap: "Bootstrap distribution of the difference in proportions of NP realizations of the recipient clause by modality with the confidence interval."

# Generate boostrap distribution
dative_boot <- 
  dative_spec |> 
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "diff in props", order = c("spoken", "written"))

# Calculate the confidence interval
dative_ci <- 
  dative_boot |> 
  get_confidence_interval(level = 0.95)

# Visualize the bootstrap distribution with the confidence interval
dative_boot |> 
  visualize() +
  shade_confidence_interval(
    dative_ci # the confidence interval
  )
```
:::

The confidence interval does not contain the null hypothesis value of 0, which provides evidence that the proportion of NP realizations of the recipient clause is different between the spoken and written modalities.

- [ ] Add note on effect size for difference in proportions statistic?
  - Effect size measures for difference in proportions is the difference in proportions?

We get effect size and confidence interval information. Note that the effect size for this relationship is weak. This points out an important aspect to evaluation of statistical tests. The fact that a test is significant does not mean that it is meaningful. A small effect size suggests that we should be cautious about the extent to which this significant finding is robust in the population from which the data is sampled.

#### Multivariate Analysis

In many scenarios, it is common to have multiple explanatory variables that need to be considered. In such cases, logistic regression is a suitable modeling technique. Logistic regression allows for the inclusion of both categorical and continuous explanatory variables. The primary objective of using logistic regression is to assess the association between these variables and the dependent variable. By analyzing this relationship, we can determine how changes in the explanatory variables influence the probability of the outcome occurring.

In our `dative_df` dataset, we can imagine asking the question:

- Is there a difference in the proportion of NP and PP realizations of the recipient clause by modality and length ratio?

The length ratio gets at the length of the recipient clause relative to the length of the theme clause. This ratio is an operationalization of a phenomenon known as 'Heavy NP' shift. There are many ways to operationalize this phenomenon, but the length ratio is a simple method to approximate the phenomenon. It attempts to capture the idea that the longer the theme clause is relative to the recipient clause, the more likely the recipient clause will be realized as an NP --in other words, when the theme is relatively longer than the recipient, the theme is ordered last in the sentence, and the recipient is ordered first in the sentence and takes the form of an NP (instead of a PP). 

For example, 

1. John gave the book [to Mary]. (PP)
2. John gave [Mary] the large book that I showed you in class yesterday. (NP)

The prediction, then, is that the example in (3) would be less likely than (2) because the theme is relatively longer than the recipient.

3. John gave the book that I showed you in class yesterday [to Mary]. (PP)

Let's consider this variable `length_ratio` and `modality` together as explanatory variables for the realizations of the recipient clause `realization_of_rcp`. 

Let's create the `length_ratio` variable by dividing the `length_of_thm` by the `length_of_rcp`. This will give us values larger than 1 when the theme is  longer than the recipient. In @exm-ida-cat-create-length-ratio, we see the code for creating the `length_ratio` variable.

::: {#exm-ida-cat-create-length-ratio}
```{r}
#| label: ida-cat-create-length-ratio

# Create the `length_ratio` variable
dative_df <- 
  dative_df |> 
  mutate(
    length_ratio = length_of_thm / length_of_rcp
  )

# Preview
dative_df |> glimpse()
```
:::

Let's visualize the relationship between `realization_of_rcp` and `length_ratio` separately and then together with `modality`, as seen in @exm-ida-cat-bivariate-vis-length-ratio.

::: {#exm-ida-cat-bivariate-vis-length-ratio}
```{r}
#| label: fig-ida-cat-bivariate-length-ratio
#| fig-cap: "Distribution of the levels of the `realization_of_rcp` variable by the levels of the `modality` variable and `length_ratio` variable."
#| fig-subcap: 
#| - "Length ratio by realization of recipient clause"
#| - "Length ratio by realization of recipient clause by modality"
#| layout-ncol: 2

# Visualize the relationship between `realization_of_rcp` and `length_ratio`
p1 <- 
  dative_df |> 
  ggplot(aes(x = realization_of_rcp, y = length_ratio)) +
  geom_boxplot() +
  labs(
    x = "Realization of recipient clause",
    y = "Length ratio"
  )

p1

# Visualize the relationship between `realization_of_rcp` and `length_ratio` by `modality`
p1 + 
  facet_wrap(~ modality)
```
:::

Before jumping in here, the outliers should catch our attention. Each boxplot has a number of outliers. These outliers are likely due to the fact that the `length_ratio` variable is built upon the `length_of_thm` and `length_of_rcp` variables, which are both highly skewed. This is a common problem in statistical inference. The solution is to transform the variables to reduce the skewness. In this case, we can use the log transformation, as seen in @exm-ida-cat-log-transform.

::: {#exm-ida-cat-log-transform}
```{r}
#| label: ida-cat-log-transform

# Log transform the `length_ratio` variable
dative_df <- 
  dative_df |> 
  mutate(
    length_ratio_log = log10(length_ratio)
  )

dative_df |> glimpse()
```
:::

Now we can plot the relationships in @fig-ida-cat-bivariate-length-ratio with the log-transformed `length_ratio`, seen in @exm-ida-cat-bivariate-vis-length-ratio-log.

::: {#exm-ida-cat-bivariate-vis-length-ratio-log}
```{r}
#| label: fig-ida-cat-bivariate-length-ratio-log
#| fig-cap: "Distribution of the levels of the `realization_of_rcp` variable by the levels of the `modality` variable and `length_ratio` variable with log transformation."
#| fig-subcap:
#| - "Length ratio by realization of recipient clause"
#| - "Length ratio by realization of recipient clause by modality"
#| layout-ncol: 2

# Visualize the relationship between `realization_of_rcp` and `length_ratio`
p1 <- 
  dative_df |> 
  ggplot(aes(x = realization_of_rcp, y = length_ratio_log)) +
  geom_boxplot() +
  labs(
    x = "Realization of recipient clause",
    y = "Length ratio (log)"
  )

p1

# Visualize the relationship between `realization_of_rcp` and `length_ratio` by `modality`
p1 + 
  facet_wrap(~ modality)
```
:::

The log transformation has reduced the skewness of the `length_ratio` variable. Note that the log transformation does not change the rank order of the values, but it does change the scale of the values (the distance between the values) by reducing the magnitude of the values. The boxplots in @fig-ida-cat-bivariate-length-ratio-log still have outliers, but there are fewer outliers and they are not as extreme.

Now we can return to our question: 

- Is there a difference in the proportion of NP and PP realizations of the recipient clause by modality and length ratio?

We can answer this question using a logistic regression. The null hypothesis is that there is no difference in the proportion of NP and PP realizations of the recipient clause by modality and length ratio. The alternative hypothesis is that there is a difference in the proportion of NP and PP realizations of the recipient clause by modality and length ratio.

Let's calculate the statistics (not statistic) for our logistic regression by specifying the relationship between the response and explanatory variables and then using `fit()` to fit the logistic regression model, as seen in @exm-ida-cat-logistic-regression.

::: {#exm-ida-cat-logistic-regression}
```{r}
#| label: ida-cat-logistic-regression

# Specify the relationship between the response and explanatory variables
dative_spec <- 
  dative_df |> 
  specify(
    realization_of_rcp ~ modality + length_ratio_log
  )

# Fit the logistic regression model
dative_fit <- 
  dative_spec |> 
  fit() 

dative_fit 
```
:::

Note I pointed out statistics, not statistic. In logistic regression models, there the number of statistic reported depends on the number of explanatory variables. If there are two variables there will be at least three terms, one for each variable and the intercept term. If one or more variables are categorical, however, there will be additional terms when the categorical variable has three or more levels. 

In our case, the `modality` variable has two levels, so there are three terms. The first term is the intercept term, which is the log odds of the proportion of NP realizations of the recipient clause in the written modality when the `length_ratio` is 1. The second term is the log odds of the proportion of NP realizations of the recipient clause in the spoken modality when the `length_ratio` is 1. The third term is the log odds of the proportion of NP realizations of the recipient clause when the `length_ratio` is 1 in the written modality. Notable the spoken modality does not explicitly appear but is implicitly represented the `modalitywritten` term statistic. It is used as the reference level for the `modality` variable. 

::: {.callout}
**{{< fa regular hand-point-up >}} Tip**

The reference level in R is assumed to be the first level alphabetically, unless otherwise specified. We can override this default by using the `fct_relevel()` function from the `forcats` package. The reason we would want to do this is to make the reference level more interpretable. In our case, we would want to make the spoken modality the reference level it allows us to estimate the difference of the proportion of NP realizations of the recipient as a positive value. Remember that in @fig-ida-cat-bivariate-length-ratio-log-2, the proportion of NP realizations of the recipient clause is higher in the written modality than in the spoken modality. If we were to use the written modality as the reference level, the difference would be negative. Not that we couldn't interpret this, but working with positive integers is easier to interpret.
:::

The statistics returned in logistic regression are log odds. Odds are the ratio of the probability of an event occurring to the probability of an event not occurring. Log odds are the natural log of the odds. If we would like to return the statistic as the odds ratio, we can use the `exp()` function, as seen in @exm-ida-cat-logistic-regression-odds-ratio.

::: {#exm-ida-cat-logistic-regression-odds-ratio}
```{r}
#| label: ida-cat-logistic-regression-odds-ratio

# Calculate the odds ratio by exponentiating the log odds
dative_fit <- 
  dative_fit |> 
  mutate(
    odds_ratio = exp(estimate)
  )

dative_fit
```
:::

- [ ] TODO: Interpret the odds ratio

The log odds for `writtenmodality` is `r round(dative_fit$estimate[2], 2)`. This means that the odds of the proportion of NP realizations of the recipient clause in the written modality when the `length_ratio` is 1 is `r round(exp(dative_fit$estimate[2]), 2)` times the odds of the proportion of NP realizations of the recipient clause in the spoken modality when the `length_ratio` is 1.

On the other hand, the log odds for `length_ratio` is `r round(dative_fit$estimate[3], 2)`. In this case the `length_ratio` log odds can be interpreted as the log odds of the proportion of NP realizations of the recipient clause as a function of the `length_ratio` when the `modality` is the spoken modality. This is because the `modality` variable is the reference level.

? `length_ratio_log` has was log-transformed with a base of 10. This means that the odds ratio can be exponentiated with a base of 10, to return the odds ratio as a function of the `length_ratio` values, as seen in @exm-ida-cat-logistic-regression-odds-ratio-10.

::: {#exm-ida-cat-logistic-regression-odds-ratio-10}
```{r}
#| label: ida-cat-logistic-regression-odds-ratio-10

# Calculate the odds ratio by exponentiating the log odds with a base of 10
dative_fit <- 
  dative_fit |> 
  mutate(
    odds_ratio = case_when(
      term == "length_ratio_log" ~ 10^odds_ratio,
      TRUE ~ exp(estimate)
    )
  )

dative_fit
```
:::


So the odds ratio for `length_ratio` is `r dative_fit$odds_ratio[3]` when the `modality` is the written modality.

So our logistic regression model as specified considers each explanatory variable independently, controlling for the other explanatory variable. This is an additive model, which is what we stated in our formula `y ~ x1 + x2`. We can also specify an interaction between the explanatory variables, as seen in @exm-ida-cat-logistic-regression-interaction.

::: {#exm-ida-cat-logistic-regression-interaction}
```{r}
#| label: ida-cat-logistic-regression-interaction

# Specify the relationship between the response and explanatory variables
dative_inter_spec <- 
  dative_df |> 
  specify(
    realization_of_rcp ~ modality * length_ratio_log
  )

dative_inter_spec
```
::: 

Replacing the `+` with a `*` tells the model to consider the interaction between the explanatory variables. The interaction is the effect of one explanatory variable on the response variable is dependent on the other explanatory variable. In our case, the interaction is the effect of the `length_ratio` on the proportion of NP realizations of the recipient clause is dependent on the `modality`. 

An model with an interaction changes the terms and the estimates. In @exm-ida-cat-logistic-regression-interaction-terms, we see the terms for the logistic regression model with an interaction.

::: {#exm-ida-cat-logistic-regression-interaction-terms}
```{r}
#| label: ida-cat-logistic-regression-interaction-terms

# Fit the logistic regression model
dative_inter_fit <- 
  dative_inter_spec |> 
  fit()

dative_inter_fit
```
:::

The additional term `modalitywritten:length_ratio_log` is the interaction term. We also see the log odds estimates have changed for the previous terms. This is because this interaction draws some of the explanatory power from the other terms. Whether or not we run an interaction model depends on our research question. Whether or not the interaction term, or the other main terms, adds evidence to reject the null hypothesis, is the next step to consider. 

Let's return to our additive model and generate the null hypothesis distribution, visualize the p-value range, and calculate the p-value for each of the terms, as seen in @exm-ida-cat-null-hypothesis-logistic-regression.

::: {#exm-ida-cat-null-hypothesis-logistic-regression}
```{r}
#| label: fig-ida-cat-null-hypothesis-logistic-regression
#| fig-cap: "Null hypothesis distribution of the proportion of NP realizations of the recipient clause by modality and length ratio with the observed statistic and p-value."

# Generate the null hypothesis distribution
dative_null <- 
  dative_spec |> 
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  fit()

# Visualize the null hypothesis distribution with the observed statistics
dative_null |> 
  visualize() +
  shade_p_value(
    dative_fit, # the observed statistics
    direction = "two-sided" # the direction of the alternative hypothesis
  )

# Calculate the p-value
dative_null |> 
  get_p_value(
    dative_fit, # the observed statistics
    direction = "two-sided" # the direction of the alternative hypothesis
  )
```
:::

It appears that our main effects, `modality` and `length_ratio`, are statistically significant. Let's generate the confidence intervals for each of the terms, as seen in @exm-ida-cat-confidence-interval-logistic-regression.

::: {#exm-ida-cat-confidence-interval-logistic-regression}
```{r}
#| label: fig-ida-cat-confidence-interval-logistic-regression
#| fig-cap: "Bootstrap distribution of the proportion of NP realizations of the recipient clause by modality and length ratio with the confidence interval."

# Generate boostrap distribution
dative_boot <- 
  dative_spec |> 
  generate(reps = 1000, type = "bootstrap") |>
  fit()

# Calculate the confidence interval
dative_ci <- 
  dative_boot |> 
  get_confidence_interval(
    point_estimate = dative_fit, # the observed statistics
    level = 0.95
  )

# Visualize the bootstrap distribution with the confidence interval
dative_boot |> 
  visualize() +
  shade_confidence_interval(
    dative_ci # the confidence interval
  )
```
:::

The confidence intervals for the main effects, `modality` and `length_ratio`, do not contain the null hypothesis value of 0, which provides evidence that each of the explanatory variables is related to the proportion of NP realizations of the recipient clause.

We can quantify the effect size of each of the explanatory variables using the odds ratio to calculate the $r$ and $R^2$ values. We can use the `logoddsratio_to_r()` function from `effectsize` package to calculate the $r$ value and then square the $r$ value to calculate the $R^2$ value, as seen in @exm-ida-cat-effect-size-logistic-regression.

::: {#exm-ida-cat-effect-size-logistic-regression}
```{r}
#| label: ida-cat-effect-size-logistic-regression

# Calculate the effect size
dative_fit <- 
  dative_fit |> 
  mutate(
    r = logoddsratio_to_r(estimate),
    r_squared = r^2
  )

dative_fit
```
:::

Beyond the estimates to quantify the likelihood that the null hypothesis is true, the effect size provides a measure of the strength of the relationship between the response and explanatory variables. The $r$ value is the correlation coefficient, which is a measure of the strength of the linear relationship between the response and explanatory variables. The $R^2$ value is the coefficient of determination, which is a measure of the proportion of the variance in the response variable that is explained by the explanatory variables.

As you can imagine, the larger the $R^2$ value, the stronger the relationship between the response and explanatory variables. From our effect size evaluation, the `length_ratio` variable has a stronger relationship with the proportion of NP realizations of the recipient clause than the `modality` variable.

Now, knowing "how" strong a given value is can be a little less intuitive. The `effectsize` package provides some guidelines for interpreting effect size measures. Let's use the `interpret_r2()` function to interpret the $R^2$ value, as seen in @exm-ida-cat-interpret-r2.

::: {#exm-ida-cat-interpret-r2}
```{r}
#| label: ida-cat-interpret-r2

# Interpret the R^2 value
dative_fit |> 
  mutate( 
    r2_interpretation = interpret_r2(r_squared)
  )
```
:::

While the effects for `modality` and `length_ratio` are statistically significant, the effect size for `modality` is small and the effect size for `length_ratio` is much stronger. This can help inform our interpretation of the results.

### Numeric {#sec-ida-numeric}

There are two datasets I've created for the task of replicating the @Tottie2011 and @Tottie2014 studies. They found that men use more fillers than women, older speakers use more fillers than younger speakers, and more educated speakers use fewer fillers than less educated speakers.

See also @Shriberg1994 for evidence that men use filled pauses more than women. 

The main dataset is the `swda_fillers_ida.csv` dataset and the second is the `swda_fillers_type_ida.csv` dataset.

::: {#exm-ida-num-setup}
```{r}
#| label: ida-num-setup-show
#| eval: false

# Load datasets
# Fillers
fillers_df <- read_csv("../data/derived/swda_fillers.csv")
fillers_df |> glimpse()

# Fillers type
fillers_type_df <- read_csv("../data/derived/swda_fillers_type.csv")
fillers_type_df |> glimpse()
```

```{r}
#| label: ida-num-setup-run
#| message: false
#| echo: false

# Load datasets
# Fillers
fillers_df <- read_csv("data/swda_fillers_ida.csv")
fillers_df |> glimpse()

# Fillers type
fillers_type_df <- read_csv("data/swda_fillers_type_ida.csv")
fillers_type_df |> glimpse()
```
:::


The data dictionary for the `fillers_type_df` includes all the variables in the `fillers_df` dataset, plus the `filler_type` variable, as seen in @tbl-fillers-type-dict.

```{r}
#| label: tbl-fillers-type-dict
#| tbl-cap: "Data dictionary for the `fillers_type_df` dataset"
#| message: false

read_csv("data/swda_fillers_type_ida_dd.csv") |> 
  kable() |> 
  kable_styling()
```

The `fillers_df` has the following variables:

- `speaker_id`
- `age`
- `sex`
- `education`
- `fillers_per_100`
- `total_fillers`
- `total_utterances`

The `fillers_type_df` has the additional variable:

- `filler_type`

Let's prepare these datasets for analysis by converting the categorical variables to factors, as seen in @exm-ida-num-factors.

::: {#exm-ida-num-factors}
```{r}
#| label: ida-num-factors

edu_levels <- c("More Than College", "College", "Less Than College", "Less Than High School", "Unknown")

# Convert categorical variables to factors
fillers_df <- 
  fillers_df |> 
  mutate(
    sex = factor(sex),
    education = factor(education, levels = edu_levels, ordered = TRUE)
  )

fillers_type_df <- 
  fillers_type_df |> 
  mutate(
    sex = factor(sex),
    education = factor(education, levels = edu_levels, ordered = TRUE)
  )
```
:::

Let's review the descriptive statistics with the `skim()` function, as seen in @exm-ida-num-skim.

::: {#exm-ida-num-skim}
```{r}
#| label: ida-num-skim

fillers_df |> 
  skim()
```
:::

- [ ] summary of the key highlights from the descriptive statistics

#### Univariate analysis

In hypothesis testing, the analysis of a single variable is directed at determining whether or not the distribution or statistic of the variable differs from some expected distribution or statistic. In the case of a single categorical variable with two levels (as in the datives case), we sampled from a binomial distribution by chance. In the case of a single numeric variable, we can sample and compare the observed distribution to a theoretical distribution. When approaching hypothesis testing from a theoretical perspective, it is often necessary to assess how well a numeric variable fits the normal distribution as many statistical tests assume that the data are normally distributed. However, we have adopted the simulation-based approach to hypothesis testing, which does not require that the data fit the normal distribution, or any other distribution for that matter.

The other approach to analyzing a single numeric variable is to compare an observed statistic to an expected statistic. This approach requires a priori knowledge of the expected statistic. For example, imagine we are interested testing the hypothesis that the length of words in a medical corpus tend to be longer than the average length of words in English. We would then calculate the observed mean for the length of words in the medical corpus and then generate a null distribution of means for the length of words in English, as in @exm-ida-num-uni-null-mean.

::: {#exm-ida-num-uni-null-mean}
```{r}
#| eval: false
#| label: ida-num-uni-null-mean

# Observed mean
obs_mean <- 
  medical_df |> 
  specify(response = word_length) |>
  calculate(stat = "mean")

# Null distribution of means
null_mean <- 
  medical_df |> 
  specify(response = word_length) |>
  hypothesize(null = "point", mu = 5) |> 
  generate(reps = 1000, type = "draw") |> 
  calculate(stat = "mean")
```
:::

Note that instead of a `p = ` argument, as was used in the `hypothesize()` step to generate a null distribution of proportions, we use a `mu = ` argument in @exm-ida-num-uni-null-mean to specify the expected mean. The rest of the hypothesis testing workflow is the same as for the null distribution of proportions.

::: {.callout}
The mean `mu` is not the only statistic we can specify for a numeric variable. We can also specify the median `med`, or the standard deviation `sigma`. 
:::

In our case, we do not have a priori knowledge of the expected statistic for the `fillers_per_100` variable, so we will not pursue this approach. However, when looking at the distribution of a numeric variable, it is useful to look at the descriptive statistics the mean, median, and standard deviation in order to get a sense of the central tendency and spread of the data. 

We can use the `skim()` function to get the mean, median, and standard deviation of the `fillers_per_100` variable, as seen in @exm-ida-num-uni-summary.

::: {#exm-ida-num-uni-summary}
```{r}
#| label: fillers-type-num-summary

fillers_df |>
  skim(fillers_per_100)
```
:::

The mean is larger than the median which suggests that the distribution is right-skewed. Furthermore, the standard deviation is large relative to the mean, which suggests that there is a lot of variability in the data.

To get a sense of the distribution of the `fillers_per_100` variable, we can plot a histogram and density plot, as seen in @exm-ida-num-uni-hist-dens.

::: {#exm-ida-num-uni-hist-dens}
```{r}
#| label: fig-ida-num-uni-hist-dens
#| fig-cap: "Histogram and density plot of the `fillers_per_100` variable"
#| fig-subcap: 
#| - "Histogram"
#| - "Density plot"
#| layout-ncol: 2

# Histogram
fillers_df |> 
  ggplot(aes(x = fillers_per_100)) +
  geom_histogram(bins = 50) +
  labs(x = "Fillers per 100 utterances", y = "Count") +
  theme_bw()

# Density plot
fillers_df |> 
  ggplot(aes(x = fillers_per_100)) +
  geom_density() +
  labs(x = "Fillers per 100 utterances", y = "Density") +
  theme_bw()
```
:::

The distribution of `fillers_per_100` is indeed skewed to the right. We might have predicted this given that we are working with ratio based on count data. In any case, the skewing we observe tends to compress the distribution and may make it difficult to see any patterns. To mitigate this, we can log transform the variable. But we will run into a problem if we have any speakers who do not use any fillers at all as these speakers will have a value of 0, as we can see in @fig-ida-num-uni-hist-dens-2. The log of 0 is undefined. So we need to address this. 

Eliminating the speakers who do not use any fillers at all is one option. This is quite extreme as we may lose quite a few speakers and it is not clear that removing data in this way will not cause inordinate bias in the results as these speakers may be different in some way from the rest of the speakers. Looking at the speakers with 0 fillers in @exm-ida-num-uni-zero-fillers, we can see that there is some potential for bias.

::: {#exm-ida-num-uni-zero-fillers}
```{r}
#| label: ida-num-uni-zero-fillers

fillers_df |>
  filter(fillers_per_100 == 0) |>
  tabyl(education, sex)
```
:::

Another approach is to add a small value to the `fillers_per_100` variable, for all speakers. This will allow us to log transform the variable and will likely not have any (or very little) impact on the results. It also allows us to keep these speakers. 

Adding values can be done in one of two ways. We can add a small constant value to all speakers, or we can add a small random value to all speakers. The former is easier to implement, but means that we will still have a spike in the distribution at the value of the constant. Since we do not expect that speakers that did not use fillers at all would never do so and that when they do we would not expect them to be at exactly the same rate as other speakers, we can add a small random value to all speakers. 

In R, we can use the `jitter()` function to add a small amount of random noise to the variable. Note, however, this random noise can be positive or negative. When a negative value is added to a 0 value, we are still in trouble. So we need to make sure that none of the jitter produces negative values. We can do this by simply taking the absolute value of the jittered variable with the `abs()` function. Let's see how this works in @exm-ida-num-uni-jitter.

::: {#exm-ida-num-uni-jitter}
```{r}
#| label: ida-num-uni-jitter

# Set seed for reproducibility
set.seed(1234)

# Add jitter to fillers
fillers_df <- 
  fillers_df |>
  mutate(fillers_per_100_jitter = abs(jitter(fillers_per_100)))

fillers_df
```
:::


The results from @exm-ida-num-uni-jitter show that the `fillers_per_100_jitter` variable has been added to the `fillers_df` dataset and that zero values for `fillers_per_100` now have a small amount of random noise added to them. Note, that the other values also have a small amount of random noise added to them, but it is so small that rounding to 2 decimal places makes it look like nothing has changed.

Now let's return to log transforming the `fillers_per_100_jitter` variable. We can do this with the `log()` function. Let's see how this works in @exm-ida-num-uni-log.

::: {#exm-ida-num-uni-log}
```{r}
#| label: ida-num-uni-log

# Log transform fillers (with jitter)
fillers_df <- 
  fillers_df |>
  mutate(fillers_per_100_log = log(fillers_per_100_jitter))

fillers_df
```
:::

Let's now plot the log-transformed variable, as seen in @exm-ida-num-uni-log-plot.

::: {#exm-ida-num-uni-log-plot}
```{r}
#| label: fig-ida-num-uni-log-plot
#| fig-cap: "Histogram and density plot of the `fillers_per_100_log` variable"
#| fig-subcap:
#| - "Histogram"
#| - "Density plot"
#| layout-ncol: 2

# Histogram
fillers_df |> 
  ggplot(aes(x = fillers_per_100_log)) +
  geom_histogram(bins = 50) +
  labs(x = "Fillers per 100 utterances (log)", y = "Count")

# Density plot
fillers_df |> 
  ggplot(aes(x = fillers_per_100_log)) +
  geom_density() +
  labs(x = "Fillers per 100 utterances (log)", y = "Density")
```
:::

The distribution of the log-transformed variable is more spread out now, but the zero-filler speakers do show a low-level spike in the left tail of the distribution. Jitter and log-transformation, however, smooth over their effect to a large degree. 

Let's drop some of the variables we no longer need and proceed with the log-transformed variable, as seen in @exm-ida-num-uni-drop.

::: {#exm-ida-num-uni-drop}
```{r}
#| label: ida-num-uni-drop

# Drop variables
fillers_df <- 
  fillers_df |>
    select(speaker_id, sex, education, age, fillers_per_100_log)
```
:::

#### Bivariate analysis

When considering a numeric reponses variable and another variable, it is key to consider the nature of the other variable. If it is a categorical variable with two levels, then we can compare a statistic between the two groups (mean or median). If it is categorical with more than two levels, the F statistic is used to compare the means. Finally, if it is a numeric variable, then we can use a correlation test to see if there is an association between the two variables.

Let's approach each of these scenarios in turn. 

The `datives_df` contains the `sex` variable which is a categorical variable with two levels. According to the literature, filled pauses are used as sociolinguistic markers [@Shriberg1994; @Tottie2011, @Tottie2014]. Sex is one of the variables associated with the rate of filled pauses. The findings suggest that men use fillers at a higher rate than women. Let's test to see if this holds for the SWDA data.

Let's first explore the distribution from a descriptive point of view. With a numeric response variable `fillers_per_100_log` and a categorical explanatory variable `sex`, a boxplot is a natural fit. Let's add a density plot with a `sex` overlay in @exm-ida-num-bi-vis.

::: {#exm-ida-num-bi-vis}
```{r}
#| label: fig-ida-num-bi-vis
#| fig-cap: "Visualizations of the `fillers_per_100_log` variable by `sex`"
#| fig-subcap:
#| - "Boxplot"
#| - "Density plot"
#| layout-ncol: 2

fillers_df |> 
  ggplot(aes(y = fillers_per_100_log, x = sex)) +
  geom_boxplot(notch = TRUE) +
  labs(
    y = "Filler use (log)",
    x = "Sex"
  )

fillers_df |> 
  ggplot(aes(x = fillers_per_100_log, fill = sex)) +
  geom_density(alpha = 0.5) +
  labs(
    x = "Filler use (log)",
    fill = "Sex"
  )
```
:::

Looking at the histogram in @fig-ida-num-bi-vis-1, we see that the appears to be an overall higher rate of filler use for men, compared to women. We also can see that the random noise added to 0-rate speakers appear as outliers in the left tail. The density plot in @fig-ida-num-bi-vis-2 confirms this and allows us to see the overlap between the two groups. We see that the density distribution is not as concentrated and is slightly lower than that of men. 

::: {.callout}
**Consider this**

If we focus on the 0-speaker outliers, we see there is also a difference in the distribution. Can this difference be attributed to differences between men and women? Why or why not? 

Does your answer to this question have an effect on how we interpret the differences between men and women in the main distribution?
:::

Let's follow the simulation-based hypothesis testing workflow and investigate if the apparent difference between men and women is statistically significant, or expected by chance. The first steps are found in @exm-ida-num-bi-sex-null.

::: {#exm-ida-num-bi-sex-null}
```{r}
#| label: fig-ida-num-bi-sex-null
#| fig-cap: "Null distribution of the `fillers_per_100_log` variable by `sex`"
#| fig-height: 4

# Specify the relationship
fillers_spec <- 
  fillers_df |> 
  specify(fillers_per_100_log ~ sex) # response ~ explanatory

# Observed statistic
fillers_obs <- 
  fillers_spec |> 
  # diff in means, Male - Female
  calculate(stat = "diff in means", order = c("Male", "Female"))

# Null distribution
fillers_null <- 
  fillers_spec |> 
  hypothesize(null = "independence") |> # independence = no relationship
  generate(reps = 1000, type = "permute") |> # permute = shuffle
  calculate(stat = "diff in means", order = c("Male", "Female"))

# Visualize the null distribution w/ observed statistic
fillers_null |> 
  visualize() +
  shade_p_value(obs_stat = fillers_obs, direction = "greater") # expect greater

# Calculate the p-value
fillers_null |> 
  get_p_value(obs_stat = fillers_obs, direction = "greater")
```
:::

From the analysis performed in @exm-ida-num-bi-sex-null, we can reject the null hypothesis that there is no difference between the rate of filler use between men and women, as the p-value is greater less than 0.05.

To further assess the uncertainty of the observed statistic, and the robustness of the difference, we calculate a confidence interval, as seen in @exm-ida-num-bi-sex-ci.

::: {#exm-ida-num-bi-sex-ci}
```{r}
#| label: fig-ida-num-bi-sex-ci
#| fig-cap: "Confidence interval generated from bootstrap resampling"

# Resampling distribution
fillers_boot <- 
  fillers_spec |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "diff in means", order = c("Male", "Female"))

# Calculate the confidence interval
fillers_ci <- 
  fillers_boot |>
  get_ci(level = 0.95)

fillers_ci

# Visualize the confidence interval
fillers_boot |> 
  visualize() +
  shade_ci(fillers_ci)
```
:::

The confidence interval includes 0, which suggests that the observed difference is questionable. It is of note, however, that the majority of the interval is above 0, which provides some evidence that the observed difference is not due to chance. 

This result highlights how p-values and confidence intervals together can provide a more nuanced picture of the data. 

The second bivariate scenario we can consider is when the explanatory variable is categorical with more than two levels. In this case, we can use the F statistic to compare the means of the different levels. The `education` variable in the `fillers_df` dataset is a categorical variable with five levels. @Tottie2011 suggests that more educated speakers use more fillers than less educated speakers. Let's test this hypothesis.

First, we visualize the distribution of the `fillers_per_100_log` variable by `education`, as seen in @exm-ida-num-bi-edu-vis.

::: {#exm-ida-num-bi-edu-vis}
```{r}
#| label: fig-ida-num-bi-edu-vis
#| fig-cap: "Visualizations of the `fillers_per_100_log` variable by `education`"
#| fig-height: 4

# Boxplot
fillers_df |> 
  ggplot(aes(y = fillers_per_100_log, x = education)) +
  geom_boxplot(notch = TRUE) +
  labs(
    y = "Filler use (log)",
    x = "Education"
  )
```
:::

The boxplot in @fig-ida-num-bi-edu-vis does not point to any obvious differences between the levels of the `education` variable. There are a fair number of outliers, however, in the two most educated groups. These outliers are likely due to the random noise added to the 0-rate speakers and it is interesting that they are concentrated in the two most educated groups.

Let's now submit these variables to the simulation-based hypothesis testing workflow to quantify the uncertainty of the observed statistic and determine if the observed difference is statistically significant. The first steps are found in @exm-ida-num-bi-edu-null.

::: {#exm-ida-num-bi-edu-null}
```{r}
#| label: fig-ida-num-bi-edu
#| fig-cap: "Null distribuition of the `fillers_per_100_log` variable by `education`"
#| fig-height: 4

# Specify the relationship
fillers_spec <- 
  fillers_df |> 
  specify(fillers_per_100_log ~ education) # response ~ explanatory

# Observed statistic
fillers_obs <- 
  fillers_spec |> 
  calculate(stat = "F") # F = variance between groups / variance within groups

# Null distribution
fillers_null <- 
  fillers_spec |> 
  hypothesize(null = "independence") |> # independence = no relationship
  generate(reps = 1000, type = "permute") |> # permute = shuffle
  calculate(stat = "F")

# Visualize the null distribution w/ observed statistic
fillers_null |> 
  visualize() +
  shade_p_value(obs_stat = fillers_obs, direction = "two-sided") # expect greater

# Calculate the p-value
fillers_null |> 
  get_p_value(obs_stat = fillers_obs, direction = "two-sided")
```
:::

The analysis in @exm-ida-num-bi-edu-null suggests that the observed difference between the means of the different levels of the `education` variable not significantly different from what we would expect by chance.

::: {.callout}
The p-value in @exm-ida-num-bi-edu-null was calculated using a two-sided test, which is appropriate when the expected directionality is not known. In this case, while we do have an expected directionality, the visualizations strongly suggest that the observed difference is not in line with our expectations. To account for this uncertainty and to be conservative, we choose to use a two-sided test. This allows us to remain open to the possibility that the observed difference may actually be in the opposite direction, rather than solely focusing on our initial expectation. However, it's important to note that the decision to use a two-sided test should also consider factors such as the specific research question and the context of the analysis.
:::

Let's now calculate a confidence interval to assess the uncertainty of the observed statistic, as seen in @exm-ida-num-bi-edu-ci.

::: {#exm-ida-num-bi-edu-ci}
```{r}
#| label: fig-ida-num-bi-edu-ci
#| fig-cap: "Confidence interval generated from bootstrap resampling"
#| fig-height: 4

# Resampling distribution
fillers_boot <- 
  fillers_spec |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "F")

# Calculate the confidence interval
fillers_ci <- 
  fillers_boot |>
  get_ci(level = 0.95)

fillers_ci

# Visualize the confidence interval
fillers_boot |> 
  visualize() +
  shade_ci(fillers_ci)
```
:::

In @exm-ida-num-bi-edu-ci, we see that we are in the opposite situation --the p-value is not significant and but the confidence interval does not include 0. So how do we interpret this? Remember, the p-value is the probability of observing a statistic as extreme or more extreme than the observed statistic, given that the null hypothesis is true. The confidence interval is the range of values that we are 95% confident contains the true population parameter. We should take into consideration two aspects: (1) the confidence interval has a large range (the interval is wide) and (2) that the lower limit is near 0. Take together and in addition to the p-value, we can conclude that the observed difference is not statistically significant, and if there is a difference, it is likely to be small or negligible.

The last bivariate case is when the explanatory variable is numeric. In this case, we can use a correlation test to see if there is an association between the two variables. The `age` variable in the `fillers_df` dataset is a numeric variable. @Tottie2011 suggests that older speakers use more fillers than younger speakers. Let's test this hypothesis.

First, we visualize the distribution of the `fillers_per_100_log` variable by `age`, as seen in @exm-ida-num-bi-age-vis.

::: {#exm-ida-num-bi-age-vis}
```{r}
#| label: fig-ida-num-bi-age-vis
#| fig-cap: "Scatterplot of the `fillers_per_100_log` variable by `age`"
#| fig-height: 4

# Scatterplot 
fillers_df |> 
  ggplot(aes(x = age, y = fillers_per_100_log)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(
    x = "Age",
    y = "Filler use (log)"
  )
```
:::

The trend line in @fig-ida-num-bi-age-vis does not suggest that there is a strong relationship between the two variables, or even if there is a relationship at all. We can see that the rate of filler use appears constant across the age range.

Let's now submit these variables to the simulation-based hypothesis testing workflow to quantify the uncertainty of the observed statistic and determine if the observed difference is statistically significant. The first steps are found in @exm-ida-num-bi-age-null.

::: {#exm-ida-num-bi-age-null}
```{r}
#| label: fig-ida-num-bi-age-null
#| fig-cap: "Null distribution of the `fillers_per_100_log` variable by `age`"
#| fig-height: 4

# Specify the relationship
fillers_spec <- 
  fillers_df |> 
  specify(fillers_per_100_log ~ age) # response ~ explanatory

# Observed statistic
fillers_obs <- 
  fillers_spec |> 
  calculate(stat = "correlation") # correlation = r

# Null distribution
fillers_null <- 
  fillers_spec |> 
  hypothesize(null = "independence") |> # independence = no relationship
  generate(reps = 1000, type = "permute") |> # permute = shuffle
  calculate(stat = "correlation")

# Visualize the null distribution w/ observed statistic
fillers_null |> 
  visualize() +
  shade_p_value(obs_stat = fillers_obs, direction = "two-sided") # expect greater

# Calculate the p-value
fillers_null |> 
  get_p_value(obs_stat = fillers_obs, direction = "two-sided")
```
:::

This is a very large p-value and underscores what the scatterplot in @fig-ida-num-bi-age-vis suggests --there is no relationship between the two variables. 

For completeness, we calculate a confidence interval to assess the uncertainty of the observed statistic, as seen in @exm-ida-num-bi-age-ci.

::: {#exm-ida-num-bi-age-ci}
```{r}
#| label: fig-ida-num-bi-age-ci
#| fig-cap: "Confidence interval generated from bootstrap resampling"
#| fig-height: 4

# Resampling distribution
fillers_boot <- 
  fillers_spec |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "correlation")

# Calculate the confidence interval
fillers_ci <- 
  fillers_boot |>
  get_ci(level = 0.95)

fillers_ci

# Visualize the confidence interval
fillers_boot |> 
  visualize() +
  shade_ci(fillers_ci)
```
:::

The confidence interval includes 0, which suggests that the observed difference is questionable. But in contrast to the confidence interval in @exm-ida-num-bi-edu-ci, the interval is narrow suggesting more strongly that the observed difference is not due to chance.

#### Multivariate analysis

```{r}
#| label: ida-num-multi-setup
#| include: false

# Set seed for reproducibility
set.seed(1234)

# Add jitter and log transform fillers
fillers_type_df <-
  fillers_type_df |> 
  mutate(
    fillers_per_100_jitter = abs(jitter(fillers_per_100)),
    fillers_per_100_log = log(fillers_per_100_jitter)
  ) |>
  select(speaker_id, sex, education, age, filler_type, fillers_per_100_log)
```

While bivariate analysis is useful for exploring the relationship between two variables, it is often the case that we want to consider relationships between more than two variables. In this case, we can use multivariate analysis. Linear regression is a common multivariate analysis technique. 

In linear regression, we are interested in predicting the value of a numeric response variable based on the values of the explanatory variables. The contribution of the explanatory variables can be considered individually, as an interaction, or as a combination of both.

Let's now pick up the `fillers_type_df` dataset and explore the hypothesis that the rate of filler use varies by the type of filler across the socio-demographic variables `sex`, `education`, and `age`. To do this we will use R formula syntax to specify the variables we want to include in the model. 

- Simple effects: `response ~ explanatory_1 + explanatory_2`: the response variable as a function of each explanatory variable. 
- Interaction effects: `response ~ explanatory_1:explanatory_2`: the response variable as a function of the interaction between the two explanatory variables.
- Simple and interaction effects: `response ~ explanatory_1 * explanatory_2`: the response variable as a function of each explanatory variable and the interaction between the two explanatory variables.

Let's test the hypothesis that men and women differ in the rates that they use the filler types (`fillers_per_100_log ~ filler_type * sex`). A plot will help us begin to understand the potential relationships. In @exm-ida-multi-sex-plot, we use a boxplot to visualize the relationship between the `fillers_per_100_log` variable and the `filler_type` variable, with a `sex` overlay.

::: {#exm-ida-multi-sex-plot}
```{r}
#| label: fig-ida-multi-sex-plot
#| fig-cap: "Boxplot of the `fillers_per_100_log` variable by `filler_type` and `sex`"
#| fig-subcap: 
#| - "Boxplot by `filler_type`"
#| - "Boxplot by `filler_type` and `sex`"
#| fig-height: 4
#| layout-ncol: 2


# Boxplot `filler_type`
fillers_type_df |> 
  ggplot(aes(y = fillers_per_100_log, x = filler_type)) + 
  geom_boxplot(notch = TRUE) +
  labs(
    x = "Filler type",
    y = "Fillers per 100 (log)"
  )


# Boxplot `filler_type` and `sex`
fillers_type_df |> 
  ggplot(aes(y = fillers_per_100_log, x = filler_type, fill = sex)) + 
  geom_boxplot(notch = TRUE) +
  labs(
    x = "Filler type",
    y = "Fillers per 100 (log)",
    fill = "Sex"
  )
```
:::


Let's interpret the boxplot in @fig-ida-multi-sex-plot. Focusing on the 'uh' pane first, we see that the median is higher for men than women. The boxes do overlap, but the overlap is relatively small and the range is also relatively small. In the 'um' pane, in contrast, we see that the median rate of use is higher for women, but there is quite a bit of overlap and the range is particularly large for the males. 

The big picture message, however, is that the trend for filler type goes in opposite directions for men and women. This type of relationship is called an interaction effect. In this case the interaction effect goes in opposite directions but even if the trend was in the same direction but the magnitude of the difference was different, it would still be an interaction effect.


Let's test this effect using the `infer` workflow. Calculating the observed statistics for the simple and interaction effects is very similar to other designs, except instead of `calculate()` to derive our statistics we will use the `fit()` function, just as we did for logistic regression. Let's go ahead calculate the observed statistics first, as seen in @exm-ida-num-multi-spec. 

::: {#exm-ida-num-multi-spec}
```{r}
#| label: ida-num-multi-spec

# Specify the relationship
fillers_type_spec <- 
  fillers_type_df |>
  specify(fillers_per_100_log ~ filler_type * sex)

# Observed statistics
fillers_type_obs <- 
  fillers_type_spec |>
  fit()

fillers_type_obs
```
:::

The terms in the output from @exm-ida-num-multi-spec provide information as to what the reference levels are. For example, `filler_typeum` tells us that the 'uh' level is the reference for `filler_type` and by the same logic, 'Female' is the reference for `sex`. These terms provide our simple effect statistics. Each can be understood as the difference between the reference level when the other variables are held constant. Our response variable is log transformed, so it is not directly interpretable beyond the fact that smaller units are lower rates of filler use and larger units are higher rates of filler use. So 'um' is used less than 'uh' and men use more fillers than women.

::: {.callout}
The statistic returned from a linear regression is the difference in the means of the two levels with the other variables held constant. In this way, the statistic is a measure of the slope of the line between the two levels. This slope quantifies the magnitude of the difference between the two levels.

We can also calculate the effect size by standardizing the statistics (coefficients). This is done by dividing the coefficient by the standard deviation of the response variable. This allows us to compare the effect sizes of different variables.

```{r}
#| eval: false
#| label: ida-num-multi-std-effect-size

# Standardized effect size
fillers_type_df  |> 
  group_by(filler_type) |>
  summarize(
    type_sd = sd(fillers_per_100_log)
  )

```
:::

The interaction term `fillertypeum:sexMale` is the difference in the rate of fillers for this combination compared to the reference level combination ('uh' and 'Female'). In this case, the observed rate is lower. 

We now need to generate a null distribution to compare the observed statistics to. We will again use the permutation method, but since there is an interaction effect, we need to shuffle the `filler_type` and `sex` variables together. This ensures that any relationship between the two variables is removed. Let's see how this works in @exm-ida-num-multi-null.

::: {#exm-ida-num-multi-null}
```{r}
#| label: fig-ida-num-multi-null
#| fig-cap: "Null distribution of the `fillers_per_100_log` variable by `filler_type` and `sex`"
#| fig-height: 4

# Null distribution
fillers_type_null <- 
  fillers_type_spec |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute", variables = c("filler_type", "sex")) |>
  fit()

# Visualize the null distribution w/ observed statistics
fillers_type_null |> 
  visualize() +
  shade_p_value(obs_stat = fillers_type_obs, direction = "two-sided") 

# Calculate the p-values
fillers_type_null |> 
  get_p_value(obs_stat = fillers_type_obs, direction = "two-sided")

```
:::

For the simple effects, we see that `filler_type` is significant but `sex` is not. Remember, when we only considered `sex` in isolation in the bivariate case, we found it to be significant. So why is it not signficant now? It is important to remember that in every statistical design, there are other factors that are not considered. When these are not in the model, our effects may appear to account for more of the variance than they actually do. In this case, the `filler_type` variable is accounting for some of the variance that `sex` was accounting for in the bivariate case, enough, it appears, to make `sex` not significant as a simple effect.

Our interaction effect is also significant meaning the observed difference we visualized is likely not due to chance. The upshot, men use 'uh' more and women use 'um' more. 

As always, let's calculate a confidence interval to assess the uncertainty of the observed statistic, as seen in @exm-ida-num-multi-sex-ci.

::: {#exm-ida-num-multi-sex-ci}
```{r}
#| label: fig-ida-num-multi-sex-ci
#| fig-cap: "Confidence intervals generated from bootstrap resampling"

# Resampling distribution
fillers_type_boot <- 
  fillers_type_spec |>
  generate(reps = 1000, type = "bootstrap") |>
  fit()

# Calculate the confidence intervals
fillers_type_ci <- 
  fillers_type_boot |>
  get_ci(level = 0.95, point_estimate = fillers_type_obs)

fillers_type_ci

# Visualize the confidence intervals
fillers_type_boot |> 
  visualize() +
  shade_ci(fillers_type_ci)
```
:::

From the confidence intervals, we see that zero is not included in any of the intervals, which suggests that the observed differences are not due to chance. Interpreting the width and the proximity to zero, however, suggests that the observed differences for `filler_type` are stronger than for `sex`, which did not result in a significant simple effect. The interaction effect is also significant, but the confidence interval is quite wide and approximates zero. This should raise some questions about the robustness of the observed effect.







## Summary 

...


In sum, in this section we explored the process of statistical inference, specifically the process of hypothesis testing with categorical responses variables. We started with a univariate analysis, which, although not very interesting, allowed us to focus on the process and the logic of statistical inference. We then moved on to bivariate and multivariate analyses. We see that the process is very similar, but the complexity increases with the number of explanatory variables. In each case, we applied a simulation-based approach to statistical inference which may differ from the traditional approach you may have learned in your statistics courses. But as you can appreciate, the simulation-based approach is highly flexible, more intiutive, and more transparent. The `infer` package provides a consistent set of functions and pipeline to maintain a consistent workflow. If you have previous experience with R or find resources on statistical inference using R, you will likely find the traditional, theory-based, approach. I encourage you to explore the both approaches. They have their strengths and weaknesses, but I think you will find the simulation-based approach more intuitive and transparent as a beginner.

...

In this chapter we have discussed various approaches to conducting inferential data analysis. Each configuration, however, always includes a descriptive assessment, statistical interrogation, and an evaluation of the results. We considered univariate, bivariate, and multivariate analyses using both categorical and non-categorical dependent variables to explore the similarities and differences between these approaches.


## Activities {.unnumbered}

::: {.callout}
**{{< fa regular file-code >}} Recipe**

<!-- Understand, apply, and analyze verbs: https://tips.uark.edu/blooms-taxonomy-verb-chart/ -->

**What**: {{< fa wrench >}} TBD \
**How**: Read Recipe 10 and participate in the Hypothes.is online social annotation.\
**Why**: {{< fa wrench >}} TBD
:::

::: {.callout}
**{{< fa flask >}} Lab**

<!-- Analyze, evaluate, and create verbs: https://tips.uark.edu/blooms-taxonomy-verb-chart/ -->

**What**: {{< fa wrench >}} TBD \
**How**: Clone, fork, and complete the steps in Lab 10.\
**Why**: {{< fa wrench >}} TBD
:::

## Questions {.unnumbered}

::: {.callout}
**Conceptual questions** {{< fa wrench >}}

1. What is the difference between a descriptive and inferential analysis?
2. What are the steps involved in conducting a descriptive analysis?
3. What are the steps involved in conducting an inferential analysis?
4. What are the steps involved in preparing data for inferential analysis?
5. What are the steps involved in conducting a statistical interrogation?
6. What are the steps involved in evaluating the results of an inferential analysis?
7. What are the steps involved in reporting the results of an inferential analysis?
8. Would word freqency differences between two groups of words be better assessed using a t-test or a chi-squared distribution?
9. Would word lengths between two groups of words be better assessed using a t-test or a chi-squared distribution?
10. What type of visualization would be best for exploring the relationship between two categorical variables?
11. What type of visualization would be best for exploring the relationship between two non-categorical variables?
12. What type of visualization would be best for exploring the relationship between a categorical and a non-categorical variable?
13. What is the role of confidence intervals in inferential data analysis? How is this similar or differnt to the role of p-values?
14. What is the role of effect size in inferential data analysis? How is this similar or differnt to the role of p-values?
:::

<!--
Note:

IDA: Questions to consider:

- Continuous outcome variable:
    - The relationship between lexical retrieval (decisions, naming) and measures of frequency (observed frequency, adjusted frequency) and/ or Age of acquisition or Concreteness. (see @Gries2009a, p. 1-2)
      - ACTIVE-ES in-field testing (lexical retrieval)
- Categorical outcome variable:
    - ...
-->
