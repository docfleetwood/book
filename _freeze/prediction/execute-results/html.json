{
  "hash": "b28f809d625649d3b60efbfe9534e9d6",
  "result": {
    "markdown": "---\nexecute: \n  echo: true\n  cache: true\n---\n\n\n# Prediction {#sec-prediction}\n\n\n\n\n\n\n\n... Quote ...\n\n::: callout-note\n## Keys\n\n- ...\n:::\n\n\n::: {.cell layout-align=\"center\" hash='prediction_cache/html/prediction-data-packages_3a306af1e8bdee184e482c1bdd39e6fd'}\n\n:::\n\n\nIn this chapter I present an introduction to approaches to data analysis known as machine learning, specifically supervised learning. In a nutshell, the aim of supervised learning is to leverage a potential relationship between a target or outcome variable and a set of other variables (features) derived from text to create a statistical generalization (model) that can accurately predict the values of the target variable using the values of the feature variables. We consider practical tasks as well as theoretical applications of the statistical learning in text analysis highlighting the standard workflow for building predictive models, testing and evaluating models, working to improve model performance, and how to interpret and report findings.\n\n::: callout-tip\n## Swirl\n\n**What**: [Supervised Learning](https://github.com/lin380/swirl)\\\n**How**: In the R Console pane load `swirl`, run `swirl()`, and follow prompts to select the lesson.\\\n**Why**: ...\n:::\n\n\n- Overview:\n    - Research goals (predict, prescribe, verify)\n    - Use of data\n        - Partitioned: training (reusable) and test (reserved) sets\n        - Outcome variable and predictor/ covariate variables\n        - Fixed outcome and mutable predictor variables/ features\n    - Methods\n        - Supervised machine learning methods\n            - Regression\n            - Classification\n    - Data types/ structures\n        - Matrices\n    - Interpreting results (quantitative)\n        - Summary statistics: \n            - Accuracy\n            - Precision\n            - Recall\n            - F1\n            - Confusion matrix\n- Supervised machine learning analysis\n    - Methods: \n        - Regression (continuous outcome variable)\n            - Linear regression\n            - Decision trees\n            - Neural networks\n        - Classification (categorical outcome variable)\n            - Logistic regression\n            - Decision trees\n            - Neural networks\n\n\n\n<!---\n\nSupervised machine learning is a type of artificial intelligence that involves training a model on a labeled dataset where the input data and desired output are both provided. The model is able to make predictions or classifications based on the input data by learning the relationships between the input and output data. Supervised machine learning is an important tool for linguists studying language and communication, as it allows them to analyze language data and identify patterns or trends in language use. There are two main types of supervised machine learning algorithms: classification, which is used to predict a categorical outcome such as the genre of a text, and regression, which is used to predict a continuous outcome such as the sentiment of a text. In order to use supervised machine learning, linguists must first prepare the data by cleaning and preprocessing it, and then split the data into training and testing sets. The model is then trained on the training data and evaluated on the testing data, and the hyperparameters of the model may be adjusted to optimize its performance. Some applications of supervised machine learning in linguistics include text classification, part-of-speech tagging, and language identification. Supervised machine learning is an active area of research in linguistics, with many potential applications and areas for further exploration.\n\n\nI. Introduction to supervised machine learning\nA. Definition of supervised machine learning\ni. Supervised machine learning involves training a model on a labeled dataset where the input data and desired output are both provided\nii. The model is able to make predictions or classifications based on the input data by learning the relationships between the input and output data\nB. Importance of supervised machine learning for linguistics\ni. Supervised machine learning can be used to analyze language data and identify patterns or trends in language use\nii. Supervised machine learning can help linguists classify texts, predict language evolution, and identify language-specific features\n\nII. Types of supervised machine learning algorithms\nA. Classification\ni. Classification algorithms are used to predict a categorical outcome, such as whether a text belongs to a particular genre\nii. Examples of classification algorithms include decision trees, logistic regression, and support vector machines\nB. Regression\ni. Regression algorithms are used to predict a continuous outcome, such as the sentiment of a text\nii. Examples of regression algorithms include linear regression and multiple linear regression\n\nIII. Preparing data for supervised machine learning\nA. Data preprocessing\ni. Data preprocessing involves cleaning and preparing the data for analysis\nii. This may include tasks such as removing missing values, scaling the data, and encoding categorical variables\nB. Data splitting\ni. Data splitting involves dividing the data into training and testing sets\nii. The training set is used to train the model, while the testing set is used to evaluate the model's performance\n\nIV. Training and evaluating a supervised machine learning model\nA. Training a model\ni. Training a model involves providing the model with the training data and adjusting the model's parameters to minimize the error between the model's predictions and the true output\nB. Evaluating a model\ni. Evaluating a model involves using the testing data to measure the model's performance\nii. Common evaluation metrics for supervised machine learning include accuracy, precision, and recall\nC. Tuning model hyperparameters\ni. Hyperparameters are the parameters of the machine learning model that are set before training begins\nii. Tuning hyperparameters involves adjusting the values of the hyperparameters to optimize the model's performance\n\nV. Applications of supervised machine learning in linguistics\nA. Text classification\ni. Text classification involves categorizing texts into predefined categories, such as genre or topic\nii. Supervised machine learning can be used to classify texts based on their content or linguistic features\nB. Part-of-speech tagging\ni. Part-of-speech tagging involves assigning a part of speech to each word in a text\nii. Supervised machine learning can be used to identify the part of speech of a word based on its context and other linguistic features\nC. Language identification\ni. Language identification involves determining the language of a text\nii. Supervised machine learning can be used to identify the language of a text based on its content or linguistic features\n\nVI. Conclusion\nA. Recap of key points\ni. Supervised machine learning is a type of machine learning that involves training a model on a labeled dataset\nii. Supervised machine learning can be used to classify texts, predict language evolution, and identify language-specific features\nB. Future directions for supervised machine learning in linguistics\ni. Supervised machine learning is an active area of research in linguistics, with many potential applications and areas for further exploration\nii. Future research may focus on developing more sophisticated\n\n\n\n# Research\n\nStrengths:\n1. Neural networks are able to capture complex relationships between words and phrases in text.\n2. Neural networks can learn from large amounts of data and can be trained to classify text with high accuracy.\n3. Neural networks can be used to classify text into multiple categories.\n4. Neural networks can be used to identify patterns in text that are not easily detected by traditional methods.\n\nWeaknesses:\n1. Neural networks require a large amount of data to train and can be computationally expensive.\n2. Neural networks can be prone to overfitting if the data is not properly preprocessed.\n3. Neural networks can be difficult to interpret and explain due to their complexity.\n4. Neural networks can be sensitive to noise and outliers in the data.\n\n\n-->\n\n\n## Activities {.unnumbered}\n\n::: callout-tip\n## Recipe\n\n**What**: [Statistical inference: prep, assess, interrogate, evaluate, and report](https://lin380.github.io/tadr/articles/recipe_9.html)\\\n**How**: Read Recipe 9 and participate in the Hypothes.is online social annotation.\\\n**Why**: To illustrate some common coding strategies for preparing datasets for inferential data analysis, as well as the steps conduct descriptive assessment, statistical interrogation, and evaluation and reporting of results.\n:::\n\n::: callout-tip\n## Lab\n\n**What**: [Statistical inference: prep, assess, interrogate, evaluate, and report](https://github.com/lin380/lab_9)\\\n**How**: Clone, fork, and complete the steps in Lab 9.\\\n**Why**: To gain experience working with coding strategies to prepare, assess, interrogate, evaluate, and report results from an inferential data analysis, practice transforming datasets and visualizing relationships, and implement organizational strategies for organizing and reporting results in a reproducible fashion.\n:::\n\n## Questions {.unnumbered}\n\n::: callout-note\n## Conceptual questions\n\n1. What is the difference between a continuous and a categorical variable?\n2. What is the difference between a regression and a classification model?\n3. What is the difference between a training set and a testing set?\n4. What is the difference between a hyperparameter and a parameter?\n5. What is the difference between a supervised and an unsupervised machine learning model?\n6. What advantages and disadvantages do supervised machine learning models have over traditional methods of text analysis?\n7. What are some potential applications of supervised machine learning in linguistics?\n\n:::\n\n::: callout-note\n## Technical exercises\n\n1. Write a program to build a classification model which uses a set of collected text features to predict a target variable.\n2. Use the classification model to classify a series of documents and assess the accuracy of the model.\n3. Develop a regression model which uses text features to predict a continuous target variable.\n4. Create a text mining application to analyze a large body of text and discover correlations between variables.\n5. Use a clustering algorithm to discover clusters in a large dataset, and create a visualization to present the identified clusters.\n6. Analyze the structure of a text corpus and identify patterns in word usage and feature distributions.\n7. Build a predictive model using text as an input and binary or categorical outcomes as the target.\n8. Develop a natural language processing application which classifies text into predefined categories using a supervised learning algorithm.\n9. Use a supervised learning algorithm to build a predictive model which classifies a set of unseen texts into predefined categories.\n10. Develop a web application which allows users to easily explore a set of text documents, visualize the content of the documents, and generate predictive models from the text.\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}