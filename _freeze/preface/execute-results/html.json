{
  "hash": "82d02f40fd9678a97d8ec9b7ec5161a8",
  "result": {
    "markdown": "# Preface {#sec-preface .unnumbered}\n\n\n\n\n\n\n\n<!-- TODO:\n\n- [ ] Add approach section information.\n  - [ ] Add information on the 'tidyverse' and why it is used in this textbook.\n  - [ ] Add information on the 'tidy' approach to data.\n  - [ ] ...\n- [ ] Consider whether to advocate for RStudio Desktop/ Cloud or include VS Code as an alternative.\n- [ ] Update resources (Text as Data to Quantitative Text Analysis Resources `qtalr` site and package)\n  - [ ] Change GitHub organization name to `qtalr`\n- [ ] Change callouts to greyscale (no color)\n  - [ ] Edit Latex output to include callout icons (used in HTML)\n  - [ ] Change code blocks to greyscale (no color)\n- [ ] Change images and figures (plots) to greyscale (no color)\n- [ ] Change tables and verbatim wrapping for latex output\n- [ ] Add activity questions to this preface chapter\n\n-->\n\n> The journey of a thousand miles begins with one step.\n>\n> --- [Lao Tzu](https://en.wikipedia.org/wiki/Laozi)\n\n::: callout-note\n## Keys\n\n-   What is the rationale for this textbook?\n-   What are the aims and the approach taken in this textbook?\n-   How is the textbook designed to support attaining these aims?\n-   What is needed to get started?\n:::\n\nThis chapter aims to provide a brief summary of current research trends that form the context for the rationale for this textbook. It also provides instructors and readers an overview of the aims and approach of the textbook, a description of the main components of each section and chapter, a guide to conventions used in the book, and a summary of the supporting resources available. Additionally information on setting up your computing environment and where to seek support is included.\n\n## Rationale {.unnumbered}\n\nIn recent years there has been a growing buzz around the term 'Data Science' and related terms; data analytics, data mining, *etc*. In a nutshell data science is the process by which an investigator leverages statistical methods and computational power to uncover insight from machine-readable data sources. Driven in large part by the increase in computing power available to the average individual and the increasing amount of electronic data that is now available through the internet, interest in data science has expanded to virtually all fields in academia and areas in the public sector.\n\nThis textbook is an introduction to the fundamental concepts and practical programming skills from data science applied to the task of quantitative text analysis. The intended readership for this textbook is primarily undergraduate students but may also be applicable to graduate students and researchers looking to expand their methodological toolbox. This textbook aims to meet the growing interest in quantitative data analysis methods taking hold across linguistics subfields and language-informed disciplines (digital humanities, political science, economics, *inter alia*). To ensure that this resource is accessible to a wide variety of students and researchers it does not assume a background in linguistics. Additionally, some readers interested in the aforementioned disciplines may lack experience with and/ or feel hesitant towards statistical methods and/ or programming. To make this textbook attractive to novices in quantitative text analysis methods, I will make no assumptions about the reader's experience with quantitative data analysis or programming, in general, or programming with the statistical programming language R, in particular.\n\n## Aims {.unnumbered}\n\nThis textbook aims to develop the reader's proficiency in three main areas:\n\n**Data literacy**: the ability to interpret, assess, and contextualize findings based on data. Throughout this textbook we will explore topics which will help you understand how data analysis methods derive insight from data. In this process you will be encouraged to critically evaluate connections across linguistic and language-related disciplines using data analysis knowledge and skills. Data literacy is an invaluable skillset for academics and professionals but also is an indispensable aptitude for in the 21st century citizens to navigate and actively participate in the 'Information Age' in which we live [@Carmi2020].\n\n**Research skills**: the ability to conduct original research, communicate findings, and make meaningful connections with findings in the literature of the field. This target area does not differ significantly, in spirit, from common learning outcomes in a research methods course: identify an area of investigation, develop a viable research question or hypothesis, collect relevant data, analyze data with relevant statistical methods, and interpret and communicate findings. However, working with text will incur a series of key steps in the selection, collection, and preparation of the data that are unique to text analysis projects. In addition, I will stress the importance of research documentation and creating reproducible research as an integral part of modern scientific inquiry [@Buckheit1995].\n\n**Programming skills**: the ability to implement research skills programmatically and produce research that is replicable and collaborative. Modern data analysis, and by extension, text analysis is conducted using programming. There are various key reasons for this: (1) programming affords researchers unlimited research freedom --if you can envision it, you can program it. The same cannot be said for off-the-shelf software which is either proprietary or unmaintained --or both. (2) Programming underlies well-documented and reproducible research --documenting button clicks and menu option selections leads to research which is not readily reproduced, either by some other researcher or by your future self! (3) Programming invites researchers to engage more intimately with the data and the methods for analysis. The more familiar you are with the data and the methods the more likely you are to produce higher quality work.\n\n## Approach {.unnumbered}\n\nGoals\n\n-   Include the **importance of goal-driven research** (real research problems used in the text)\n\n-   **Emphasize statistical thinking** as part of the goal formation process through data organization and visualization\n\n-   **Ensure communication is the end goal** with literate programming from the outset.\n\nImplementation\n\n-   Programming approach\n\n    -   Flexibility\n\n    -   Transparency\n\n    -   Reproducibility\n\n-   Why R?\n\n    -   One stop shopping\n\n    -   You are not alone\n\n    -   Robust IDE (RStudio)\n\n-   Why the Tidyverse?\\\n    The 'tidyverse' is a set of packages which are designed to work around the principle of tidy data. The 'tidy' approach to to data has caught on in the R programming community and the set of packages which implement this approach to R programming is rapidly growing. The 'tidyverse' approach to R programming is attractive for a number of reasons:\n\n    -   primary data format is assummed to be a tidy data frame, or tibble (more on this later)\n\n    -   operations are often chained together through a convention known as 'piping' which provides the ability to process data in logical chunks, only assigning output at meaningful stages.\n\n    -   consistent functions and expected output- workflow coverage for the main components of data science: import, tidy, transform/ visualize/ model, and communicate\n\n    -   \\...\n\n<!-- Many textbooks on doing 'Data Science', even those that have a domain-centric approach, such as text analysis, tend to focus on the 'tidy' approach, seen in Figure @ref(fig:tidy-workflow-img) from @Wickham2017.  -->\n\n\n\n\n\n<!-- However these resources tend to underrepresent the importance of establishing a research question and implementation plan. A big part, or perhaps the biggest part of doing quantitative research, and research in general is what is the question to be addressed. I think a central advantage to this coursebook for language researchers is to thread the project goals from a conceptual point of view without technical implementation in mind first. Then, after establishing a viable vision about what the data should look like, how it should be analyzed, and how the analysis will contribute to knowledge in the field, we can move towards implementing these preliminary formulations in R code in a reproducible fashion. In essence this approach reflects [the classic separation between content and format](https://en.wikipedia.org/wiki/Separation_of_content_and_presentation) â€“the content of our research should precede the format it should or will take. -->\n\n## Resources {.unnumbered}\n\nThis textbook includes three resources to support learning in the areas of Data literacy, Research skills, and Programming skills in a systematic chapter-related fashion: 1) the textbook itself which includes prose discussion, figures/tables, R code, and thought and practical exercises, 2) a companion website \"[Text as Data Resources](https://lin380.github.io/tadr/)\" which includes programming tutorials and demonstrations to develop and augment the reader's recognition of how programming strategies are implemented, and 3) a [GitHub repository](https://github.com/lin380) which contains both a set of interactive R programming lessons ([Swirl](https://github.com/lin380/swirl)) and [lab exercises](https://github.com/stars/francojc/lists/labs) which guide the reader through practical hands-on programming applications.\n\n## Conventions {.unnumbered}\n\n<!--# Add: package name, function name, variable name conventions -->\n\nThis textbook is about the concepts for understanding and the techniques for doing quantitative text analysis with R. Therefore there will be an intermingling of prose and code presented. As such, an attempt to establish consistent conventions throughout the text has been made to signal the reader's attention as appropriate.\n\nIn terms of prose, key concepts will be signaled using **bold**, package names will appear in title case (Tidyverse), function names will appear as verbatim text with parentheses (`read_csv()`) and object names as verbatim text without parentheses (`variable_1`).\n\nAs we explore concepts, R code itself will be incorporated into the text. For example, the code block in @lst-code-block shows actual R code and the results that are generated when running this code. Note that the hashtag `#` to the right of `1 + 1` signals the beginning of a **code comment**. Everything right of the `#` is not run as code. In this textbook you will see code comments above code on a separate line and sometimes to the right of code on the same line. The code follows within the same code block and a subsequent code blocks display the output of the code.\n\n``` {#lst-code-block .r lst-cap=\"Example code block\"}\n1 + 1 # Add 1 plus 1\n```\n\n\n::: {.cell layout-align=\"center\" hash='preface_cache/html/code-block_e325f6b3efbe03f2aaab235ca6e15d14'}\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 2\n```\n:::\n:::\n\n\nCode blocks which make use of functions will be hyperlinked to the function's online documentation.\n\n\n::: {.cell layout-align=\"center\" hash='preface_cache/html/code-block-function_90e39c42f3f6b6390d9eb6901254b862'}\n\n```{.r .cell-code}\npaste(\"Hello world!\") # simple 'hello world' message\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Hello world!\"\n```\n:::\n:::\n\n\nInline code will be used when code blocks are short and the results are not needed for display. For example, the same code as above will sometimes appear as `1 + 1`.\n\nAt times meta-description of code or code chunk options will appear. This is particularly relevant for descriptions on authoring Quarto documents.\n\n``` {{r}}\n#| label: test-code \n#| include: false\n1 + 1 # Add 1 plus 1\n```\n\nThere is a series of text blocks that will be used to signal the reader's attention.\n\nKey points summarize the main points to be covered in a chapter or a subsection of the text.\n\n::: callout-note\n## Keys\n\n-   What is the rationale for this textbook?\n-   What are the aims and the approach taken in this textbook?\n-   How is the textbook designed to support attaining these aims?\n-   What is needed to get started?\n:::\n\nFrom time to time there will be points for you to consider and questions to explore.\n\n::: callout-important\n## Consider {.unnumbered}\n\nConsider the objectives in this course: what ways can the knowledge and skills you will learn benefit you in your academic studies and/ or professional and personal life?\n:::\n\nCase studies are provided in-line which highlight key concepts and/ or methodological approaches relevant to the current topic or section.\n\n::: callout-caution\n## Case study {.unnumbered}\n\n@Eisenstein2012 track the geographic spread of neologisms from city to city in the United States using Twitter data collected between 6/2009 and 5/2011. They only used tweets with geolocation data and then associated each tweet with a zipcode using the US Census. The most populous metropolitan areas were used. They also used the demographics from these areas to make associations between lexical innovations and demographic attributes. From this analysis they are able to reconstruct a network of linguistic influence. One of the main findings is that demographically-similar cities are more likely to share linguistic influence. At the individual level, there is a strong, potentially stronger role of demographics than geographical location.\n:::\n\nSwirl interactive R programming lessons appear at the beginning of each chapter. The lessons provide a guided environment to experience running code in the R console. The instructions to install the `swirl` package and the textbook lessons can be found on the \"[Text as Data Resources](https://lin380.github.io/tadr)\" site or directly from [GitHub](https://github.com/lin380/swirl).\n\n::: callout-tip\n## Swirl {.unnumbered}\n\n**What**: [Intro to Swirl](https://github.com/lin380/swirl)\\\n**How**: In the R Console pane load `swirl`, run `swirl()`, and follow prompts to select the lesson.\\\n**Why**: To familiarize you with navigating, selecting, and completing swirl lessons.\n:::\n\nAt the end of each chapter, a text block will provide readers a cue to explore the applied programming demonstrations called \"[Recipes](https://lin380.github.io/tadr/articles/)\" on the \"[Text as Data Resources](https://lin380.github.io/tadr)\" site. Readers may add online annotations using the built-in social annotation tool [hypothes.is](https://web.hypothes.is/education/annotated/research/). *Note: Instructors may opt to [create their own private Hypothes.is annotation group](https://web.hypothes.is/creating-groups/).*\n\n::: callout-tip\n## Recipe {.unnumbered}\n\n**What**: [Literate programming I](https://lin380.github.io/tadr/articles/recipe_1.html)\\\n**How**: Read Recipe 1 and participate in the Hypothes.is online social annotation.\\\n**Why**: To introduce the concept of Literate Programming using R, RStudio, and R Markdown.\n:::\n\nHands-on lab activities to implement and extend programming strategies round out each chapter. These labs are found on [GitHub](https://github.com/lin380?q=lab&type=all&language=&sort=name) and can be downloaded and/ or cloned to any RStudio instance (either your computer or on the web [RStudio Cloud](https://www.rstudio.com/products/cloud/)).\n\n::: callout-tip\n## Lab {.unnumbered}\n\n**What**: [Literate programming I](https://github.com/lin380/lab_1)\\\n***How***: Clone, fork, and complete the steps in Lab 1.\\\n**Why**: To put literate programming techniques covered in Recipe 1 into practice. Specifically, you will create and edit an R Markdown document and render a report in PDF format.\n:::\n\nTips are used to signal helpful tips and warnings that might otherwise be overlooked.\n\n::: callout-warning\n## Tip\n\nDuring a the course of an exploratory work session, many R objects are often created to test ideas. At some point inspecting the workspace becomes difficult due to the number of objects displayed using `ls()`.\n\nTo remove all objects from the workspace, use `rm(list = ls())`.\n:::\n\n<!-- Errors will be an inevitable part of learning to code, but some errors can be avoided. The text will used the warning text block to highlight common pitfalls and errors. -->\n\nAlthough this is not intended to be a in-depth introduction to statistical techniques, mathematical formulas will at times be included in the text. These formulas will appear either inline $1 + 1 = 2$ or as block equations as in @eq-example-formula.\n\n$$\n\\hat{c} = \\underset{c \\in C} {\\mathrm{argmax}} ~\\hat{P}(c) \\prod_i \\hat{P}(w_i|c)\n$$ {#eq-example-formula}\n\nData analysis leans heavily on graphical representations. Figures will appear numbered, as in @fig-test-fig.\n\n\n::: {.cell layout-align=\"center\" hash='preface_cache/html/fig-test-fig_86140a42f706d4146994e3ea71a42cbc'}\n::: {.cell-output-display}\n![Test plot from mtcars dataset](preface_files/figure-html/fig-test-fig-1.png){#fig-test-fig fig-align='center' width=480}\n:::\n:::\n\n\nTables, such as @tbl-test-table will be numbered separately from figures.\n\n\n::: {#tbl-test-table .cell layout-align=\"center\" tbl-cap='Here is a nice table!' hash='preface_cache/html/tbl-test-table_3e6f811f0d52ee9a3caac278fc8d3dad'}\n::: {.cell-output-display}\n| Sepal.Length| Sepal.Width| Petal.Length| Petal.Width|Species |\n|------------:|-----------:|------------:|-----------:|:-------|\n|          5.1|         3.5|          1.4|         0.2|setosa  |\n|          4.9|         3.0|          1.4|         0.2|setosa  |\n|          4.7|         3.2|          1.3|         0.2|setosa  |\n|          4.6|         3.1|          1.5|         0.2|setosa  |\n|          5.0|         3.6|          1.4|         0.2|setosa  |\n|          5.4|         3.9|          1.7|         0.4|setosa  |\n|          4.6|         3.4|          1.4|         0.3|setosa  |\n|          5.0|         3.4|          1.5|         0.2|setosa  |\n|          4.4|         2.9|          1.4|         0.2|setosa  |\n|          4.9|         3.1|          1.5|         0.1|setosa  |\n:::\n:::\n\n\n## Getting started {.unnumbered}\n\nBefore jumping in to this and subsequent chapter's textbook activities, it is important to prepare your computing environment and understand how to take advantage of the resources available, both those directly and indirectly associated with the textbook.\n\n### R and RStudio {.unnumbered}\n\nProgramming is the backbone for modern quantitative research. R is a popular programming language with statisticians and was adopted by many other fields in natural and social sciences. It is freely downloadable from [The R Project for Statistical Programming](https://www.r-project.org/) website and is available for [macOS, Linux, and Windows](https://cloud.r-project.org/) operating systems.\n\nWhile R code can be written and executed in many different environments, [RStudio](https://www.rstudio.com/products/rstudio/) provides a very powerful interface that has been widely adopted by R programmers. RStudio is an IDE (Integrated Development Environment) and serves as a dashboard for working with R --therefore you must download and install R before installing RStudio. You may choose to run RStudio on your own computer ([RStudio Desktop](https://www.rstudio.com/products/rstudio/)) or use RStudio on the web ([RStudio Cloud](https://www.rstudio.com/products/cloud/)). There are advantages to both approaches. Either approach will be compatible with this textbook but if you plan to continue to work with R/RStudio in the future at some point you will most likely want to install the desktop version and maintain your own R and RStudio environment.\n\nFor more details to install R and RStudio consult the [RStudio Education](https://education.rstudio.com/learn/beginner/) page.\n\n### R packages {.unnumbered}\n\nThroughout your R programming journey you will take advantage of code created by other R users in the form of packages. A package is a downloadable set of functions and/ or datasets which aim to accomplish a given cohesive set of related tasks. There are official R package repositories such as [CRAN](https://cran.r-project.org/) (Comprehensive R Archive Network) and other packages are available on code-sharing repositories such as [GitHub](https://github.com/).\n\n::: callout-note\n## Consider {.unnumbered}\n\nThe Comprehensive R Archive Network (CRAN) includes groupings of popular packages related to a given applied programming task called [Task Views](https://cran.r-project.org/web/views/). Explore the available CRAN Task Views listings. Note the variety of areas (tasks) that are covered in this listing. Now explore in more detail one of the following task views which are directly related to topics covered in this textbook noting the associated packages and their descriptions: (1) Cluster, (2) MachineLearning, (3) NaturalLanguageProcessing, or (4) ReproducibleResearch.\n:::\n\nYou will download a number of packages at different stages of this textbook, but there is a set of packages that will be key to have from the get go. Once you have access to a working R/ RStudio environment, you can proceed to install the following packages.\n\nInstall the following packages from CRAN.\n\n-   `tidyverse`\n-   `rmarkdown`\n-   `tinytex`\n-   `devtools`\n-   `usethis`\n-   `swirl`\n\nYou can do this by running the following code in the RStudio Console pane.\n\n``` r\n # install key packages from CRAN\ninstall.packages(c(\"tidyverse\", \"rmarkdown\", \"tinytex\", \"devtools\", \"usethis\", \"swirl\"))\n```\n\nOr you can use the RStudio Packages pane and click 'Install' and type the names of the packages.\n\nThis textbook includes a support package `tadr` which is available on GitHub ([source code](https://github.com/lin380/tadr)). To install this package from a GitHub repository, you run the following code in the RStudio Console pane:\n\n``` r\n# install the tadr package from GitHub\ndevtools::install_github(\"lin380/tadr\") \n```\n\nFinally, although not a package we will need to download the interactive R programming lessons for this textbook that will be accessed with the `swirl` package. Download these lessons by running the following code in the RStudio Console pane.\n\n``` r\n# install the swirl lessons for this textbook\nswirl::install_course_github(\"lin380\", \"swirl\")\n```\n\nLater in this Preface and then at the beginning of each subsequent chapter there will be swirl lessons to complete. To load and choose a lesson to start, you will run the following code in the RStudio Console pane.\n\n``` r\n# load the swirl package\nlibrary(swirl) \n# run swirl\nswirl()\n```\n\nYou will then follow the prompts to select and complete the desired lesson.\n\n### Git and GitHub {.unnumbered}\n\n[GitHub](https://github.com/) is a code sharing website. Modern computing is highly collaborative and GitHub is a very popular platform for sharing and collaborating on coding projects. The [lab exercises for this textbook](https://github.com/stars/francojc/lists/labs) are shared on GitHub. To access and complete these exercises you will need to [sign up for a (free) GitHub account](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home) and then set up the version control software `git` on your computing environment. `git` is the conduit to interfacing GitHub and for many `git` will already be installed on your computer (or cloud computing environment). To verify your installation (or for installation instructions) and to set up your `git` configuration, consult the very useful [Happy Git and GitHub for the useR](https://happygitwithr.com/) chapter [Install Git](https://happygitwithr.com/install-git.html).\n\n### Getting help {.unnumbered}\n\nThe technologies employed in this approach to text analysis will include a somewhat steep learning curve. And in all honesty, the learning never stops! Experienced programmers and novices alike require support. Fortunately there is a very large community of programmers who have developed many official support resources and who actively contribute to unofficial discussion forums. Together these resources provide ample methods for overcoming any challenge.\n\nThe easiest and most convenient place to get help with either R or RStudio is through the RStudio \"Help\" toolbar menu. There you will find links to help resources, guides, and manuals. R packages often include \"Vignettes\" (long-form documentation and demonstrations). These can be accessed either by running `browseVignettes()` in the RStudio Console pane or by searching for the package using a search engine in your web browser and consulting the package documentation there (e.g. [`usethis`](https://usethis.r-lib.org/)). For some of the more common packages you can find [cheatsheets](https://www.rstudio.com/resources/cheatsheets/) on the RStudio website.\n\nFor Git and GitHub I recommend [Happy Git and GitHub for the useR](https://happygitwithr.com/) but the official [Git](https://git-scm.com/doc) and [GitHub](https://docs.github.com/en) documentation pages are great resources as well.\n\nThere are a number of very popular discussion forum websites where the programming community asks and answers questions to real-world issues. These sites often have subsections dedicated to particular programming languages or software. Here is a list of some of the most useful in my experience:\n\n-   StackOverflow: [R](https://stackoverflow.com/questions/tagged/r), [Git](https://stackoverflow.com/questions/tagged/git), [RStudio](https://stackoverflow.com/questions/tagged/rstudio), [GitHub](https://stackoverflow.com/questions/tagged/github)\n-   Reddit: [R](https://www.reddit.com/r/rstats/), [Git](https://www.reddit.com/r/git/), [RStudio](https://www.reddit.com/r/RStudio/), [Github](https://www.reddit.com/r/github/)\n-   [RStudio Community](https://community.rstudio.com/)\n\nIf you post a question on one of these communities ensure that if your question involves some coding issue or error that you provide enough background such that the community will be able to help you. <!--# Add description on creating a reproducible example... -->\n\n-   https://reprex.tidyverse.org/\n\n-   https://github.com/MilesMcBain/datapasta\n\nThe take-home message here is that you are not alone. There are many people world-wide that are learning to program and/ or contribute to the learning of others. The more you engage with these resources and communities the more successful your learning will be. As soon as you are able, pay it forward. Posting questions and offering answers helps the community and engages and refines your skills --a win-win.\n\n## Summary {.unnumbered}\n\nIn this preface I've provided the rationale and aims of this textbook. The structure of the texbook and the associated resources work to scaffold your learning and proficiency in the areas of Data literacy, Research skills, and Programming skills. The textbook include a series of conventions to signal important concepts, questions to explore, and resources available. As in the area of Data Science in general, quantitative text analysis is most effectively conducted using programmatic approaches. The process will not be without challenges but the gains are well worth the effort. I've outlined key resources to obtain support that are invaluable for the novice as well as the seasoned practitioner.\n\n## Activities {.unnumbered}\n\n::: callout-note\n## Swirl {.unnumbered}\n\n**What**: [Intro to Swirl](https://github.com/lin380/swirl)\\\n**How**: In the R Console pane load `swirl`, run `swirl()`, and follow prompts to select the lesson.\\\n**Why**: To familiarize you with navigating, selecting, and completing swirl lessons.\n:::\n\n::: callout-note\n## Recipe {.unnumbered}\n\n**What**: [Literate programming I](https://lin380.github.io/tadr/articles/recipe_1.html)\\\n**How**: Read Recipe 1 and participate in the Hypothes.is online social annotation.\\\n**Why**: To introduce the concept of Literate Programming using R, RStudio, and R Markdown.\n:::\n\n::: callout-note\n## Lab {.unnumbered}\n\n**What**: [Literate programming I](https://github.com/lin380/lab_1)\\\n**How**: Clone, fork, and complete the steps in Lab 1.\\\n**Why**: To put literate programming techniques covered in Recipe 1 into practice. Specifically, you will create and edit an R Markdown document and render a report in PDF format.\n:::\n\n## Questions {.unnumbered}\n\n::: callout-note\n## Conceptual questions\n\n1. ...\n2. ...\n\n:::\n\n::: callout-note\n## Technical exercises\n\n1. ...\n2. ...\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}